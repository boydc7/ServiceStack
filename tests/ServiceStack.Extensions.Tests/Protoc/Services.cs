// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: services.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ServiceStack.Extensions.Tests.Protoc {

  /// <summary>Holder for reflection information generated from services.proto</summary>
  public static partial class ServicesReflection {

    #region Descriptor
    /// <summary>File descriptor for services.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ServicesReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5zZXJ2aWNlcy5wcm90bxoWcHJvdG9idWYtbmV0L2JjbC5wcm90byIoCglB",
            "ZGRIZWFkZXISDAoETmFtZRgBIAEoCRINCgVWYWx1ZRgCIAEoCSI5CgVBZGhv",
            "YxIKCgJJZBgBIAEoBRISCgpmaXJzdF9uYW1lGAIgASgJEhAKCExhc3ROYW1l",
            "GAMgASgJIvIDCglBbGxGaWVsZHMSCgoCSWQYASABKAUSEgoKTnVsbGFibGVJ",
            "ZBgCIAEoBRIMCgRCeXRlGAMgASgNEg0KBVNob3J0GAQgASgFEgsKA0ludBgF",
            "IAEoBRIMCgRMb25nGAYgASgDEg4KBlVTaG9ydBgHIAEoDRIMCgRVSW50GAgg",
            "ASgNEg0KBVVMb25nGAkgASgEEg0KBUZsb2F0GAogASgCEg4KBkRvdWJsZRgL",
            "IAEoARIdCgdEZWNpbWFsGAwgASgLMgwuYmNsLkRlY2ltYWwSDgoGU3RyaW5n",
            "GA0gASgJEh8KCERhdGVUaW1lGA4gASgLMg0uYmNsLkRhdGVUaW1lEh8KCFRp",
            "bWVTcGFuGA8gASgLMg0uYmNsLlRpbWVTcGFuEhcKBEd1aWQYECABKAsyCS5i",
            "Y2wuR3VpZBInChBOdWxsYWJsZURhdGVUaW1lGBEgASgLMg0uYmNsLkRhdGVU",
            "aW1lEicKEE51bGxhYmxlVGltZVNwYW4YEiABKAsyDS5iY2wuVGltZVNwYW4S",
            "HwoMTnVsbGFibGVHdWlkGBMgASgLMgkuYmNsLkd1aWQSHQoERW51bRgUIAEo",
            "DjIPLkh0dHBTdGF0dXNDb2RlEiUKDE51bGxhYmxlRW51bRgVIAEoDjIPLkh0",
            "dHBTdGF0dXNDb2RlIhgKCEFueUhlbGxvEgwKBE5hbWUYASABKAkilgEKC0Fz",
            "c2lnblJvbGVzEhAKCFVzZXJOYW1lGAEgASgJEhMKC1Blcm1pc3Npb25zGAIg",
            "AygJEg0KBVJvbGVzGAMgAygJEiQKBE1ldGEYBCADKAsyFi5Bc3NpZ25Sb2xl",
            "cy5NZXRhRW50cnkaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoCToCOAEiwwEKE0Fzc2lnblJvbGVzUmVzcG9uc2USEAoIQWxsUm9s",
            "ZXMYASADKAkSFgoOQWxsUGVybWlzc2lvbnMYAiADKAkSLAoETWV0YRgDIAMo",
            "CzIeLkFzc2lnblJvbGVzUmVzcG9uc2UuTWV0YUVudHJ5EicKDlJlc3BvbnNl",
            "U3RhdHVzGAQgASgLMg8uUmVzcG9uc2VTdGF0dXMaKwoJTWV0YUVudHJ5EgsK",
            "A2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiuwMKDEF1dGhlbnRpY2F0",
            "ZRIQCghwcm92aWRlchgBIAEoCRINCgVTdGF0ZRgCIAEoCRITCgtvYXV0aF90",
            "b2tlbhgDIAEoCRIWCg5vYXV0aF92ZXJpZmllchgEIAEoCRIQCghVc2VyTmFt",
            "ZRgFIAEoCRIQCghQYXNzd29yZBgGIAEoCRISCgpSZW1lbWJlck1lGAcgASgI",
            "EhAKCENvbnRpbnVlGAggASgJEhEKCUVycm9yVmlldxgJIAEoCRINCgVub25j",
            "ZRgKIAEoCRILCgN1cmkYCyABKAkSEAoIcmVzcG9uc2UYDCABKAkSCwoDcW9w",
            "GA0gASgJEgoKAm5jGA4gASgJEg4KBmNub25jZRgPIAEoCRIWCg5Vc2VUb2tl",
            "bkNvb2tpZRgQIAEoCBITCgtBY2Nlc3NUb2tlbhgRIAEoCRIZChFBY2Nlc3NU",
            "b2tlblNlY3JldBgSIAEoCRINCgVzY29wZRgTIAEoCRIlCgRNZXRhGBQgAygL",
            "MhcuQXV0aGVudGljYXRlLk1ldGFFbnRyeRorCglNZXRhRW50cnkSCwoDa2V5",
            "GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLdAgoUQXV0aGVudGljYXRlUmVz",
            "cG9uc2USDgoGVXNlcklkGAEgASgJEhEKCVNlc3Npb25JZBgCIAEoCRIQCghV",
            "c2VyTmFtZRgDIAEoCRITCgtEaXNwbGF5TmFtZRgEIAEoCRITCgtSZWZlcnJl",
            "clVybBgFIAEoCRITCgtCZWFyZXJUb2tlbhgGIAEoCRIUCgxSZWZyZXNoVG9r",
            "ZW4YByABKAkSEgoKUHJvZmlsZVVybBgIIAEoCRINCgVSb2xlcxgJIAMoCRIT",
            "CgtQZXJtaXNzaW9ucxgKIAMoCRInCg5SZXNwb25zZVN0YXR1cxgLIAEoCzIP",
            "LlJlc3BvbnNlU3RhdHVzEi0KBE1ldGEYDCADKAsyHy5BdXRoZW50aWNhdGVS",
            "ZXNwb25zZS5NZXRhRW50cnkaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEoCRIN",
            "CgV2YWx1ZRgCIAEoCToCOAEiFgoUQ2hhbmdlQ29ubmVjdGlvbkluZm8iUwoI",
            "Q2hhbmdlRGISFwoPTmFtZWRDb25uZWN0aW9uGAEgASgJEhgKEENvbm5lY3Rp",
            "b25TdHJpbmcYAiABKAkSFAoMUHJvdmlkZXJOYW1lGAMgASgJIi4KEENoYW5n",
            "ZURiUmVzcG9uc2USGgoHUmVzdWx0cxgBIAMoCzIJLlJvY2tzdGFyIpsBCgtD",
            "aGF0TWVzc2FnZRIKCgJJZBgBIAEoAxIPCgdDaGFubmVsGAIgASgJEhIKCkZy",
            "b21Vc2VySWQYAyABKAkSEAoIRnJvbU5hbWUYBCABKAkSEwoLRGlzcGxheU5h",
            "bWUYBSABKAkSDwoHTWVzc2FnZRgGIAEoCRISCgpVc2VyQXV0aElkGAcgASgJ",
            "Eg8KB1ByaXZhdGUYCCABKAgijQEKFUNvbnZlcnRTZXNzaW9uVG9Ub2tlbhIX",
            "Cg9QcmVzZXJ2ZVNlc3Npb24YASABKAgSLgoETWV0YRgCIAMoCzIgLkNvbnZl",
            "cnRTZXNzaW9uVG9Ub2tlbi5NZXRhRW50cnkaKwoJTWV0YUVudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEi2AEKHUNvbnZlcnRTZXNzaW9u",
            "VG9Ub2tlblJlc3BvbnNlEjYKBE1ldGEYASADKAsyKC5Db252ZXJ0U2Vzc2lv",
            "blRvVG9rZW5SZXNwb25zZS5NZXRhRW50cnkSEwoLQWNjZXNzVG9rZW4YAiAB",
            "KAkSFAoMUmVmcmVzaFRva2VuGAMgASgJEicKDlJlc3BvbnNlU3RhdHVzGAQg",
            "ASgLMg8uUmVzcG9uc2VTdGF0dXMaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoCToCOAEiKgoKQ3JlYXRlVG9kbxINCgVUaXRsZRgB",
            "IAEoCRINCgVPcmRlchgCIAEoBSJUChJDcmVhdGVUb2RvUmVzcG9uc2USFQoG",
            "UmVzdWx0GAEgASgLMgUuVG9kbxInCg5SZXNwb25zZVN0YXR1cxgCIAEoCzIP",
            "LlJlc3BvbnNlU3RhdHVzIngKDkN1c3RvbVJvY2tzdGFyEhEKCUZpcnN0TmFt",
            "ZRgBIAEoCRIQCghMYXN0TmFtZRgCIAEoCRILCgNBZ2UYAyABKAUSGQoRUm9j",
            "a3N0YXJBbGJ1bU5hbWUYBCABKAkSGQoRUm9ja3N0YXJHZW5yZU5hbWUYBSAB",
            "KAkifgoUQ3VzdG9tUm9ja3N0YXJTY2hlbWESEQoJRmlyc3ROYW1lGAEgASgJ",
            "EhAKCExhc3ROYW1lGAIgASgJEgsKA0FnZRgDIAEoBRIZChFSb2Nrc3RhckFs",
            "YnVtTmFtZRgEIAEoCRIZChFSb2Nrc3RhckdlbnJlTmFtZRgFIAEoCSJUChRD",
            "dXN0b21TZWxlY3RSb2Nrc3RhchIKCgJJZBgBIAEoBRIRCglGaXJzdE5hbWUY",
            "AiABKAkSEAoITGFzdE5hbWUYAyABKAkSCwoDQWdlGAQgASgFIkoKHEN1c3Rv",
            "bVNlbGVjdFJvY2tzdGFyUmVzcG9uc2USCgoCSWQYASABKAUSEQoJRmlyc3RO",
            "YW1lGAIgASgJEgsKA0FnZRgDIAEoBSIYCgpEZWxldGVUb2RvEgoKAklkGAEg",
            "ASgDIh4KC0RlbGV0ZVRvZG9zEg8KA0lkcxgBIAMoA0ICEAAibAoORHluYW1p",
            "Y1JlcXVlc3QSKwoGUGFyYW1zGAEgAygLMhsuRHluYW1pY1JlcXVlc3QuUGFy",
            "YW1zRW50cnkaLQoLUGFyYW1zRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVl",
            "GAIgASgJOgI4ASI4Cg1FbXB0eVJlc3BvbnNlEicKDlJlc3BvbnNlU3RhdHVz",
            "GAEgASgLMg8uUmVzcG9uc2VTdGF0dXMicAoLRmlsZUNvbnRlbnQSDAoETmFt",
            "ZRgBIAEoCRIMCgRUeXBlGAIgASgJEg4KBkxlbmd0aBgDIAEoBRIMCgRCb2R5",
            "GAQgASgMEicKDlJlc3BvbnNlU3RhdHVzGAUgASgLMg8uUmVzcG9uc2VTdGF0",
            "dXMilAEKDkdldEFjY2Vzc1Rva2VuEhQKDFJlZnJlc2hUb2tlbhgBIAEoCRIW",
            "Cg5Vc2VUb2tlbkNvb2tpZRgCIAEoCBInCgRNZXRhGAMgAygLMhkuR2V0QWNj",
            "ZXNzVG9rZW4uTWV0YUVudHJ5GisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAk6AjgBIrQBChZHZXRBY2Nlc3NUb2tlblJlc3BvbnNl",
            "EhMKC0FjY2Vzc1Rva2VuGAEgASgJEi8KBE1ldGEYAiADKAsyIS5HZXRBY2Nl",
            "c3NUb2tlblJlc3BvbnNlLk1ldGFFbnRyeRInCg5SZXNwb25zZVN0YXR1cxgD",
            "IAEoCzIPLlJlc3BvbnNlU3RhdHVzGisKCU1ldGFFbnRyeRILCgNrZXkYASAB",
            "KAkSDQoFdmFsdWUYAiABKAk6AjgBInMKCkdldEFwaUtleXMSEwoLRW52aXJv",
            "bm1lbnQYASABKAkSIwoETWV0YRgCIAMoCzIVLkdldEFwaUtleXMuTWV0YUVu",
            "dHJ5GisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6",
            "AjgBIrUBChJHZXRBcGlLZXlzUmVzcG9uc2USHAoHUmVzdWx0cxgBIAMoCzIL",
            "LlVzZXJBcGlLZXkSKwoETWV0YRgCIAMoCzIdLkdldEFwaUtleXNSZXNwb25z",
            "ZS5NZXRhRW50cnkSJwoOUmVzcG9uc2VTdGF0dXMYAyABKAsyDy5SZXNwb25z",
            "ZVN0YXR1cxorCglNZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgJOgI4ASIXCgdHZXRGaWxlEgwKBFBhdGgYASABKAkiGAoIR2V0SGVsbG8S",
            "DAoETmFtZRgBIAEoCSIVCgdHZXRUb2RvEgoKAklkGAEgASgDIlEKD0dldFRv",
            "ZG9SZXNwb25zZRIVCgZSZXN1bHQYASABKAsyBS5Ub2RvEicKDlJlc3BvbnNl",
            "U3RhdHVzGAIgASgLMg8uUmVzcG9uc2VTdGF0dXMiCgoIR2V0VG9kb3MiUwoQ",
            "R2V0VG9kb3NSZXNwb25zZRIWCgdSZXN1bHRzGAEgAygLMgUuVG9kbxInCg5S",
            "ZXNwb25zZVN0YXR1cxgCIAEoCzIPLlJlc3BvbnNlU3RhdHVzIi0KCEhlbGxv",
            "Snd0EgwKBE5hbWUYASABKAkSEwoLQmVhcmVyVG9rZW4YAiABKAkiSwoQSGVs",
            "bG9Kd3RSZXNwb25zZRIOCgZSZXN1bHQYASABKAkSJwoOUmVzcG9uc2VTdGF0",
            "dXMYAiABKAsyDy5SZXNwb25zZVN0YXR1cyJICg1IZWxsb1Jlc3BvbnNlEg4K",
            "BlJlc3VsdBgBIAEoCRInCg5SZXNwb25zZVN0YXR1cxgCIAEoCzIPLlJlc3Bv",
            "bnNlU3RhdHVzIhYKBEluY3ISDgoGQW1vdW50GAEgASgFIrYBCgVNb3ZpZRIK",
            "CgJJZBgBIAEoBRIOCgZJbWRiSWQYAiABKAkSDQoFVGl0bGUYAyABKAkSDgoG",
            "UmF0aW5nGAQgASgJEhsKBVNjb3JlGAUgASgLMgwuYmNsLkRlY2ltYWwSEAoI",
            "RGlyZWN0b3IYBiABKAkSIgoLUmVsZWFzZURhdGUYByABKAsyDS5iY2wuRGF0",
            "ZVRpbWUSDwoHVGFnTGluZRgIIAEoCRIOCgZHZW5yZXMYCSADKAkiIAoITXVs",
            "dGlwbHkSCQoBWBgBIAEoBRIJCgFZGAIgASgFIiIKEE11bHRpcGx5UmVzcG9u",
            "c2USDgoGUmVzdWx0GAEgASgFIg8KDU5hbWVkUm9ja3N0YXIiNQoKUGFnaW5n",
            "VGVzdBIKCgJJZBgBIAEoBRIMCgROYW1lGAIgASgJEg0KBVZhbHVlGAMgASgF",
            "ImcKEVBvc3RDaGF0VG9DaGFubmVsEgwKBEZyb20YASABKAkSEAoIVG9Vc2Vy",
            "SWQYAiABKAkSDwoHQ2hhbm5lbBgDIAEoCRIPCgdNZXNzYWdlGAQgASgJEhAK",
            "CFNlbGVjdG9yGAUgASgJIgwKClF1ZXJ5QWRob2MiKQoTUXVlcnlBZGhvY1Jv",
            "Y2tzdGFycxISCgpmaXJzdF9uYW1lGAEgASgJIikKDlF1ZXJ5QWxsRmllbGRz",
            "EhcKBEd1aWQYASABKAsyCS5iY2wuR3VpZCKCCQoJUXVlcnlCYXNlEgwKBFNr",
            "aXAYASABKAUSDAoEVGFrZRgCIAEoBRIPCgdPcmRlckJ5GAMgASgJEhMKC09y",
            "ZGVyQnlEZXNjGAQgASgJEg8KB0luY2x1ZGUYBSABKAkSDgoGRmllbGRzGAYg",
            "ASgJEiIKBE1ldGEYByADKAsyFC5RdWVyeUJhc2UuTWV0YUVudHJ5Ek0KH1F1",
            "ZXJ5RGJfUm9ja3N0YXJfQ3VzdG9tUm9ja3N0YXIY/LBhIAEoCzIgLlF1ZXJ5",
            "RGJfUm9ja3N0YXJfQ3VzdG9tUm9ja3N0YXJIABJMCh5RdWVyeURiX1JvY2tz",
            "dGFyX1JvY2tzdGFyQWxpYXMYjITJLSABKAsyHy5RdWVyeURiX1JvY2tzdGFy",
            "X1JvY2tzdGFyQWxpYXNIABI0ChJRdWVyeURiX1BhZ2luZ1Rlc3QY9PbINCAB",
            "KAsyEy5RdWVyeURiX1BhZ2luZ1Rlc3RIABJIChxRdWVyeURiX0N1c3RvbVNl",
            "bGVjdFJvY2tzdGFyGO3ChTggASgLMh0uUXVlcnlEYl9DdXN0b21TZWxlY3RS",
            "b2Nrc3RhckgAEioKDVF1ZXJ5RGJfTW92aWUYk/K9PyABKAsyDi5RdWVyeURi",
            "X01vdmllSAASQgoZUXVlcnlEYl9Sb2Nrc3RhclJlZmVyZW5jZRiqk9hCIAEo",
            "CzIaLlF1ZXJ5RGJfUm9ja3N0YXJSZWZlcmVuY2VIABIqCg1RdWVyeURiX0Fk",
            "aG9jGIi7uFwgASgLMg4uUXVlcnlEYl9BZGhvY0gAEjoKFVF1ZXJ5RGJfTmFt",
            "ZWRSb2Nrc3RhchiNo91nIAEoCzIWLlF1ZXJ5RGJfTmFtZWRSb2Nrc3RhckgA",
            "EjkKFFF1ZXJ5RGJfVHlwZVdpdGhFbnVtGO7An7oBIAEoCzIVLlF1ZXJ5RGJf",
            "VHlwZVdpdGhFbnVtSAASOwoVUXVlcnlEYl9Sb2Nrc3RhckFsYnVtGI29iMQB",
            "IAEoCzIWLlF1ZXJ5RGJfUm9ja3N0YXJBbGJ1bUgAEoMBCjlRdWVyeURiX0N1",
            "c3RvbVNlbGVjdFJvY2tzdGFyX0N1c3RvbVNlbGVjdFJvY2tzdGFyUmVzcG9u",
            "c2UY9+W+zAEgASgLMjouUXVlcnlEYl9DdXN0b21TZWxlY3RSb2Nrc3Rhcl9D",
            "dXN0b21TZWxlY3RSb2Nrc3RhclJlc3BvbnNlSAASMQoQUXVlcnlEYl9Sb2Nr",
            "c3RhchjJ+MHVASABKAsyES5RdWVyeURiX1JvY2tzdGFySAASMwoRUXVlcnlE",
            "Yl9BbGxGaWVsZHMY5POA4gEgASgLMhIuUXVlcnlEYl9BbGxGaWVsZHNIABJb",
            "CiVRdWVyeURiX1JvY2tzdGFyX0N1c3RvbVJvY2tzdGFyU2NoZW1hGJOFvOYB",
            "IAEoCzImLlF1ZXJ5RGJfUm9ja3N0YXJfQ3VzdG9tUm9ja3N0YXJTY2hlbWFI",
            "ABorCglNZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4",
            "AUIJCgdzdWJ0eXBlIioKG1F1ZXJ5Q2FzZUluc2Vuc2l0aXZlT3JkZXJCeRIL",
            "CgNBZ2UYASABKAUiGwoZUXVlcnlDaGFuZ2VDb25uZWN0aW9uSW5mbyJYCg1R",
            "dWVyeUNoYW5nZURiEhcKD05hbWVkQ29ubmVjdGlvbhgBIAEoCRIYChBDb25u",
            "ZWN0aW9uU3RyaW5nGAIgASgJEhQKDFByb3ZpZGVyTmFtZRgDIAEoCSIjChRR",
            "dWVyeUN1c3RvbVJvY2tzdGFycxILCgNBZ2UYASABKAUiKQoaUXVlcnlDdXN0",
            "b21Sb2Nrc3RhcnNGaWx0ZXISCwoDQWdlGAEgASgFIi0KHlF1ZXJ5Q3VzdG9t",
            "Um9ja3N0YXJzUmVmZXJlbmNlcxILCgNBZ2UYASABKAUiKQoaUXVlcnlDdXN0",
            "b21Sb2Nrc3RhcnNTY2hlbWESCwoDQWdlGAEgASgFIkAKDVF1ZXJ5RGJfQWRo",
            "b2MSJAoKUXVlcnlBZGhvYxiNyMwrIAEoCzILLlF1ZXJ5QWRob2NIAEIJCgdz",
            "dWJ0eXBlIk0KEVF1ZXJ5RGJfQWxsRmllbGRzEi0KDlF1ZXJ5QWxsRmllbGRz",
            "GKnkifoBIAEoCzIPLlF1ZXJ5QWxsRmllbGRzSABCCQoHc3VidHlwZSKFAQoc",
            "UXVlcnlEYl9DdXN0b21TZWxlY3RSb2Nrc3RhchJaCiVRdWVyeUpvaW5lZFJv",
            "Y2tzdGFyQWxidW1zQ3VzdG9tU2VsZWN0GLWXyEMgASgLMiYuUXVlcnlKb2lu",
            "ZWRSb2Nrc3RhckFsYnVtc0N1c3RvbVNlbGVjdEgAQgkKB3N1YnR5cGUiswEK",
            "OVF1ZXJ5RGJfQ3VzdG9tU2VsZWN0Um9ja3N0YXJfQ3VzdG9tU2VsZWN0Um9j",
            "a3N0YXJSZXNwb25zZRJrCi1RdWVyeUpvaW5lZFJvY2tzdGFyQWxidW1zQ3Vz",
            "dG9tU2VsZWN0UmVzcG9uc2UY79DS/wEgASgLMi4uUXVlcnlKb2luZWRSb2Nr",
            "c3RhckFsYnVtc0N1c3RvbVNlbGVjdFJlc3BvbnNlSABCCQoHc3VidHlwZSKX",
            "AQoNUXVlcnlEYl9Nb3ZpZRIoCgxTZWFyY2hNb3ZpZXMY55/kYSABKAsyDS5T",
            "ZWFyY2hNb3ZpZXNIABIoCgxTdHJlYW1Nb3ZpZXMYmIGxeSABKAsyDS5TdHJl",
            "YW1Nb3ZpZXNIABInCgtRdWVyeU1vdmllcxiv2b/zASABKAsyDC5RdWVyeU1v",
            "dmllc0gAQgkKB3N1YnR5cGUiWwoVUXVlcnlEYl9OYW1lZFJvY2tzdGFyEjcK",
            "E1F1ZXJ5TmFtZWRSb2Nrc3RhcnMYv6CsjAEgASgLMhQuUXVlcnlOYW1lZFJv",
            "Y2tzdGFyc0gAQgkKB3N1YnR5cGUiUAoSUXVlcnlEYl9QYWdpbmdUZXN0Ei8K",
            "D1F1ZXJ5UGFnaW5nVGVzdBij4fWoASABKAsyEC5RdWVyeVBhZ2luZ1Rlc3RI",
            "AEIJCgdzdWJ0eXBlIqEJChBRdWVyeURiX1JvY2tzdGFyEikKDlF1ZXJ5Um9j",
            "a3N0YXJzGAogASgLMg8uUXVlcnlSb2Nrc3RhcnNIABJCChlRdWVyeUNoYW5n",
            "ZUNvbm5lY3Rpb25JbmZvGOf8nxcgASgLMhouUXVlcnlDaGFuZ2VDb25uZWN0",
            "aW9uSW5mb0gAEjwKFlF1ZXJ5Um9ja3N0YXJzSW1wbGljaXQY1sXSFyABKAsy",
            "Fy5RdWVyeVJvY2tzdGFyc0ltcGxpY2l0SAASRAoaUXVlcnlGaWVsZFJvY2tz",
            "dGFyc0R5bmFtaWMYmNn1ICABKAsyGy5RdWVyeUZpZWxkUm9ja3N0YXJzRHlu",
            "YW1pY0gAEjYKE1F1ZXJ5RmllbGRSb2Nrc3RhcnMY4N3lNSABKAsyFC5RdWVy",
            "eUZpZWxkUm9ja3N0YXJzSAASPgoXUXVlcnlPdmVycmlkZWRSb2Nrc3RhcnMY",
            "s5CdOSABKAsyGC5RdWVyeU92ZXJyaWRlZFJvY2tzdGFyc0gAEjoKFVF1ZXJ5",
            "Um9ja3N0YXJzSUZpbHRlchjgwdFGIAEoCzIWLlF1ZXJ5Um9ja3N0YXJzSUZp",
            "bHRlckgAEjIKEVF1ZXJ5R2V0Um9ja3N0YXJzGLG7vGcgASgLMhIuUXVlcnlH",
            "ZXRSb2Nrc3RhcnNIABIwChBRdWVyeU9yUm9ja3N0YXJzGMDA6GkgASgLMhEu",
            "UXVlcnlPclJvY2tzdGFyc0gAEjgKFFF1ZXJ5Um9ja3N0YXJzRmlsdGVyGMTy",
            "7nwgASgLMhUuUXVlcnlSb2Nrc3RhcnNGaWx0ZXJIABJDChlRdWVyeVJvY2tz",
            "dGFyc0NvbnZlbnRpb25zGIze9pUBIAEoCzIaLlF1ZXJ5Um9ja3N0YXJzQ29u",
            "dmVudGlvbnNIABI3ChNRdWVyeUFkaG9jUm9ja3N0YXJzGOLi/JsBIAEoCzIU",
            "LlF1ZXJ5QWRob2NSb2Nrc3RhcnNIABJNCh5RdWVyeUZpZWxkc0ltcGxpY2l0",
            "Q29udmVudGlvbnMYt/fKqQEgASgLMh8uUXVlcnlGaWVsZHNJbXBsaWNpdENv",
            "bnZlbnRpb25zSAASOQoUUXVlcnlSb2Nrc3RhckZpbHRlcnMY2szTwgEgASgL",
            "MhUuUXVlcnlSb2Nrc3RhckZpbHRlcnNIABJHChtRdWVyeUNhc2VJbnNlbnNp",
            "dGl2ZU9yZGVyQnkYu7qPywEgASgLMhwuUXVlcnlDYXNlSW5zZW5zaXRpdmVP",
            "cmRlckJ5SAASKwoNUXVlcnlDaGFuZ2VEYhj03tTYASABKAsyDi5RdWVyeUNo",
            "YW5nZURiSAASQQoYUXVlcnlHZXRSb2Nrc3RhcnNEeW5hbWljGJ3Y1OgBIAEo",
            "CzIZLlF1ZXJ5R2V0Um9ja3N0YXJzRHluYW1pY0gAEj0KFlF1ZXJ5T3JSb2Nr",
            "c3RhcnNGaWVsZHMY5fi1+wEgASgLMhcuUXVlcnlPclJvY2tzdGFyc0ZpZWxk",
            "c0gAEjsKFVF1ZXJ5VW5rbm93blJvY2tzdGFycxj+gM37ASABKAsyFi5RdWVy",
            "eVVua25vd25Sb2Nrc3RhcnNIAEIJCgdzdWJ0eXBlIlsKFVF1ZXJ5RGJfUm9j",
            "a3N0YXJBbGJ1bRI3ChNRdWVyeVJvY2tzdGFyQWxidW1zGObXl+0BIAEoCzIU",
            "LlF1ZXJ5Um9ja3N0YXJBbGJ1bXNIAEIJCgdzdWJ0eXBlIr8BChlRdWVyeURi",
            "X1JvY2tzdGFyUmVmZXJlbmNlEkgKHFF1ZXJ5Um9ja3N0YXJzV2l0aFJlZmVy",
            "ZW5jZXMY5KyFYSABKAsyHS5RdWVyeVJvY2tzdGFyc1dpdGhSZWZlcmVuY2Vz",
            "SAASTQoeUXVlcnlDdXN0b21Sb2Nrc3RhcnNSZWZlcmVuY2VzGNTg27MBIAEo",
            "CzIfLlF1ZXJ5Q3VzdG9tUm9ja3N0YXJzUmVmZXJlbmNlc0gAQgkKB3N1YnR5",
            "cGUi4wQKH1F1ZXJ5RGJfUm9ja3N0YXJfQ3VzdG9tUm9ja3N0YXISOAoUUXVl",
            "cnlDdXN0b21Sb2Nrc3RhcnMY/cTXCyABKAsyFS5RdWVyeUN1c3RvbVJvY2tz",
            "dGFyc0gAEkIKGVF1ZXJ5Sm9pbmVkUm9ja3N0YXJBbGJ1bXMYjbipRyABKAsy",
            "Gi5RdWVyeUpvaW5lZFJvY2tzdGFyQWxidW1zSAASRAoaUXVlcnlDdXN0b21S",
            "b2Nrc3RhcnNGaWx0ZXIY+7rIbCABKAsyGy5RdWVyeUN1c3RvbVJvY2tzdGFy",
            "c0ZpbHRlckgAElMKIVF1ZXJ5Um9ja3N0YXJBbGJ1bXNDdXN0b21MZWZ0Sm9p",
            "bhiHovW8ASABKAsyIi5RdWVyeVJvY2tzdGFyQWxidW1zQ3VzdG9tTGVmdEpv",
            "aW5IABJHChtRdWVyeVJvY2tzdGFyQWxidW1zSW1wbGljaXQYs/yXxgEgASgL",
            "MhwuUXVlcnlSb2Nrc3RhckFsYnVtc0ltcGxpY2l0SAASSwodUXVlcnlPdmVy",
            "cmlkZWRDdXN0b21Sb2Nrc3RhcnMYw7yR0wEgASgLMh4uUXVlcnlPdmVycmlk",
            "ZWRDdXN0b21Sb2Nrc3RhcnNIABJHChtRdWVyeVJvY2tzdGFyQWxidW1zTGVm",
            "dEpvaW4Y/bfy2wEgASgLMhwuUXVlcnlSb2Nrc3RhckFsYnVtc0xlZnRKb2lu",
            "SAASPQoWUXVlcnlNdWx0aUpvaW5Sb2Nrc3Rhchi/tPPeASABKAsyFy5RdWVy",
            "eU11bHRpSm9pblJvY2tzdGFySABCCQoHc3VidHlwZSJ4CiVRdWVyeURiX1Jv",
            "Y2tzdGFyX0N1c3RvbVJvY2tzdGFyU2NoZW1hEkQKGlF1ZXJ5Q3VzdG9tUm9j",
            "a3N0YXJzU2NoZW1hGLbe83cgASgLMhsuUXVlcnlDdXN0b21Sb2Nrc3RhcnNT",
            "Y2hlbWFIAEIJCgdzdWJ0eXBlImIKHlF1ZXJ5RGJfUm9ja3N0YXJfUm9ja3N0",
            "YXJBbGlhcxI1ChJRdWVyeVJvY2tzdGFyQWxpYXMY7ZeBugEgASgLMhMuUXVl",
            "cnlSb2Nrc3RhckFsaWFzSABCCQoHc3VidHlwZSJYChRRdWVyeURiX1R5cGVX",
            "aXRoRW51bRI1ChJRdWVyeVR5cGVXaXRoRW51bXMYtrD/lQEgASgLMhMuUXVl",
            "cnlUeXBlV2l0aEVudW1zSABCCQoHc3VidHlwZSLQAQoTUXVlcnlGaWVsZFJv",
            "Y2tzdGFycxIRCglGaXJzdE5hbWUYASABKAkSEgoKRmlyc3ROYW1lcxgCIAMo",
            "CRILCgNBZ2UYAyABKAUSIAoYRmlyc3ROYW1lQ2FzZUluc2Vuc2l0aXZlGAQg",
            "ASgJEhsKE0ZpcnN0TmFtZVN0YXJ0c1dpdGgYBSABKAkSGAoQTGFzdE5hbWVF",
            "bmRzV2l0aBgGIAEoCRIYChBGaXJzdE5hbWVCZXR3ZWVuGAcgAygJEhIKCk9y",
            "TGFzdE5hbWUYCCABKAkiKQoaUXVlcnlGaWVsZFJvY2tzdGFyc0R5bmFtaWMS",
            "CwoDQWdlGAEgASgFIlUKHlF1ZXJ5RmllbGRzSW1wbGljaXRDb252ZW50aW9u",
            "cxIZChFGaXJzdE5hbWVDb250YWlucxgBIAEoCRIYChBMYXN0TmFtZUVuZHNX",
            "aXRoGAIgASgJImIKEVF1ZXJ5R2V0Um9ja3N0YXJzEg8KA0lkcxgBIAMoBUIC",
            "EAASEAoEQWdlcxgCIAMoBUICEAASEgoKRmlyc3ROYW1lcxgDIAMoCRIWCgpJ",
            "ZHNCZXR3ZWVuGAQgAygFQgIQACIaChhRdWVyeUdldFJvY2tzdGFyc0R5bmFt",
            "aWMiQwoZUXVlcnlKb2luZWRSb2Nrc3RhckFsYnVtcxILCgNBZ2UYASABKAUS",
            "GQoRUm9ja3N0YXJBbGJ1bU5hbWUYAiABKAkiTwolUXVlcnlKb2luZWRSb2Nr",
            "c3RhckFsYnVtc0N1c3RvbVNlbGVjdBILCgNBZ2UYASABKAUSGQoRUm9ja3N0",
            "YXJBbGJ1bU5hbWUYAiABKAkiVwotUXVlcnlKb2luZWRSb2Nrc3RhckFsYnVt",
            "c0N1c3RvbVNlbGVjdFJlc3BvbnNlEgsKA0FnZRgBIAEoBRIZChFSb2Nrc3Rh",
            "ckFsYnVtTmFtZRgCIAEoCSJACgtRdWVyeU1vdmllcxIPCgNJZHMYASADKAVC",
            "AhAAEg8KB0ltZGJJZHMYAiADKAkSDwoHUmF0aW5ncxgDIAMoCSJbChZRdWVy",
            "eU11bHRpSm9pblJvY2tzdGFyEgsKA0FnZRgBIAEoBRIZChFSb2Nrc3RhckFs",
            "YnVtTmFtZRgCIAEoCRIZChFSb2Nrc3RhckdlbnJlTmFtZRgDIAEoCSIiChNR",
            "dWVyeU5hbWVkUm9ja3N0YXJzEgsKA0FnZRgBIAEoBSIyChBRdWVyeU9yUm9j",
            "a3N0YXJzEgsKA0FnZRgBIAEoBRIRCglGaXJzdE5hbWUYAiABKAkiPQoWUXVl",
            "cnlPclJvY2tzdGFyc0ZpZWxkcxIRCglGaXJzdE5hbWUYASABKAkSEAoITGFz",
            "dE5hbWUYAiABKAkiLAodUXVlcnlPdmVycmlkZWRDdXN0b21Sb2Nrc3RhcnMS",
            "CwoDQWdlGAEgASgFIiYKF1F1ZXJ5T3ZlcnJpZGVkUm9ja3N0YXJzEgsKA0Fn",
            "ZRgBIAEoBSI6Cg9RdWVyeVBhZ2luZ1Rlc3QSCgoCSWQYASABKAUSDAoETmFt",
            "ZRgCIAEoCRINCgVWYWx1ZRgDIAEoBSLRAQoTUXVlcnlSZXNwb25zZV9BZGhv",
            "YxIOCgZPZmZzZXQYASABKAUSDQoFVG90YWwYAiABKAUSFwoHUmVzdWx0cxgD",
            "IAMoCzIGLkFkaG9jEiwKBE1ldGEYBCADKAsyHi5RdWVyeVJlc3BvbnNlX0Fk",
            "aG9jLk1ldGFFbnRyeRInCg5SZXNwb25zZVN0YXR1cxgFIAEoCzIPLlJlc3Bv",
            "bnNlU3RhdHVzGisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBIt0BChdRdWVyeVJlc3BvbnNlX0FsbEZpZWxkcxIOCgZPZmZz",
            "ZXQYASABKAUSDQoFVG90YWwYAiABKAUSGwoHUmVzdWx0cxgDIAMoCzIKLkFs",
            "bEZpZWxkcxIwCgRNZXRhGAQgAygLMiIuUXVlcnlSZXNwb25zZV9BbGxGaWVs",
            "ZHMuTWV0YUVudHJ5EicKDlJlc3BvbnNlU3RhdHVzGAUgASgLMg8uUmVzcG9u",
            "c2VTdGF0dXMaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoCToCOAEi7AEKHFF1ZXJ5UmVzcG9uc2VfQ3VzdG9tUm9ja3N0YXISDgoG",
            "T2Zmc2V0GAEgASgFEg0KBVRvdGFsGAIgASgFEiAKB1Jlc3VsdHMYAyADKAsy",
            "Dy5DdXN0b21Sb2Nrc3RhchI1CgRNZXRhGAQgAygLMicuUXVlcnlSZXNwb25z",
            "ZV9DdXN0b21Sb2Nrc3Rhci5NZXRhRW50cnkSJwoOUmVzcG9uc2VTdGF0dXMY",
            "BSABKAsyDy5SZXNwb25zZVN0YXR1cxorCglNZXRhRW50cnkSCwoDa2V5GAEg",
            "ASgJEg0KBXZhbHVlGAIgASgJOgI4ASL+AQoiUXVlcnlSZXNwb25zZV9DdXN0",
            "b21Sb2Nrc3RhclNjaGVtYRIOCgZPZmZzZXQYASABKAUSDQoFVG90YWwYAiAB",
            "KAUSJgoHUmVzdWx0cxgDIAMoCzIVLkN1c3RvbVJvY2tzdGFyU2NoZW1hEjsK",
            "BE1ldGEYBCADKAsyLS5RdWVyeVJlc3BvbnNlX0N1c3RvbVJvY2tzdGFyU2No",
            "ZW1hLk1ldGFFbnRyeRInCg5SZXNwb25zZVN0YXR1cxgFIAEoCzIPLlJlc3Bv",
            "bnNlU3RhdHVzGisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBIv4BCiJRdWVyeVJlc3BvbnNlX0N1c3RvbVNlbGVjdFJvY2tz",
            "dGFyEg4KBk9mZnNldBgBIAEoBRINCgVUb3RhbBgCIAEoBRImCgdSZXN1bHRz",
            "GAMgAygLMhUuQ3VzdG9tU2VsZWN0Um9ja3N0YXISOwoETWV0YRgEIAMoCzIt",
            "LlF1ZXJ5UmVzcG9uc2VfQ3VzdG9tU2VsZWN0Um9ja3N0YXIuTWV0YUVudHJ5",
            "EicKDlJlc3BvbnNlU3RhdHVzGAUgASgLMg8uUmVzcG9uc2VTdGF0dXMaKwoJ",
            "TWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEilgIK",
            "KlF1ZXJ5UmVzcG9uc2VfQ3VzdG9tU2VsZWN0Um9ja3N0YXJSZXNwb25zZRIO",
            "CgZPZmZzZXQYASABKAUSDQoFVG90YWwYAiABKAUSLgoHUmVzdWx0cxgDIAMo",
            "CzIdLkN1c3RvbVNlbGVjdFJvY2tzdGFyUmVzcG9uc2USQwoETWV0YRgEIAMo",
            "CzI1LlF1ZXJ5UmVzcG9uc2VfQ3VzdG9tU2VsZWN0Um9ja3N0YXJSZXNwb25z",
            "ZS5NZXRhRW50cnkSJwoOUmVzcG9uc2VTdGF0dXMYBSABKAsyDy5SZXNwb25z",
            "ZVN0YXR1cxorCglNZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgJOgI4ASLRAQoTUXVlcnlSZXNwb25zZV9Nb3ZpZRIOCgZPZmZzZXQYASAB",
            "KAUSDQoFVG90YWwYAiABKAUSFwoHUmVzdWx0cxgDIAMoCzIGLk1vdmllEiwK",
            "BE1ldGEYBCADKAsyHi5RdWVyeVJlc3BvbnNlX01vdmllLk1ldGFFbnRyeRIn",
            "Cg5SZXNwb25zZVN0YXR1cxgFIAEoCzIPLlJlc3BvbnNlU3RhdHVzGisKCU1l",
            "dGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIuQBChtR",
            "dWVyeVJlc3BvbnNlX05hbWVkUm9ja3N0YXISDgoGT2Zmc2V0GAEgASgFEg0K",
            "BVRvdGFsGAIgASgFEhoKB1Jlc3VsdHMYAyADKAsyCS5Sb2Nrc3RhchI0CgRN",
            "ZXRhGAQgAygLMiYuUXVlcnlSZXNwb25zZV9OYW1lZFJvY2tzdGFyLk1ldGFF",
            "bnRyeRInCg5SZXNwb25zZVN0YXR1cxgFIAEoCzIPLlJlc3BvbnNlU3RhdHVz",
            "GisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgB",
            "IuABChhRdWVyeVJlc3BvbnNlX1BhZ2luZ1Rlc3QSDgoGT2Zmc2V0GAEgASgF",
            "Eg0KBVRvdGFsGAIgASgFEhwKB1Jlc3VsdHMYAyADKAsyCy5QYWdpbmdUZXN0",
            "EjEKBE1ldGEYBCADKAsyIy5RdWVyeVJlc3BvbnNlX1BhZ2luZ1Rlc3QuTWV0",
            "YUVudHJ5EicKDlJlc3BvbnNlU3RhdHVzGAUgASgLMg8uUmVzcG9uc2VTdGF0",
            "dXMaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToC",
            "OAEi2gEKFlF1ZXJ5UmVzcG9uc2VfUm9ja3N0YXISDgoGT2Zmc2V0GAEgASgF",
            "Eg0KBVRvdGFsGAIgASgFEhoKB1Jlc3VsdHMYAyADKAsyCS5Sb2Nrc3RhchIv",
            "CgRNZXRhGAQgAygLMiEuUXVlcnlSZXNwb25zZV9Sb2Nrc3Rhci5NZXRhRW50",
            "cnkSJwoOUmVzcG9uc2VTdGF0dXMYBSABKAsyDy5SZXNwb25zZVN0YXR1cxor",
            "CglNZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLp",
            "AQobUXVlcnlSZXNwb25zZV9Sb2Nrc3RhckFsYnVtEg4KBk9mZnNldBgBIAEo",
            "BRINCgVUb3RhbBgCIAEoBRIfCgdSZXN1bHRzGAMgAygLMg4uUm9ja3N0YXJB",
            "bGJ1bRI0CgRNZXRhGAQgAygLMiYuUXVlcnlSZXNwb25zZV9Sb2Nrc3RhckFs",
            "YnVtLk1ldGFFbnRyeRInCg5SZXNwb25zZVN0YXR1cxgFIAEoCzIPLlJlc3Bv",
            "bnNlU3RhdHVzGisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUY",
            "AiABKAk6AjgBIukBChtRdWVyeVJlc3BvbnNlX1JvY2tzdGFyQWxpYXMSDgoG",
            "T2Zmc2V0GAEgASgFEg0KBVRvdGFsGAIgASgFEh8KB1Jlc3VsdHMYAyADKAsy",
            "Di5Sb2Nrc3RhckFsaWFzEjQKBE1ldGEYBCADKAsyJi5RdWVyeVJlc3BvbnNl",
            "X1JvY2tzdGFyQWxpYXMuTWV0YUVudHJ5EicKDlJlc3BvbnNlU3RhdHVzGAUg",
            "ASgLMg8uUmVzcG9uc2VTdGF0dXMaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoCToCOAEi9QEKH1F1ZXJ5UmVzcG9uc2VfUm9ja3N0",
            "YXJSZWZlcmVuY2USDgoGT2Zmc2V0GAEgASgFEg0KBVRvdGFsGAIgASgFEiMK",
            "B1Jlc3VsdHMYAyADKAsyEi5Sb2Nrc3RhclJlZmVyZW5jZRI4CgRNZXRhGAQg",
            "AygLMiouUXVlcnlSZXNwb25zZV9Sb2Nrc3RhclJlZmVyZW5jZS5NZXRhRW50",
            "cnkSJwoOUmVzcG9uc2VTdGF0dXMYBSABKAsyDy5SZXNwb25zZVN0YXR1cxor",
            "CglNZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLm",
            "AQoaUXVlcnlSZXNwb25zZV9UeXBlV2l0aEVudW0SDgoGT2Zmc2V0GAEgASgF",
            "Eg0KBVRvdGFsGAIgASgFEh4KB1Jlc3VsdHMYAyADKAsyDS5UeXBlV2l0aEVu",
            "dW0SMwoETWV0YRgEIAMoCzIlLlF1ZXJ5UmVzcG9uc2VfVHlwZVdpdGhFbnVt",
            "Lk1ldGFFbnRyeRInCg5SZXNwb25zZVN0YXR1cxgFIAEoCzIPLlJlc3BvbnNl",
            "U3RhdHVzGisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAk6AjgBImkKE1F1ZXJ5Um9ja3N0YXJBbGJ1bXMSCgoCSWQYASABKAUSEgoK",
            "Um9ja3N0YXJJZBgCIAEoBRIMCgROYW1lGAMgASgJEg0KBUdlbnJlGAQgASgJ",
            "EhUKCUlkQmV0d2VlbhgFIAMoBUICEAAiWQohUXVlcnlSb2Nrc3RhckFsYnVt",
            "c0N1c3RvbUxlZnRKb2luEgsKA0FnZRgBIAEoBRIRCglBbGJ1bU5hbWUYAiAB",
            "KAkSFAoMSWROb3RFcXVhbFRvGAMgASgFIh0KG1F1ZXJ5Um9ja3N0YXJBbGJ1",
            "bXNJbXBsaWNpdCJTChtRdWVyeVJvY2tzdGFyQWxidW1zTGVmdEpvaW4SCwoD",
            "QWdlGAEgASgFEhEKCUFsYnVtTmFtZRgCIAEoCRIUCgxJZE5vdEVxdWFsVG8Y",
            "AyABKAUiPAoSUXVlcnlSb2Nrc3RhckFsaWFzEgsKA0FnZRgBIAEoBRIZChFS",
            "b2Nrc3RhckFsYnVtTmFtZRgCIAEoCSJlChRRdWVyeVJvY2tzdGFyRmlsdGVy",
            "cxIPCgNJZHMYASADKAVCAhAAEhAKBEFnZXMYAiADKAVCAhAAEhIKCkZpcnN0",
            "TmFtZXMYAyADKAkSFgoKSWRzQmV0d2VlbhgEIAMoBUICEAAiHQoOUXVlcnlS",
            "b2Nrc3RhcnMSCwoDQWdlGAEgASgFIpUDChlRdWVyeVJvY2tzdGFyc0NvbnZl",
            "bnRpb25zEi0KFkRhdGVPZkJpcnRoR3JlYXRlclRoYW4YASABKAsyDS5iY2wu",
            "RGF0ZVRpbWUSJwoQRGF0ZURpZWRMZXNzVGhhbhgCIAEoCzINLmJjbC5EYXRl",
            "VGltZRIPCgNJZHMYAyADKAVCAhAAEhQKDEFnZU9sZGVyVGhhbhgEIAEoBRIf",
            "ChdBZ2VHcmVhdGVyVGhhbk9yRXF1YWxUbxgFIAEoBRIWCg5BZ2VHcmVhdGVy",
            "VGhhbhgGIAEoBRIWCg5HcmVhdGVyVGhhbkFnZRgHIAEoBRIbChNGaXJzdE5h",
            "bWVTdGFydHNXaXRoGAggASgJEhgKEExhc3ROYW1lRW5kc1dpdGgYCSABKAkS",
            "GAoQTGFzdE5hbWVDb250YWlucxgKIAEoCRIhChlSb2Nrc3RhckFsYnVtTmFt",
            "ZUNvbnRhaW5zGAsgASgJEhcKD1JvY2tzdGFySWRBZnRlchgMIAEoBRIbChNS",
            "b2Nrc3RhcklkT25PckFmdGVyGA0gASgFIiMKFFF1ZXJ5Um9ja3N0YXJzRmls",
            "dGVyEgsKA0FnZRgBIAEoBSIkChVRdWVyeVJvY2tzdGFyc0lGaWx0ZXISCwoD",
            "QWdlGAEgASgFIhgKFlF1ZXJ5Um9ja3N0YXJzSW1wbGljaXQiKwocUXVlcnlS",
            "b2Nrc3RhcnNXaXRoUmVmZXJlbmNlcxILCgNBZ2UYASABKAUiFAoSUXVlcnlU",
            "eXBlV2l0aEVudW1zIkQKFVF1ZXJ5VW5rbm93blJvY2tzdGFycxISCgpVbmtu",
            "b3duSW50GAEgASgFEhcKD1Vua25vd25Qcm9wZXJ0eRgCIAEoCSKBAQoRUmVn",
            "ZW5lcmF0ZUFwaUtleXMSEwoLRW52aXJvbm1lbnQYASABKAkSKgoETWV0YRgC",
            "IAMoCzIcLlJlZ2VuZXJhdGVBcGlLZXlzLk1ldGFFbnRyeRorCglNZXRhRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLDAQoZUmVnZW5l",
            "cmF0ZUFwaUtleXNSZXNwb25zZRIcCgdSZXN1bHRzGAEgAygLMgsuVXNlckFw",
            "aUtleRIyCgRNZXRhGAIgAygLMiQuUmVnZW5lcmF0ZUFwaUtleXNSZXNwb25z",
            "ZS5NZXRhRW50cnkSJwoOUmVzcG9uc2VTdGF0dXMYAyABKAsyDy5SZXNwb25z",
            "ZVN0YXR1cxorCglNZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgJOgI4ASKYAgoIUmVnaXN0ZXISEAoIVXNlck5hbWUYASABKAkSEQoJRmly",
            "c3ROYW1lGAIgASgJEhAKCExhc3ROYW1lGAMgASgJEhMKC0Rpc3BsYXlOYW1l",
            "GAQgASgJEg0KBUVtYWlsGAUgASgJEhAKCFBhc3N3b3JkGAYgASgJEhcKD0Nv",
            "bmZpcm1QYXNzd29yZBgHIAEoCRIRCglBdXRvTG9naW4YCCABKAgSEAoIQ29u",
            "dGludWUYCSABKAkSEQoJRXJyb3JWaWV3GAogASgJEiEKBE1ldGEYCyADKAsy",
            "Ey5SZWdpc3Rlci5NZXRhRW50cnkaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoCToCOAEiiAIKEFJlZ2lzdGVyUmVzcG9uc2USDgoG",
            "VXNlcklkGAEgASgJEhEKCVNlc3Npb25JZBgCIAEoCRIQCghVc2VyTmFtZRgD",
            "IAEoCRITCgtSZWZlcnJlclVybBgEIAEoCRITCgtCZWFyZXJUb2tlbhgFIAEo",
            "CRIUCgxSZWZyZXNoVG9rZW4YBiABKAkSJwoOUmVzcG9uc2VTdGF0dXMYByAB",
            "KAsyDy5SZXNwb25zZVN0YXR1cxIpCgRNZXRhGAggAygLMhsuUmVnaXN0ZXJS",
            "ZXNwb25zZS5NZXRhRW50cnkaKwoJTWV0YUVudHJ5EgsKA2tleRgBIAEoCRIN",
            "CgV2YWx1ZRgCIAEoCToCOAEiMQoMUmVxdWlyZXNBdXRoEgwKBE5hbWUYASAB",
            "KAkSEwoLQmVhcmVyVG9rZW4YAiABKAkiDAoKUmVzZXRUb2RvcyKbAQoNUmVz",
            "cG9uc2VFcnJvchIRCglFcnJvckNvZGUYASABKAkSEQoJRmllbGROYW1lGAIg",
            "ASgJEg8KB01lc3NhZ2UYAyABKAkSJgoETWV0YRgEIAMoCzIYLlJlc3BvbnNl",
            "RXJyb3IuTWV0YUVudHJ5GisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoF",
            "dmFsdWUYAiABKAk6AjgBIr4BCg5SZXNwb25zZVN0YXR1cxIRCglFcnJvckNv",
            "ZGUYASABKAkSDwoHTWVzc2FnZRgCIAEoCRISCgpTdGFja1RyYWNlGAMgASgJ",
            "Eh4KBkVycm9ycxgEIAMoCzIOLlJlc3BvbnNlRXJyb3ISJwoETWV0YRgFIAMo",
            "CzIZLlJlc3BvbnNlU3RhdHVzLk1ldGFFbnRyeRorCglNZXRhRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASLqAQoIUm9ja3N0YXISCgoC",
            "SWQYASABKAUSEQoJRmlyc3ROYW1lGAIgASgJEhAKCExhc3ROYW1lGAMgASgJ",
            "EgsKA0FnZRgEIAEoBRIiCgtEYXRlT2ZCaXJ0aBgFIAEoCzINLmJjbC5EYXRl",
            "VGltZRIfCghEYXRlRGllZBgGIAEoCzINLmJjbC5EYXRlVGltZRIjCgxMaXZp",
            "bmdTdGF0dXMYByABKA4yDS5MaXZpbmdTdGF0dXMSKwoNTmFtZWRSb2Nrc3Rh",
            "chio3MakASABKAsyDi5OYW1lZFJvY2tzdGFySABCCQoHc3VidHlwZSJMCg1S",
            "b2Nrc3RhckFsYnVtEgoKAklkGAEgASgFEhIKClJvY2tzdGFySWQYAiABKAUS",
            "DAoETmFtZRgDIAEoCRINCgVHZW5yZRgEIAEoCSJWCg1Sb2Nrc3RhckFsaWFz",
            "EhIKClJvY2tzdGFySWQYASABKAUSEQoJRmlyc3ROYW1lGAIgASgJEg8KB1N1",
            "cm5hbWUYAyABKAkSDQoFYWxidW0YBCABKAkicQoRUm9ja3N0YXJSZWZlcmVu",
            "Y2USCgoCSWQYASABKAUSEQoJRmlyc3ROYW1lGAIgASgJEhAKCExhc3ROYW1l",
            "GAMgASgJEgsKA0FnZRgEIAEoBRIeCgZBbGJ1bXMYBSADKAsyDi5Sb2Nrc3Rh",
            "ckFsYnVtIg4KDFNlYXJjaE1vdmllcyIXCgdTZWN1cmVkEgwKBE5hbWUYASAB",
            "KAkiSgoPU2VjdXJlZFJlc3BvbnNlEg4KBlJlc3VsdBgBIAEoCRInCg5SZXNw",
            "b25zZVN0YXR1cxgCIAEoCzIPLlJlc3BvbnNlU3RhdHVzIhwKC1N0cmVhbUZp",
            "bGVzEg0KBVBhdGhzGAEgAygJIh8KDFN0cmVhbU1vdmllcxIPCgdSYXRpbmdz",
            "GAEgAygJIiYKElN0cmVhbVNlcnZlckV2ZW50cxIQCghDaGFubmVscxgBIAMo",
            "CSKbBAoaU3RyZWFtU2VydmVyRXZlbnRzUmVzcG9uc2USDwoHRXZlbnRJZBgB",
            "IAEoAxIPCgdDaGFubmVsGAIgASgJEhAKCFNlbGVjdG9yGAQgASgJEgwKBEpz",
            "b24YBSABKAkSCgoCT3AYBiABKAkSDgoGVGFyZ2V0GAcgASgJEhMKC0Nzc1Nl",
            "bGVjdG9yGAggASgJEjMKBE1ldGEYCSADKAsyJS5TdHJlYW1TZXJ2ZXJFdmVu",
            "dHNSZXNwb25zZS5NZXRhRW50cnkSDgoGVXNlcklkGAogASgJEhMKC0Rpc3Bs",
            "YXlOYW1lGAsgASgJEhIKClByb2ZpbGVVcmwYDCABKAkSFwoPSXNBdXRoZW50",
            "aWNhdGVkGA0gASgIEhAKCENoYW5uZWxzGA4gAygJEhEKCUNyZWF0ZWRBdBgP",
            "IAEoAxIKCgJJZBgVIAEoCRIVCg1VblJlZ2lzdGVyVXJsGBYgASgJEhsKE1Vw",
            "ZGF0ZVN1YnNjcmliZXJVcmwYFyABKAkSFAoMSGVhcnRiZWF0VXJsGBggASgJ",
            "EhsKE0hlYXJ0YmVhdEludGVydmFsTXMYGSABKAMSFQoNSWRsZVRpbWVvdXRN",
            "cxgaIAEoAxInCg5SZXNwb25zZVN0YXR1cxgeIAEoCzIPLlJlc3BvbnNlU3Rh",
            "dHVzGisKCU1ldGFFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6",
            "AjgBIhgKBVRocm93Eg8KB01lc3NhZ2UYASABKAkiDQoLVGhyb3dDdXN0b20i",
            "PgoTVGhyb3dDdXN0b21SZXNwb25zZRInCg5SZXNwb25zZVN0YXR1cxgBIAEo",
            "CzIPLlJlc3BvbnNlU3RhdHVzIhwKCVRocm93Vm9pZBIPCgdNZXNzYWdlGAEg",
            "ASgJIkMKBFRvZG8SCgoCSWQYASABKAMSDQoFVGl0bGUYAiABKAkSDQoFT3Jk",
            "ZXIYAyABKAUSEQoJQ29tcGxldGVkGAQgASgIIucCChFUcmlnZ2VyVmFsaWRh",
            "dG9ycxISCgpDcmVkaXRDYXJkGAEgASgJEg0KBUVtYWlsGAIgASgJEg0KBUVt",
            "cHR5GAMgASgJEg0KBUVxdWFsGAQgASgJEhgKEEV4Y2x1c2l2ZUJldHdlZW4Y",
            "BSABKAUSGgoSR3JlYXRlclRoYW5PckVxdWFsGAYgASgFEhMKC0dyZWF0ZXJU",
            "aGFuGAcgASgFEhgKEEluY2x1c2l2ZUJldHdlZW4YCCABKAUSDgoGTGVuZ3Ro",
            "GAkgASgJEhcKD0xlc3NUaGFuT3JFcXVhbBgKIAEoBRIQCghMZXNzVGhhbhgL",
            "IAEoBRIQCghOb3RFbXB0eRgMIAEoCRIQCghOb3RFcXVhbBgNIAEoCRIMCgRO",
            "dWxsGA4gASgJEhkKEVJlZ3VsYXJFeHByZXNzaW9uGA8gASgJEiQKDlNjYWxl",
            "UHJlY2lzaW9uGBAgASgLMgwuYmNsLkRlY2ltYWwisgEKDFR5cGVXaXRoRW51",
            "bRIKCgJJZBgBIAEoBRIMCgROYW1lGAIgASgJEhsKCFNvbWVFbnVtGAMgASgO",
            "MgkuU29tZUVudW0SJQoNU29tZUVudW1Bc0ludBgEIAEoDjIOLlNvbWVFbnVt",
            "QXNJbnQSHAoJTlNvbWVFbnVtGAUgASgOMgkuU29tZUVudW0SJgoOTlNvbWVF",
            "bnVtQXNJbnQYBiABKA4yDi5Tb21lRW51bUFzSW50IpoBCg1VbkFzc2lnblJv",
            "bGVzEhAKCFVzZXJOYW1lGAEgASgJEhMKC1Blcm1pc3Npb25zGAIgAygJEg0K",
            "BVJvbGVzGAMgAygJEiYKBE1ldGEYBCADKAsyGC5VbkFzc2lnblJvbGVzLk1l",
            "dGFFbnRyeRorCglNZXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgJOgI4ASLHAQoVVW5Bc3NpZ25Sb2xlc1Jlc3BvbnNlEhAKCEFsbFJvbGVz",
            "GAEgAygJEhYKDkFsbFBlcm1pc3Npb25zGAIgAygJEi4KBE1ldGEYAyADKAsy",
            "IC5VbkFzc2lnblJvbGVzUmVzcG9uc2UuTWV0YUVudHJ5EicKDlJlc3BvbnNl",
            "U3RhdHVzGAQgASgLMg8uUmVzcG9uc2VTdGF0dXMaKwoJTWV0YUVudHJ5EgsK",
            "A2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEiSQoKVXBkYXRlVG9kbxIK",
            "CgJJZBgBIAEoAxINCgVUaXRsZRgCIAEoCRINCgVPcmRlchgDIAEoBRIRCglD",
            "b21wbGV0ZWQYBCABKAginwEKClVzZXJBcGlLZXkSCwoDS2V5GAEgASgJEg8K",
            "B0tleVR5cGUYAiABKAkSIQoKRXhwaXJ5RGF0ZRgDIAEoCzINLmJjbC5EYXRl",
            "VGltZRIjCgRNZXRhGAQgAygLMhUuVXNlckFwaUtleS5NZXRhRW50cnkaKwoJ",
            "TWV0YUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAEqjwsK",
            "Dkh0dHBTdGF0dXNDb2RlEggKBFpFUk8QABIMCghDb250aW51ZRBkEhYKElN3",
            "aXRjaGluZ1Byb3RvY29scxBlEg4KClByb2Nlc3NpbmcQZhIOCgpFYXJseUhp",
            "bnRzEGcSBwoCT0sQyAESDAoHQ3JlYXRlZBDJARINCghBY2NlcHRlZBDKARIg",
            "ChtOb25BdXRob3JpdGF0aXZlSW5mb3JtYXRpb24QywESDgoJTm9Db250ZW50",
            "EMwBEhEKDFJlc2V0Q29udGVudBDNARITCg5QYXJ0aWFsQ29udGVudBDOARIQ",
            "CgtNdWx0aVN0YXR1cxDPARIUCg9BbHJlYWR5UmVwb3J0ZWQQ0AESCwoGSU1V",
            "c2VkEOIBEg4KCUFtYmlndW91cxCsAhIUCg9NdWx0aXBsZUNob2ljZXMQrAIS",
            "FQoQTW92ZWRQZXJtYW5lbnRseRCtAhIKCgVNb3ZlZBCtAhIKCgVGb3VuZBCu",
            "AhINCghSZWRpcmVjdBCuAhINCghTZWVPdGhlchCvAhITCg5SZWRpcmVjdE1l",
            "dGhvZBCvAhIQCgtOb3RNb2RpZmllZBCwAhINCghVc2VQcm94eRCxAhILCgZV",
            "bnVzZWQQsgISFgoRVGVtcG9yYXJ5UmVkaXJlY3QQswISFQoQUmVkaXJlY3RL",
            "ZWVwVmVyYhCzAhIWChFQZXJtYW5lbnRSZWRpcmVjdBC0AhIPCgpCYWRSZXF1",
            "ZXN0EJADEhEKDFVuYXV0aG9yaXplZBCRAxIUCg9QYXltZW50UmVxdWlyZWQQ",
            "kgMSDgoJRm9yYmlkZGVuEJMDEg0KCE5vdEZvdW5kEJQDEhUKEE1ldGhvZE5v",
            "dEFsbG93ZWQQlQMSEgoNTm90QWNjZXB0YWJsZRCWAxIgChtQcm94eUF1dGhl",
            "bnRpY2F0aW9uUmVxdWlyZWQQlwMSEwoOUmVxdWVzdFRpbWVvdXQQmAMSDQoI",
            "Q29uZmxpY3QQmQMSCQoER29uZRCaAxITCg5MZW5ndGhSZXF1aXJlZBCbAxIX",
            "ChJQcmVjb25kaXRpb25GYWlsZWQQnAMSGgoVUmVxdWVzdEVudGl0eVRvb0xh",
            "cmdlEJ0DEhYKEVJlcXVlc3RVcmlUb29Mb25nEJ4DEhkKFFVuc3VwcG9ydGVk",
            "TWVkaWFUeXBlEJ8DEiEKHFJlcXVlc3RlZFJhbmdlTm90U2F0aXNmaWFibGUQ",
            "oAMSFgoRRXhwZWN0YXRpb25GYWlsZWQQoQMSFwoSTWlzZGlyZWN0ZWRSZXF1",
            "ZXN0EKUDEhgKE1VucHJvY2Vzc2FibGVFbnRpdHkQpgMSCwoGTG9ja2VkEKcD",
            "EhUKEEZhaWxlZERlcGVuZGVuY3kQqAMSFAoPVXBncmFkZVJlcXVpcmVkEKoD",
            "EhkKFFByZWNvbmRpdGlvblJlcXVpcmVkEKwDEhQKD1Rvb01hbnlSZXF1ZXN0",
            "cxCtAxIgChtSZXF1ZXN0SGVhZGVyRmllbGRzVG9vTGFyZ2UQrwMSHwoaVW5h",
            "dmFpbGFibGVGb3JMZWdhbFJlYXNvbnMQwwMSGAoTSW50ZXJuYWxTZXJ2ZXJF",
            "cnJvchD0AxITCg5Ob3RJbXBsZW1lbnRlZBD1AxIPCgpCYWRHYXRld2F5EPYD",
            "EhcKElNlcnZpY2VVbmF2YWlsYWJsZRD3AxITCg5HYXRld2F5VGltZW91dBD4",
            "AxIcChdIdHRwVmVyc2lvbk5vdFN1cHBvcnRlZBD5AxIaChVWYXJpYW50QWxz",
            "b05lZ290aWF0ZXMQ+gMSGAoTSW5zdWZmaWNpZW50U3RvcmFnZRD7AxIRCgxM",
            "b29wRGV0ZWN0ZWQQ/AMSEAoLTm90RXh0ZW5kZWQQ/gMSIgodTmV0d29ya0F1",
            "dGhlbnRpY2F0aW9uUmVxdWlyZWQQ/wMaAhABKiMKDExpdmluZ1N0YXR1cxIJ",
            "CgVBbGl2ZRAAEggKBERlYWQQASpeCghTb21lRW51bRITCg9Tb21lRW51bV9W",
            "YWx1ZTAQABITCg9Tb21lRW51bV9WYWx1ZTEQARITCg9Tb21lRW51bV9WYWx1",
            "ZTIQAhITCg9Tb21lRW51bV9WYWx1ZTMQAyo/Cg1Tb21lRW51bUFzSW50EgoK",
            "BlZhbHVlMBAAEgoKBlZhbHVlMRABEgoKBlZhbHVlMhACEgoKBlZhbHVlMxAD",
            "Mu1KCgxHcnBjU2VydmljZXMSLAoMR2V0QWRkSGVhZGVyEgouQWRkSGVhZGVy",
            "Gg4uRW1wdHlSZXNwb25zZSIAEioKC0dldEFueUhlbGxvEgkuQW55SGVsbG8a",
            "Di5IZWxsb1Jlc3BvbnNlIgASKwoMUG9zdEFueUhlbGxvEgkuQW55SGVsbG8a",
            "Di5IZWxsb1Jlc3BvbnNlIgASKgoLUHV0QW55SGVsbG8SCS5BbnlIZWxsbxoO",
            "LkhlbGxvUmVzcG9uc2UiABItCg5EZWxldGVBbnlIZWxsbxIJLkFueUhlbGxv",
            "Gg4uSGVsbG9SZXNwb25zZSIAEjcKD1Bvc3RBc3NpZ25Sb2xlcxIMLkFzc2ln",
            "blJvbGVzGhQuQXNzaWduUm9sZXNSZXNwb25zZSIAEj0KE09wdGlvbnNBdXRo",
            "ZW50aWNhdGUSDS5BdXRoZW50aWNhdGUaFS5BdXRoZW50aWNhdGVSZXNwb25z",
            "ZSIAEjkKD0dldEF1dGhlbnRpY2F0ZRINLkF1dGhlbnRpY2F0ZRoVLkF1dGhl",
            "bnRpY2F0ZVJlc3BvbnNlIgASOgoQUG9zdEF1dGhlbnRpY2F0ZRINLkF1dGhl",
            "bnRpY2F0ZRoVLkF1dGhlbnRpY2F0ZVJlc3BvbnNlIgASPAoSRGVsZXRlQXV0",
            "aGVudGljYXRlEg0uQXV0aGVudGljYXRlGhUuQXV0aGVudGljYXRlUmVzcG9u",
            "c2UiABJFChdHZXRDaGFuZ2VDb25uZWN0aW9uSW5mbxIVLkNoYW5nZUNvbm5l",
            "Y3Rpb25JbmZvGhEuQ2hhbmdlRGJSZXNwb25zZSIAEi0KC0dldENoYW5nZURi",
            "EgkuQ2hhbmdlRGIaES5DaGFuZ2VEYlJlc3BvbnNlIgASVQoZUG9zdENvbnZl",
            "cnRTZXNzaW9uVG9Ub2tlbhIWLkNvbnZlcnRTZXNzaW9uVG9Ub2tlbhoeLkNv",
            "bnZlcnRTZXNzaW9uVG9Ub2tlblJlc3BvbnNlIgASNAoOUG9zdENyZWF0ZVRv",
            "ZG8SCy5DcmVhdGVUb2RvGhMuQ3JlYXRlVG9kb1Jlc3BvbnNlIgASLwoOQ2Fs",
            "bERlbGV0ZVRvZG8SCy5EZWxldGVUb2RvGg4uRW1wdHlSZXNwb25zZSIAEjEK",
            "D0NhbGxEZWxldGVUb2RvcxIMLkRlbGV0ZVRvZG9zGg4uRW1wdHlSZXNwb25z",
            "ZSIAEmkKL0dldER5bmFtaWNRdWVyeUpvaW5lZFJvY2tzdGFyQWxidW1zQ3Vz",
            "dG9tU2VsZWN0Eg8uRHluYW1pY1JlcXVlc3QaIy5RdWVyeVJlc3BvbnNlX0N1",
            "c3RvbVNlbGVjdFJvY2tzdGFyIgASeQo3R2V0RHluYW1pY1F1ZXJ5Sm9pbmVk",
            "Um9ja3N0YXJBbGJ1bXNDdXN0b21TZWxlY3RSZXNwb25zZRIPLkR5bmFtaWNS",
            "ZXF1ZXN0GisuUXVlcnlSZXNwb25zZV9DdXN0b21TZWxlY3RSb2Nrc3RhclJl",
            "c3BvbnNlIgASTwohR2V0RHluYW1pY1F1ZXJ5T3ZlcnJpZGVkUm9ja3N0YXJz",
            "Eg8uRHluYW1pY1JlcXVlc3QaFy5RdWVyeVJlc3BvbnNlX1JvY2tzdGFyIgAS",
            "WwonR2V0RHluYW1pY1F1ZXJ5T3ZlcnJpZGVkQ3VzdG9tUm9ja3N0YXJzEg8u",
            "RHluYW1pY1JlcXVlc3QaHS5RdWVyeVJlc3BvbnNlX0N1c3RvbVJvY2tzdGFy",
            "IgASUwolR2V0RHluYW1pY1F1ZXJ5Q2FzZUluc2Vuc2l0aXZlT3JkZXJCeRIP",
            "LkR5bmFtaWNSZXF1ZXN0GhcuUXVlcnlSZXNwb25zZV9Sb2Nrc3RhciIAEkEK",
            "FkdldER5bmFtaWNTdHJlYW1Nb3ZpZXMSDy5EeW5hbWljUmVxdWVzdBoULlF1",
            "ZXJ5UmVzcG9uc2VfTW92aWUiABJfCihHZXREeW5hbWljUXVlcnlDdXN0b21S",
            "b2Nrc3RhcnNSZWZlcmVuY2VzEg8uRHluYW1pY1JlcXVlc3QaIC5RdWVyeVJl",
            "c3BvbnNlX1JvY2tzdGFyUmVmZXJlbmNlIgASXworR2V0RHluYW1pY1F1ZXJ5",
            "Um9ja3N0YXJBbGJ1bXNDdXN0b21MZWZ0Sm9pbhIPLkR5bmFtaWNSZXF1ZXN0",
            "Gh0uUXVlcnlSZXNwb25zZV9DdXN0b21Sb2Nrc3RhciIAElEKI0dldER5bmFt",
            "aWNRdWVyeUNoYW5nZUNvbm5lY3Rpb25JbmZvEg8uRHluYW1pY1JlcXVlc3Qa",
            "Fy5RdWVyeVJlc3BvbnNlX1JvY2tzdGFyIgASUAodR2V0RHluYW1pY1F1ZXJ5",
            "TmFtZWRSb2Nrc3RhcnMSDy5EeW5hbWljUmVxdWVzdBocLlF1ZXJ5UmVzcG9u",
            "c2VfTmFtZWRSb2Nrc3RhciIAEkYKGEdldER5bmFtaWNRdWVyeVJvY2tzdGFy",
            "cxIPLkR5bmFtaWNSZXF1ZXN0GhcuUXVlcnlSZXNwb25zZV9Sb2Nrc3RhciIA",
            "ElAKHUdldER5bmFtaWNRdWVyeVJvY2tzdGFyQWxidW1zEg8uRHluYW1pY1Jl",
            "cXVlc3QaHC5RdWVyeVJlc3BvbnNlX1JvY2tzdGFyQWxidW0iABJJChlHZXRE",
            "eW5hbWljUXVlcnlQYWdpbmdUZXN0Eg8uRHluYW1pY1JlcXVlc3QaGS5RdWVy",
            "eVJlc3BvbnNlX1BhZ2luZ1Rlc3QiABJRCiNHZXREeW5hbWljUXVlcnlSb2Nr",
            "c3RhcnNDb252ZW50aW9ucxIPLkR5bmFtaWNSZXF1ZXN0GhcuUXVlcnlSZXNw",
            "b25zZV9Sb2Nrc3RhciIAElIKHkdldER5bmFtaWNRdWVyeUN1c3RvbVJvY2tz",
            "dGFycxIPLkR5bmFtaWNSZXF1ZXN0Gh0uUXVlcnlSZXNwb25zZV9DdXN0b21S",
            "b2Nrc3RhciIAElcKI0dldER5bmFtaWNRdWVyeUpvaW5lZFJvY2tzdGFyQWxi",
            "dW1zEg8uRHluYW1pY1JlcXVlc3QaHS5RdWVyeVJlc3BvbnNlX0N1c3RvbVJv",
            "Y2tzdGFyIgASWQolR2V0RHluYW1pY1F1ZXJ5Um9ja3N0YXJBbGJ1bXNJbXBs",
            "aWNpdBIPLkR5bmFtaWNSZXF1ZXN0Gh0uUXVlcnlSZXNwb25zZV9DdXN0b21S",
            "b2Nrc3RhciIAElkKJUdldER5bmFtaWNRdWVyeVJvY2tzdGFyQWxidW1zTGVm",
            "dEpvaW4SDy5EeW5hbWljUmVxdWVzdBodLlF1ZXJ5UmVzcG9uc2VfQ3VzdG9t",
            "Um9ja3N0YXIiABJUCiBHZXREeW5hbWljUXVlcnlNdWx0aUpvaW5Sb2Nrc3Rh",
            "chIPLkR5bmFtaWNSZXF1ZXN0Gh0uUXVlcnlSZXNwb25zZV9DdXN0b21Sb2Nr",
            "c3RhciIAEksKHUdldER5bmFtaWNRdWVyeUZpZWxkUm9ja3N0YXJzEg8uRHlu",
            "YW1pY1JlcXVlc3QaFy5RdWVyeVJlc3BvbnNlX1JvY2tzdGFyIgASTwocR2V0",
            "RHluYW1pY1F1ZXJ5Um9ja3N0YXJBbGlhcxIPLkR5bmFtaWNSZXF1ZXN0Ghwu",
            "UXVlcnlSZXNwb25zZV9Sb2Nrc3RhckFsaWFzIgASUgokR2V0RHluYW1pY1F1",
            "ZXJ5RmllbGRSb2Nrc3RhcnNEeW5hbWljEg8uRHluYW1pY1JlcXVlc3QaFy5R",
            "dWVyeVJlc3BvbnNlX1JvY2tzdGFyIgASTAoeR2V0RHluYW1pY1F1ZXJ5Um9j",
            "a3N0YXJzRmlsdGVyEg8uRHluYW1pY1JlcXVlc3QaFy5RdWVyeVJlc3BvbnNl",
            "X1JvY2tzdGFyIgASWAokR2V0RHluYW1pY1F1ZXJ5Q3VzdG9tUm9ja3N0YXJz",
            "RmlsdGVyEg8uRHluYW1pY1JlcXVlc3QaHS5RdWVyeVJlc3BvbnNlX0N1c3Rv",
            "bVJvY2tzdGFyIgASTQofR2V0RHluYW1pY1F1ZXJ5Um9ja3N0YXJzSUZpbHRl",
            "chIPLkR5bmFtaWNSZXF1ZXN0GhcuUXVlcnlSZXNwb25zZV9Sb2Nrc3RhciIA",
            "EkgKGkdldER5bmFtaWNRdWVyeU9yUm9ja3N0YXJzEg8uRHluYW1pY1JlcXVl",
            "c3QaFy5RdWVyeVJlc3BvbnNlX1JvY2tzdGFyIgASTgogR2V0RHluYW1pY1F1",
            "ZXJ5Um9ja3N0YXJzSW1wbGljaXQSDy5EeW5hbWljUmVxdWVzdBoXLlF1ZXJ5",
            "UmVzcG9uc2VfUm9ja3N0YXIiABJOCiBHZXREeW5hbWljUXVlcnlPclJvY2tz",
            "dGFyc0ZpZWxkcxIPLkR5bmFtaWNSZXF1ZXN0GhcuUXVlcnlSZXNwb25zZV9S",
            "b2Nrc3RhciIAElYKKEdldER5bmFtaWNRdWVyeUZpZWxkc0ltcGxpY2l0Q29u",
            "dmVudGlvbnMSDy5EeW5hbWljUmVxdWVzdBoXLlF1ZXJ5UmVzcG9uc2VfUm9j",
            "a3N0YXIiABJJChtHZXREeW5hbWljUXVlcnlHZXRSb2Nrc3RhcnMSDy5EeW5h",
            "bWljUmVxdWVzdBoXLlF1ZXJ5UmVzcG9uc2VfUm9ja3N0YXIiABJMCh5HZXRE",
            "eW5hbWljUXVlcnlSb2Nrc3RhckZpbHRlcnMSDy5EeW5hbWljUmVxdWVzdBoX",
            "LlF1ZXJ5UmVzcG9uc2VfUm9ja3N0YXIiABJQCiJHZXREeW5hbWljUXVlcnlH",
            "ZXRSb2Nrc3RhcnNEeW5hbWljEg8uRHluYW1pY1JlcXVlc3QaFy5RdWVyeVJl",
            "c3BvbnNlX1JvY2tzdGFyIgASXgokR2V0RHluYW1pY1F1ZXJ5Q3VzdG9tUm9j",
            "a3N0YXJzU2NoZW1hEg8uRHluYW1pY1JlcXVlc3QaIy5RdWVyeVJlc3BvbnNl",
            "X0N1c3RvbVJvY2tzdGFyU2NoZW1hIgASQQoWR2V0RHluYW1pY1NlYXJjaE1v",
            "dmllcxIPLkR5bmFtaWNSZXF1ZXN0GhQuUXVlcnlSZXNwb25zZV9Nb3ZpZSIA",
            "EkAKFUdldER5bmFtaWNRdWVyeU1vdmllcxIPLkR5bmFtaWNSZXF1ZXN0GhQu",
            "UXVlcnlSZXNwb25zZV9Nb3ZpZSIAEk0KH0dldER5bmFtaWNRdWVyeVVua25v",
            "d25Sb2Nrc3RhcnMSDy5EeW5hbWljUmVxdWVzdBoXLlF1ZXJ5UmVzcG9uc2Vf",
            "Um9ja3N0YXIiABJdCiZHZXREeW5hbWljUXVlcnlSb2Nrc3RhcnNXaXRoUmVm",
            "ZXJlbmNlcxIPLkR5bmFtaWNSZXF1ZXN0GiAuUXVlcnlSZXNwb25zZV9Sb2Nr",
            "c3RhclJlZmVyZW5jZSIAEkcKGEdldER5bmFtaWNRdWVyeUFsbEZpZWxkcxIP",
            "LkR5bmFtaWNSZXF1ZXN0GhguUXVlcnlSZXNwb25zZV9BbGxGaWVsZHMiABJO",
            "ChxHZXREeW5hbWljUXVlcnlUeXBlV2l0aEVudW1zEg8uRHluYW1pY1JlcXVl",
            "c3QaGy5RdWVyeVJlc3BvbnNlX1R5cGVXaXRoRW51bSIAEksKHUdldER5bmFt",
            "aWNRdWVyeUFkaG9jUm9ja3N0YXJzEg8uRHluYW1pY1JlcXVlc3QaFy5RdWVy",
            "eVJlc3BvbnNlX1JvY2tzdGFyIgASPwoUR2V0RHluYW1pY1F1ZXJ5QWRob2MS",
            "Dy5EeW5hbWljUmVxdWVzdBoULlF1ZXJ5UmVzcG9uc2VfQWRob2MiABJFChdH",
            "ZXREeW5hbWljUXVlcnlDaGFuZ2VEYhIPLkR5bmFtaWNSZXF1ZXN0GhcuUXVl",
            "cnlSZXNwb25zZV9Sb2Nrc3RhciIAEkAKElBvc3RHZXRBY2Nlc3NUb2tlbhIP",
            "LkdldEFjY2Vzc1Rva2VuGhcuR2V0QWNjZXNzVG9rZW5SZXNwb25zZSIAEjQK",
            "DkNhbGxHZXRBcGlLZXlzEgsuR2V0QXBpS2V5cxoTLkdldEFwaUtleXNSZXNw",
            "b25zZSIAEicKC0NhbGxHZXRGaWxlEgguR2V0RmlsZRoMLkZpbGVDb250ZW50",
            "IgASKwoMQ2FsbEdldEhlbGxvEgkuR2V0SGVsbG8aDi5IZWxsb1Jlc3BvbnNl",
            "IgASKwoLQ2FsbEdldFRvZG8SCC5HZXRUb2RvGhAuR2V0VG9kb1Jlc3BvbnNl",
            "IgASLgoMQ2FsbEdldFRvZG9zEgkuR2V0VG9kb3MaES5HZXRUb2Rvc1Jlc3Bv",
            "bnNlIgASLQoLR2V0SGVsbG9Kd3QSCS5IZWxsb0p3dBoRLkhlbGxvSnd0UmVz",
            "cG9uc2UiABIuCgxQb3N0SGVsbG9Kd3QSCS5IZWxsb0p3dBoRLkhlbGxvSnd0",
            "UmVzcG9uc2UiABItCgtQdXRIZWxsb0p3dBIJLkhlbGxvSnd0GhEuSGVsbG9K",
            "d3RSZXNwb25zZSIAEjAKDkRlbGV0ZUhlbGxvSnd0EgkuSGVsbG9Kd3QaES5I",
            "ZWxsb0p3dFJlc3BvbnNlIgASIgoHR2V0SW5jchIFLkluY3IaDi5FbXB0eVJl",
            "c3BvbnNlIgASIwoIUG9zdEluY3ISBS5JbmNyGg4uRW1wdHlSZXNwb25zZSIA",
            "EiIKB1B1dEluY3ISBS5JbmNyGg4uRW1wdHlSZXNwb25zZSIAEiUKCkRlbGV0",
            "ZUluY3ISBS5JbmNyGg4uRW1wdHlSZXNwb25zZSIAEi4KDFBvc3RNdWx0aXBs",
            "eRIJLk11bHRpcGx5GhEuTXVsdGlwbHlSZXNwb25zZSIAEjsKFUNhbGxQb3N0",
            "Q2hhdFRvQ2hhbm5lbBISLlBvc3RDaGF0VG9DaGFubmVsGgwuQ2hhdE1lc3Nh",
            "Z2UiABI0Cg1HZXRRdWVyeUFkaG9jEgsuUXVlcnlBZGhvYxoULlF1ZXJ5UmVz",
            "cG9uc2VfQWRob2MiABJJChZHZXRRdWVyeUFkaG9jUm9ja3N0YXJzEhQuUXVl",
            "cnlBZGhvY1JvY2tzdGFycxoXLlF1ZXJ5UmVzcG9uc2VfUm9ja3N0YXIiABJA",
            "ChFHZXRRdWVyeUFsbEZpZWxkcxIPLlF1ZXJ5QWxsRmllbGRzGhguUXVlcnlS",
            "ZXNwb25zZV9BbGxGaWVsZHMiABJZCh5HZXRRdWVyeUNhc2VJbnNlbnNpdGl2",
            "ZU9yZGVyQnkSHC5RdWVyeUNhc2VJbnNlbnNpdGl2ZU9yZGVyQnkaFy5RdWVy",
            "eVJlc3BvbnNlX1JvY2tzdGFyIgASVQocR2V0UXVlcnlDaGFuZ2VDb25uZWN0",
            "aW9uSW5mbxIaLlF1ZXJ5Q2hhbmdlQ29ubmVjdGlvbkluZm8aFy5RdWVyeVJl",
            "c3BvbnNlX1JvY2tzdGFyIgASPQoQR2V0UXVlcnlDaGFuZ2VEYhIOLlF1ZXJ5",
            "Q2hhbmdlRGIaFy5RdWVyeVJlc3BvbnNlX1JvY2tzdGFyIgASUQoXR2V0UXVl",
            "cnlDdXN0b21Sb2Nrc3RhcnMSFS5RdWVyeUN1c3RvbVJvY2tzdGFycxodLlF1",
            "ZXJ5UmVzcG9uc2VfQ3VzdG9tUm9ja3N0YXIiABJdCh1HZXRRdWVyeUN1c3Rv",
            "bVJvY2tzdGFyc0ZpbHRlchIbLlF1ZXJ5Q3VzdG9tUm9ja3N0YXJzRmlsdGVy",
            "Gh0uUXVlcnlSZXNwb25zZV9DdXN0b21Sb2Nrc3RhciIAEmgKIUdldFF1ZXJ5",
            "Q3VzdG9tUm9ja3N0YXJzUmVmZXJlbmNlcxIfLlF1ZXJ5Q3VzdG9tUm9ja3N0",
            "YXJzUmVmZXJlbmNlcxogLlF1ZXJ5UmVzcG9uc2VfUm9ja3N0YXJSZWZlcmVu",
            "Y2UiABJjCh1HZXRRdWVyeUN1c3RvbVJvY2tzdGFyc1NjaGVtYRIbLlF1ZXJ5",
            "Q3VzdG9tUm9ja3N0YXJzU2NoZW1hGiMuUXVlcnlSZXNwb25zZV9DdXN0b21S",
            "b2Nrc3RhclNjaGVtYSIAEkkKFkdldFF1ZXJ5RmllbGRSb2Nrc3RhcnMSFC5R",
            "dWVyeUZpZWxkUm9ja3N0YXJzGhcuUXVlcnlSZXNwb25zZV9Sb2Nrc3RhciIA",
            "ElcKHUdldFF1ZXJ5RmllbGRSb2Nrc3RhcnNEeW5hbWljEhsuUXVlcnlGaWVs",
            "ZFJvY2tzdGFyc0R5bmFtaWMaFy5RdWVyeVJlc3BvbnNlX1JvY2tzdGFyIgAS",
            "XwohR2V0UXVlcnlGaWVsZHNJbXBsaWNpdENvbnZlbnRpb25zEh8uUXVlcnlG",
            "aWVsZHNJbXBsaWNpdENvbnZlbnRpb25zGhcuUXVlcnlSZXNwb25zZV9Sb2Nr",
            "c3RhciIAEkUKFEdldFF1ZXJ5R2V0Um9ja3N0YXJzEhIuUXVlcnlHZXRSb2Nr",
            "c3RhcnMaFy5RdWVyeVJlc3BvbnNlX1JvY2tzdGFyIgASUwobR2V0UXVlcnlH",
            "ZXRSb2Nrc3RhcnNEeW5hbWljEhkuUXVlcnlHZXRSb2Nrc3RhcnNEeW5hbWlj",
            "GhcuUXVlcnlSZXNwb25zZV9Sb2Nrc3RhciIAElsKHEdldFF1ZXJ5Sm9pbmVk",
            "Um9ja3N0YXJBbGJ1bXMSGi5RdWVyeUpvaW5lZFJvY2tzdGFyQWxidW1zGh0u",
            "UXVlcnlSZXNwb25zZV9DdXN0b21Sb2Nrc3RhciIAEnkKKEdldFF1ZXJ5Sm9p",
            "bmVkUm9ja3N0YXJBbGJ1bXNDdXN0b21TZWxlY3QSJi5RdWVyeUpvaW5lZFJv",
            "Y2tzdGFyQWxidW1zQ3VzdG9tU2VsZWN0GiMuUXVlcnlSZXNwb25zZV9DdXN0",
            "b21TZWxlY3RSb2Nrc3RhciIAEpEBCjBHZXRRdWVyeUpvaW5lZFJvY2tzdGFy",
            "QWxidW1zQ3VzdG9tU2VsZWN0UmVzcG9uc2USLi5RdWVyeUpvaW5lZFJvY2tz",
            "dGFyQWxidW1zQ3VzdG9tU2VsZWN0UmVzcG9uc2UaKy5RdWVyeVJlc3BvbnNl",
            "X0N1c3RvbVNlbGVjdFJvY2tzdGFyUmVzcG9uc2UiABI2Cg5HZXRRdWVyeU1v",
            "dmllcxIMLlF1ZXJ5TW92aWVzGhQuUXVlcnlSZXNwb25zZV9Nb3ZpZSIAElUK",
            "GUdldFF1ZXJ5TXVsdGlKb2luUm9ja3N0YXISFy5RdWVyeU11bHRpSm9pblJv",
            "Y2tzdGFyGh0uUXVlcnlSZXNwb25zZV9DdXN0b21Sb2Nrc3RhciIAEk4KFkdl",
            "dFF1ZXJ5TmFtZWRSb2Nrc3RhcnMSFC5RdWVyeU5hbWVkUm9ja3N0YXJzGhwu",
            "UXVlcnlSZXNwb25zZV9OYW1lZFJvY2tzdGFyIgASQwoTR2V0UXVlcnlPclJv",
            "Y2tzdGFycxIRLlF1ZXJ5T3JSb2Nrc3RhcnMaFy5RdWVyeVJlc3BvbnNlX1Jv",
            "Y2tzdGFyIgASTwoZR2V0UXVlcnlPclJvY2tzdGFyc0ZpZWxkcxIXLlF1ZXJ5",
            "T3JSb2Nrc3RhcnNGaWVsZHMaFy5RdWVyeVJlc3BvbnNlX1JvY2tzdGFyIgAS",
            "YwogR2V0UXVlcnlPdmVycmlkZWRDdXN0b21Sb2Nrc3RhcnMSHi5RdWVyeU92",
            "ZXJyaWRlZEN1c3RvbVJvY2tzdGFycxodLlF1ZXJ5UmVzcG9uc2VfQ3VzdG9t",
            "Um9ja3N0YXIiABJRChpHZXRRdWVyeU92ZXJyaWRlZFJvY2tzdGFycxIYLlF1",
            "ZXJ5T3ZlcnJpZGVkUm9ja3N0YXJzGhcuUXVlcnlSZXNwb25zZV9Sb2Nrc3Rh",
            "ciIAEkMKEkdldFF1ZXJ5UGFnaW5nVGVzdBIQLlF1ZXJ5UGFnaW5nVGVzdBoZ",
            "LlF1ZXJ5UmVzcG9uc2VfUGFnaW5nVGVzdCIAEk4KFkdldFF1ZXJ5Um9ja3N0",
            "YXJBbGJ1bXMSFC5RdWVyeVJvY2tzdGFyQWxidW1zGhwuUXVlcnlSZXNwb25z",
            "ZV9Sb2Nrc3RhckFsYnVtIgASawokR2V0UXVlcnlSb2Nrc3RhckFsYnVtc0N1",
            "c3RvbUxlZnRKb2luEiIuUXVlcnlSb2Nrc3RhckFsYnVtc0N1c3RvbUxlZnRK",
            "b2luGh0uUXVlcnlSZXNwb25zZV9DdXN0b21Sb2Nrc3RhciIAEl8KHkdldFF1",
            "ZXJ5Um9ja3N0YXJBbGJ1bXNJbXBsaWNpdBIcLlF1ZXJ5Um9ja3N0YXJBbGJ1",
            "bXNJbXBsaWNpdBodLlF1ZXJ5UmVzcG9uc2VfQ3VzdG9tUm9ja3N0YXIiABJf",
            "Ch5HZXRRdWVyeVJvY2tzdGFyQWxidW1zTGVmdEpvaW4SHC5RdWVyeVJvY2tz",
            "dGFyQWxidW1zTGVmdEpvaW4aHS5RdWVyeVJlc3BvbnNlX0N1c3RvbVJvY2tz",
            "dGFyIgASTAoVR2V0UXVlcnlSb2Nrc3RhckFsaWFzEhMuUXVlcnlSb2Nrc3Rh",
            "ckFsaWFzGhwuUXVlcnlSZXNwb25zZV9Sb2Nrc3RhckFsaWFzIgASSwoXR2V0",
            "UXVlcnlSb2Nrc3RhckZpbHRlcnMSFS5RdWVyeVJvY2tzdGFyRmlsdGVycxoX",
            "LlF1ZXJ5UmVzcG9uc2VfUm9ja3N0YXIiABI/ChFHZXRRdWVyeVJvY2tzdGFy",
            "cxIPLlF1ZXJ5Um9ja3N0YXJzGhcuUXVlcnlSZXNwb25zZV9Sb2Nrc3RhciIA",
            "ElUKHEdldFF1ZXJ5Um9ja3N0YXJzQ29udmVudGlvbnMSGi5RdWVyeVJvY2tz",
            "dGFyc0NvbnZlbnRpb25zGhcuUXVlcnlSZXNwb25zZV9Sb2Nrc3RhciIAEksK",
            "F0dldFF1ZXJ5Um9ja3N0YXJzRmlsdGVyEhUuUXVlcnlSb2Nrc3RhcnNGaWx0",
            "ZXIaFy5RdWVyeVJlc3BvbnNlX1JvY2tzdGFyIgASTQoYR2V0UXVlcnlSb2Nr",
            "c3RhcnNJRmlsdGVyEhYuUXVlcnlSb2Nrc3RhcnNJRmlsdGVyGhcuUXVlcnlS",
            "ZXNwb25zZV9Sb2Nrc3RhciIAEk8KGUdldFF1ZXJ5Um9ja3N0YXJzSW1wbGlj",
            "aXQSFy5RdWVyeVJvY2tzdGFyc0ltcGxpY2l0GhcuUXVlcnlSZXNwb25zZV9S",
            "b2Nrc3RhciIAEmQKH0dldFF1ZXJ5Um9ja3N0YXJzV2l0aFJlZmVyZW5jZXMS",
            "HS5RdWVyeVJvY2tzdGFyc1dpdGhSZWZlcmVuY2VzGiAuUXVlcnlSZXNwb25z",
            "ZV9Sb2Nrc3RhclJlZmVyZW5jZSIAEksKFUdldFF1ZXJ5VHlwZVdpdGhFbnVt",
            "cxITLlF1ZXJ5VHlwZVdpdGhFbnVtcxobLlF1ZXJ5UmVzcG9uc2VfVHlwZVdp",
            "dGhFbnVtIgASTQoYR2V0UXVlcnlVbmtub3duUm9ja3N0YXJzEhYuUXVlcnlV",
            "bmtub3duUm9ja3N0YXJzGhcuUXVlcnlSZXNwb25zZV9Sb2Nrc3RhciIAEkkK",
            "FVBvc3RSZWdlbmVyYXRlQXBpS2V5cxISLlJlZ2VuZXJhdGVBcGlLZXlzGhou",
            "UmVnZW5lcmF0ZUFwaUtleXNSZXNwb25zZSIAEi0KC1B1dFJlZ2lzdGVyEgku",
            "UmVnaXN0ZXIaES5SZWdpc3RlclJlc3BvbnNlIgASLgoMUG9zdFJlZ2lzdGVy",
            "EgkuUmVnaXN0ZXIaES5SZWdpc3RlclJlc3BvbnNlIgASMQoPR2V0UmVxdWly",
            "ZXNBdXRoEg0uUmVxdWlyZXNBdXRoGg0uUmVxdWlyZXNBdXRoIgASMgoQUG9z",
            "dFJlcXVpcmVzQXV0aBINLlJlcXVpcmVzQXV0aBoNLlJlcXVpcmVzQXV0aCIA",
            "EjEKD1B1dFJlcXVpcmVzQXV0aBINLlJlcXVpcmVzQXV0aBoNLlJlcXVpcmVz",
            "QXV0aCIAEjQKEkRlbGV0ZVJlcXVpcmVzQXV0aBINLlJlcXVpcmVzQXV0aBoN",
            "LlJlcXVpcmVzQXV0aCIAEi8KDlBvc3RSZXNldFRvZG9zEgsuUmVzZXRUb2Rv",
            "cxoOLkVtcHR5UmVzcG9uc2UiABI4Cg9HZXRTZWFyY2hNb3ZpZXMSDS5TZWFy",
            "Y2hNb3ZpZXMaFC5RdWVyeVJlc3BvbnNlX01vdmllIgASKwoLUG9zdFNlY3Vy",
            "ZWQSCC5TZWN1cmVkGhAuU2VjdXJlZFJlc3BvbnNlIgASMwoRU2VydmVyU3Ry",
            "ZWFtRmlsZXMSDC5TdHJlYW1GaWxlcxoMLkZpbGVDb250ZW50IgAwARI4Cg9H",
            "ZXRTdHJlYW1Nb3ZpZXMSDS5TdHJlYW1Nb3ZpZXMaFC5RdWVyeVJlc3BvbnNl",
            "X01vdmllIgASUAoYU2VydmVyU3RyZWFtU2VydmVyRXZlbnRzEhMuU3RyZWFt",
            "U2VydmVyRXZlbnRzGhsuU3RyZWFtU2VydmVyRXZlbnRzUmVzcG9uc2UiADAB",
            "EiQKCEdldFRocm93EgYuVGhyb3caDi5IZWxsb1Jlc3BvbnNlIgASNgoOR2V0",
            "VGhyb3dDdXN0b20SDC5UaHJvd0N1c3RvbRoULlRocm93Q3VzdG9tUmVzcG9u",
            "c2UiABIsCgxHZXRUaHJvd1ZvaWQSCi5UaHJvd1ZvaWQaDi5FbXB0eVJlc3Bv",
            "bnNlIgASPQoVUG9zdFRyaWdnZXJWYWxpZGF0b3JzEhIuVHJpZ2dlclZhbGlk",
            "YXRvcnMaDi5FbXB0eVJlc3BvbnNlIgASPQoRUG9zdFVuQXNzaWduUm9sZXMS",
            "Di5VbkFzc2lnblJvbGVzGhYuVW5Bc3NpZ25Sb2xlc1Jlc3BvbnNlIgASLgoN",
            "UHV0VXBkYXRlVG9kbxILLlVwZGF0ZVRvZG8aDi5FbXB0eVJlc3BvbnNlIgBC",
            "TqoCJFNlcnZpY2VTdGFjay5FeHRlbnNpb25zLlRlc3RzLlByb3RvY8oCJFNl",
            "cnZpY2VTdGFjay5FeHRlbnNpb25zLlRlc3RzLlByb3RvY2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::ProtoBuf.Bcl.BclReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ServiceStack.Extensions.Tests.Protoc.HttpStatusCode), typeof(global::ServiceStack.Extensions.Tests.Protoc.LivingStatus), typeof(global::ServiceStack.Extensions.Tests.Protoc.SomeEnum), typeof(global::ServiceStack.Extensions.Tests.Protoc.SomeEnumAsInt), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.AddHeader), global::ServiceStack.Extensions.Tests.Protoc.AddHeader.Parser, new[]{ "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Adhoc), global::ServiceStack.Extensions.Tests.Protoc.Adhoc.Parser, new[]{ "Id", "FirstName", "LastName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.AllFields), global::ServiceStack.Extensions.Tests.Protoc.AllFields.Parser, new[]{ "Id", "NullableId", "Byte", "Short", "Int", "Long", "UShort", "UInt", "ULong", "Float", "Double", "Decimal", "String", "DateTime", "TimeSpan", "Guid", "NullableDateTime", "NullableTimeSpan", "NullableGuid", "Enum", "NullableEnum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.AnyHello), global::ServiceStack.Extensions.Tests.Protoc.AnyHello.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.AssignRoles), global::ServiceStack.Extensions.Tests.Protoc.AssignRoles.Parser, new[]{ "UserName", "Permissions", "Roles", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.AssignRolesResponse), global::ServiceStack.Extensions.Tests.Protoc.AssignRolesResponse.Parser, new[]{ "AllRoles", "AllPermissions", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Authenticate), global::ServiceStack.Extensions.Tests.Protoc.Authenticate.Parser, new[]{ "Provider", "State", "OauthToken", "OauthVerifier", "UserName", "Password", "RememberMe", "Continue", "ErrorView", "Nonce", "Uri", "Response", "Qop", "Nc", "Cnonce", "UseTokenCookie", "AccessToken", "AccessTokenSecret", "Scope", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.AuthenticateResponse), global::ServiceStack.Extensions.Tests.Protoc.AuthenticateResponse.Parser, new[]{ "UserId", "SessionId", "UserName", "DisplayName", "ReferrerUrl", "BearerToken", "RefreshToken", "ProfileUrl", "Roles", "Permissions", "ResponseStatus", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ChangeConnectionInfo), global::ServiceStack.Extensions.Tests.Protoc.ChangeConnectionInfo.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ChangeDb), global::ServiceStack.Extensions.Tests.Protoc.ChangeDb.Parser, new[]{ "NamedConnection", "ConnectionString", "ProviderName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ChangeDbResponse), global::ServiceStack.Extensions.Tests.Protoc.ChangeDbResponse.Parser, new[]{ "Results" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ChatMessage), global::ServiceStack.Extensions.Tests.Protoc.ChatMessage.Parser, new[]{ "Id", "Channel", "FromUserId", "FromName", "DisplayName", "Message", "UserAuthId", "Private" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ConvertSessionToToken), global::ServiceStack.Extensions.Tests.Protoc.ConvertSessionToToken.Parser, new[]{ "PreserveSession", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ConvertSessionToTokenResponse), global::ServiceStack.Extensions.Tests.Protoc.ConvertSessionToTokenResponse.Parser, new[]{ "Meta", "AccessToken", "RefreshToken", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.CreateTodo), global::ServiceStack.Extensions.Tests.Protoc.CreateTodo.Parser, new[]{ "Title", "Order" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.CreateTodoResponse), global::ServiceStack.Extensions.Tests.Protoc.CreateTodoResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar), global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar.Parser, new[]{ "FirstName", "LastName", "Age", "RockstarAlbumName", "RockstarGenreName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.CustomRockstarSchema), global::ServiceStack.Extensions.Tests.Protoc.CustomRockstarSchema.Parser, new[]{ "FirstName", "LastName", "Age", "RockstarAlbumName", "RockstarGenreName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstar), global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstar.Parser, new[]{ "Id", "FirstName", "LastName", "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstarResponse), global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstarResponse.Parser, new[]{ "Id", "FirstName", "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.DeleteTodo), global::ServiceStack.Extensions.Tests.Protoc.DeleteTodo.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.DeleteTodos), global::ServiceStack.Extensions.Tests.Protoc.DeleteTodos.Parser, new[]{ "Ids" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.DynamicRequest), global::ServiceStack.Extensions.Tests.Protoc.DynamicRequest.Parser, new[]{ "Params" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.EmptyResponse), global::ServiceStack.Extensions.Tests.Protoc.EmptyResponse.Parser, new[]{ "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.FileContent), global::ServiceStack.Extensions.Tests.Protoc.FileContent.Parser, new[]{ "Name", "Type", "Length", "Body", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetAccessToken), global::ServiceStack.Extensions.Tests.Protoc.GetAccessToken.Parser, new[]{ "RefreshToken", "UseTokenCookie", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetAccessTokenResponse), global::ServiceStack.Extensions.Tests.Protoc.GetAccessTokenResponse.Parser, new[]{ "AccessToken", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetApiKeys), global::ServiceStack.Extensions.Tests.Protoc.GetApiKeys.Parser, new[]{ "Environment", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetApiKeysResponse), global::ServiceStack.Extensions.Tests.Protoc.GetApiKeysResponse.Parser, new[]{ "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetFile), global::ServiceStack.Extensions.Tests.Protoc.GetFile.Parser, new[]{ "Path" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetHello), global::ServiceStack.Extensions.Tests.Protoc.GetHello.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetTodo), global::ServiceStack.Extensions.Tests.Protoc.GetTodo.Parser, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetTodoResponse), global::ServiceStack.Extensions.Tests.Protoc.GetTodoResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetTodos), global::ServiceStack.Extensions.Tests.Protoc.GetTodos.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.GetTodosResponse), global::ServiceStack.Extensions.Tests.Protoc.GetTodosResponse.Parser, new[]{ "Results", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.HelloJwt), global::ServiceStack.Extensions.Tests.Protoc.HelloJwt.Parser, new[]{ "Name", "BearerToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.HelloJwtResponse), global::ServiceStack.Extensions.Tests.Protoc.HelloJwtResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.HelloResponse), global::ServiceStack.Extensions.Tests.Protoc.HelloResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Incr), global::ServiceStack.Extensions.Tests.Protoc.Incr.Parser, new[]{ "Amount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Movie), global::ServiceStack.Extensions.Tests.Protoc.Movie.Parser, new[]{ "Id", "ImdbId", "Title", "Rating", "Score", "Director", "ReleaseDate", "TagLine", "Genres" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Multiply), global::ServiceStack.Extensions.Tests.Protoc.Multiply.Parser, new[]{ "X", "Y" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.MultiplyResponse), global::ServiceStack.Extensions.Tests.Protoc.MultiplyResponse.Parser, new[]{ "Result" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.NamedRockstar), global::ServiceStack.Extensions.Tests.Protoc.NamedRockstar.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.PagingTest), global::ServiceStack.Extensions.Tests.Protoc.PagingTest.Parser, new[]{ "Id", "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.PostChatToChannel), global::ServiceStack.Extensions.Tests.Protoc.PostChatToChannel.Parser, new[]{ "From", "ToUserId", "Channel", "Message", "Selector" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryAdhoc), global::ServiceStack.Extensions.Tests.Protoc.QueryAdhoc.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryAdhocRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryAdhocRockstars.Parser, new[]{ "FirstName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryAllFields), global::ServiceStack.Extensions.Tests.Protoc.QueryAllFields.Parser, new[]{ "Guid" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryBase), global::ServiceStack.Extensions.Tests.Protoc.QueryBase.Parser, new[]{ "Skip", "Take", "OrderBy", "OrderByDesc", "Include", "Fields", "Meta", "QueryDbRockstarCustomRockstar", "QueryDbRockstarRockstarAlias", "QueryDbPagingTest", "QueryDbCustomSelectRockstar", "QueryDbMovie", "QueryDbRockstarReference", "QueryDbAdhoc", "QueryDbNamedRockstar", "QueryDbTypeWithEnum", "QueryDbRockstarAlbum", "QueryDbCustomSelectRockstarCustomSelectRockstarResponse", "QueryDbRockstar", "QueryDbAllFields", "QueryDbRockstarCustomRockstarSchema" }, new[]{ "Subtype" }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy), global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo), global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryChangeDb), global::ServiceStack.Extensions.Tests.Protoc.QueryChangeDb.Parser, new[]{ "NamedConnection", "ConnectionString", "ProviderName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstars.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsFilter), global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsFilter.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences), global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsSchema), global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsSchema.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Adhoc), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Adhoc.Parser, new[]{ "QueryAdhoc" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_AllFields), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_AllFields.Parser, new[]{ "QueryAllFields" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar.Parser, new[]{ "QueryJoinedRockstarAlbumsCustomSelect" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse.Parser, new[]{ "QueryJoinedRockstarAlbumsCustomSelectResponse" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie.Parser, new[]{ "SearchMovies", "StreamMovies", "QueryMovies" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_NamedRockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_NamedRockstar.Parser, new[]{ "QueryNamedRockstars" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_PagingTest), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_PagingTest.Parser, new[]{ "QueryPagingTest" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar.Parser, new[]{ "QueryRockstars", "QueryChangeConnectionInfo", "QueryRockstarsImplicit", "QueryFieldRockstarsDynamic", "QueryFieldRockstars", "QueryOverridedRockstars", "QueryRockstarsIFilter", "QueryGetRockstars", "QueryOrRockstars", "QueryRockstarsFilter", "QueryRockstarsConventions", "QueryAdhocRockstars", "QueryFieldsImplicitConventions", "QueryRockstarFilters", "QueryCaseInsensitiveOrderBy", "QueryChangeDb", "QueryGetRockstarsDynamic", "QueryOrRockstarsFields", "QueryUnknownRockstars" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarAlbum), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarAlbum.Parser, new[]{ "QueryRockstarAlbums" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference.Parser, new[]{ "QueryRockstarsWithReferences", "QueryCustomRockstarsReferences" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar.Parser, new[]{ "QueryCustomRockstars", "QueryJoinedRockstarAlbums", "QueryCustomRockstarsFilter", "QueryRockstarAlbumsCustomLeftJoin", "QueryRockstarAlbumsImplicit", "QueryOverridedCustomRockstars", "QueryRockstarAlbumsLeftJoin", "QueryMultiJoinRockstar" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstarSchema), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstarSchema.Parser, new[]{ "QueryCustomRockstarsSchema" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_RockstarAlias), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_RockstarAlias.Parser, new[]{ "QueryRockstarAlias" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryDb_TypeWithEnum), global::ServiceStack.Extensions.Tests.Protoc.QueryDb_TypeWithEnum.Parser, new[]{ "QueryTypeWithEnums" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstars.Parser, new[]{ "FirstName", "FirstNames", "Age", "FirstNameCaseInsensitive", "FirstNameStartsWith", "LastNameEndsWith", "FirstNameBetween", "OrLastName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstarsDynamic), global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstarsDynamic.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryFieldsImplicitConventions), global::ServiceStack.Extensions.Tests.Protoc.QueryFieldsImplicitConventions.Parser, new[]{ "FirstNameContains", "LastNameEndsWith" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstars.Parser, new[]{ "Ids", "Ages", "FirstNames", "IdsBetween" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstarsDynamic), global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstarsDynamic.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbums), global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbums.Parser, new[]{ "Age", "RockstarAlbumName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelect), global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelect.Parser, new[]{ "Age", "RockstarAlbumName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelectResponse), global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelectResponse.Parser, new[]{ "Age", "RockstarAlbumName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryMovies), global::ServiceStack.Extensions.Tests.Protoc.QueryMovies.Parser, new[]{ "Ids", "ImdbIds", "Ratings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryMultiJoinRockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryMultiJoinRockstar.Parser, new[]{ "Age", "RockstarAlbumName", "RockstarGenreName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryNamedRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryNamedRockstars.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstars.Parser, new[]{ "Age", "FirstName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstarsFields), global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstarsFields.Parser, new[]{ "FirstName", "LastName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryPagingTest), global::ServiceStack.Extensions.Tests.Protoc.QueryPagingTest.Parser, new[]{ "Id", "Name", "Value" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_Adhoc), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_Adhoc.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_AllFields), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_AllFields.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_CustomRockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_CustomRockstar.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_CustomRockstarSchema), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_CustomRockstarSchema.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_CustomSelectRockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_CustomSelectRockstar.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_CustomSelectRockstarResponse), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_CustomSelectRockstarResponse.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_Movie), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_Movie.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_NamedRockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_NamedRockstar.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_PagingTest), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_PagingTest.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_Rockstar), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_Rockstar.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_RockstarAlbum), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_RockstarAlbum.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_RockstarAlias), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_RockstarAlias.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_RockstarReference), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_RockstarReference.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_TypeWithEnum), global::ServiceStack.Extensions.Tests.Protoc.QueryResponse_TypeWithEnum.Parser, new[]{ "Offset", "Total", "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbums), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbums.Parser, new[]{ "Id", "RockstarId", "Name", "Genre", "IdBetween" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin.Parser, new[]{ "Age", "AlbumName", "IdNotEqualTo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsImplicit), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsImplicit.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsLeftJoin), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsLeftJoin.Parser, new[]{ "Age", "AlbumName", "IdNotEqualTo" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlias), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlias.Parser, new[]{ "Age", "RockstarAlbumName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarFilters), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarFilters.Parser, new[]{ "Ids", "Ages", "FirstNames", "IdsBetween" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstars.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsConventions), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsConventions.Parser, new[]{ "DateOfBirthGreaterThan", "DateDiedLessThan", "Ids", "AgeOlderThan", "AgeGreaterThanOrEqualTo", "AgeGreaterThan", "GreaterThanAge", "FirstNameStartsWith", "LastNameEndsWith", "LastNameContains", "RockstarAlbumNameContains", "RockstarIdAfter", "RockstarIdOnOrAfter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsFilter), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsFilter.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsIFilter), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsIFilter.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsImplicit), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsImplicit.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsWithReferences), global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsWithReferences.Parser, new[]{ "Age" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryTypeWithEnums), global::ServiceStack.Extensions.Tests.Protoc.QueryTypeWithEnums.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.QueryUnknownRockstars), global::ServiceStack.Extensions.Tests.Protoc.QueryUnknownRockstars.Parser, new[]{ "UnknownInt", "UnknownProperty" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RegenerateApiKeys), global::ServiceStack.Extensions.Tests.Protoc.RegenerateApiKeys.Parser, new[]{ "Environment", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RegenerateApiKeysResponse), global::ServiceStack.Extensions.Tests.Protoc.RegenerateApiKeysResponse.Parser, new[]{ "Results", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Register), global::ServiceStack.Extensions.Tests.Protoc.Register.Parser, new[]{ "UserName", "FirstName", "LastName", "DisplayName", "Email", "Password", "ConfirmPassword", "AutoLogin", "Continue", "ErrorView", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RegisterResponse), global::ServiceStack.Extensions.Tests.Protoc.RegisterResponse.Parser, new[]{ "UserId", "SessionId", "UserName", "ReferrerUrl", "BearerToken", "RefreshToken", "ResponseStatus", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RequiresAuth), global::ServiceStack.Extensions.Tests.Protoc.RequiresAuth.Parser, new[]{ "Name", "BearerToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ResetTodos), global::ServiceStack.Extensions.Tests.Protoc.ResetTodos.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ResponseError), global::ServiceStack.Extensions.Tests.Protoc.ResponseError.Parser, new[]{ "ErrorCode", "FieldName", "Message", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus), global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus.Parser, new[]{ "ErrorCode", "Message", "StackTrace", "Errors", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Rockstar), global::ServiceStack.Extensions.Tests.Protoc.Rockstar.Parser, new[]{ "Id", "FirstName", "LastName", "Age", "DateOfBirth", "DateDied", "LivingStatus", "NamedRockstar" }, new[]{ "Subtype" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum), global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum.Parser, new[]{ "Id", "RockstarId", "Name", "Genre" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RockstarAlias), global::ServiceStack.Extensions.Tests.Protoc.RockstarAlias.Parser, new[]{ "RockstarId", "FirstName", "Surname", "Album" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.RockstarReference), global::ServiceStack.Extensions.Tests.Protoc.RockstarReference.Parser, new[]{ "Id", "FirstName", "LastName", "Age", "Albums" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.SearchMovies), global::ServiceStack.Extensions.Tests.Protoc.SearchMovies.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Secured), global::ServiceStack.Extensions.Tests.Protoc.Secured.Parser, new[]{ "Name" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.SecuredResponse), global::ServiceStack.Extensions.Tests.Protoc.SecuredResponse.Parser, new[]{ "Result", "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.StreamFiles), global::ServiceStack.Extensions.Tests.Protoc.StreamFiles.Parser, new[]{ "Paths" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.StreamMovies), global::ServiceStack.Extensions.Tests.Protoc.StreamMovies.Parser, new[]{ "Ratings" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.StreamServerEvents), global::ServiceStack.Extensions.Tests.Protoc.StreamServerEvents.Parser, new[]{ "Channels" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.StreamServerEventsResponse), global::ServiceStack.Extensions.Tests.Protoc.StreamServerEventsResponse.Parser, new[]{ "EventId", "Channel", "Selector", "Json", "Op", "Target", "CssSelector", "Meta", "UserId", "DisplayName", "ProfileUrl", "IsAuthenticated", "Channels", "CreatedAt", "Id", "UnRegisterUrl", "UpdateSubscriberUrl", "HeartbeatUrl", "HeartbeatIntervalMs", "IdleTimeoutMs", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Throw), global::ServiceStack.Extensions.Tests.Protoc.Throw.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ThrowCustom), global::ServiceStack.Extensions.Tests.Protoc.ThrowCustom.Parser, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ThrowCustomResponse), global::ServiceStack.Extensions.Tests.Protoc.ThrowCustomResponse.Parser, new[]{ "ResponseStatus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.ThrowVoid), global::ServiceStack.Extensions.Tests.Protoc.ThrowVoid.Parser, new[]{ "Message" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.Todo), global::ServiceStack.Extensions.Tests.Protoc.Todo.Parser, new[]{ "Id", "Title", "Order", "Completed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.TriggerValidators), global::ServiceStack.Extensions.Tests.Protoc.TriggerValidators.Parser, new[]{ "CreditCard", "Email", "Empty", "Equal", "ExclusiveBetween", "GreaterThanOrEqual", "GreaterThan", "InclusiveBetween", "Length", "LessThanOrEqual", "LessThan", "NotEmpty", "NotEqual", "Null", "RegularExpression", "ScalePrecision" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.TypeWithEnum), global::ServiceStack.Extensions.Tests.Protoc.TypeWithEnum.Parser, new[]{ "Id", "Name", "SomeEnum", "SomeEnumAsInt", "NSomeEnum", "NSomeEnumAsInt" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.UnAssignRoles), global::ServiceStack.Extensions.Tests.Protoc.UnAssignRoles.Parser, new[]{ "UserName", "Permissions", "Roles", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.UnAssignRolesResponse), global::ServiceStack.Extensions.Tests.Protoc.UnAssignRolesResponse.Parser, new[]{ "AllRoles", "AllPermissions", "Meta", "ResponseStatus" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.UpdateTodo), global::ServiceStack.Extensions.Tests.Protoc.UpdateTodo.Parser, new[]{ "Id", "Title", "Order", "Completed" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ServiceStack.Extensions.Tests.Protoc.UserApiKey), global::ServiceStack.Extensions.Tests.Protoc.UserApiKey.Parser, new[]{ "Key", "KeyType", "ExpiryDate", "Meta" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, })
          }));
    }
    #endregion

  }
  #region Enums
  public enum HttpStatusCode {
    /// <summary>
    /// proto3 requires a zero value as the first item (it can be named anything)
    /// </summary>
    [pbr::OriginalName("ZERO")] Zero = 0,
    [pbr::OriginalName("Continue")] Continue = 100,
    [pbr::OriginalName("SwitchingProtocols")] SwitchingProtocols = 101,
    [pbr::OriginalName("Processing")] Processing = 102,
    [pbr::OriginalName("EarlyHints")] EarlyHints = 103,
    [pbr::OriginalName("OK")] Ok = 200,
    [pbr::OriginalName("Created")] Created = 201,
    [pbr::OriginalName("Accepted")] Accepted = 202,
    [pbr::OriginalName("NonAuthoritativeInformation")] NonAuthoritativeInformation = 203,
    [pbr::OriginalName("NoContent")] NoContent = 204,
    [pbr::OriginalName("ResetContent")] ResetContent = 205,
    [pbr::OriginalName("PartialContent")] PartialContent = 206,
    [pbr::OriginalName("MultiStatus")] MultiStatus = 207,
    [pbr::OriginalName("AlreadyReported")] AlreadyReported = 208,
    [pbr::OriginalName("IMUsed")] Imused = 226,
    [pbr::OriginalName("Ambiguous")] Ambiguous = 300,
    [pbr::OriginalName("MultipleChoices", PreferredAlias = false)] MultipleChoices = 300,
    [pbr::OriginalName("MovedPermanently")] MovedPermanently = 301,
    [pbr::OriginalName("Moved", PreferredAlias = false)] Moved = 301,
    [pbr::OriginalName("Found")] Found = 302,
    [pbr::OriginalName("Redirect", PreferredAlias = false)] Redirect = 302,
    [pbr::OriginalName("SeeOther")] SeeOther = 303,
    [pbr::OriginalName("RedirectMethod", PreferredAlias = false)] RedirectMethod = 303,
    [pbr::OriginalName("NotModified")] NotModified = 304,
    [pbr::OriginalName("UseProxy")] UseProxy = 305,
    [pbr::OriginalName("Unused")] Unused = 306,
    [pbr::OriginalName("TemporaryRedirect")] TemporaryRedirect = 307,
    [pbr::OriginalName("RedirectKeepVerb", PreferredAlias = false)] RedirectKeepVerb = 307,
    [pbr::OriginalName("PermanentRedirect")] PermanentRedirect = 308,
    [pbr::OriginalName("BadRequest")] BadRequest = 400,
    [pbr::OriginalName("Unauthorized")] Unauthorized = 401,
    [pbr::OriginalName("PaymentRequired")] PaymentRequired = 402,
    [pbr::OriginalName("Forbidden")] Forbidden = 403,
    [pbr::OriginalName("NotFound")] NotFound = 404,
    [pbr::OriginalName("MethodNotAllowed")] MethodNotAllowed = 405,
    [pbr::OriginalName("NotAcceptable")] NotAcceptable = 406,
    [pbr::OriginalName("ProxyAuthenticationRequired")] ProxyAuthenticationRequired = 407,
    [pbr::OriginalName("RequestTimeout")] RequestTimeout = 408,
    [pbr::OriginalName("Conflict")] Conflict = 409,
    [pbr::OriginalName("Gone")] Gone = 410,
    [pbr::OriginalName("LengthRequired")] LengthRequired = 411,
    [pbr::OriginalName("PreconditionFailed")] PreconditionFailed = 412,
    [pbr::OriginalName("RequestEntityTooLarge")] RequestEntityTooLarge = 413,
    [pbr::OriginalName("RequestUriTooLong")] RequestUriTooLong = 414,
    [pbr::OriginalName("UnsupportedMediaType")] UnsupportedMediaType = 415,
    [pbr::OriginalName("RequestedRangeNotSatisfiable")] RequestedRangeNotSatisfiable = 416,
    [pbr::OriginalName("ExpectationFailed")] ExpectationFailed = 417,
    [pbr::OriginalName("MisdirectedRequest")] MisdirectedRequest = 421,
    [pbr::OriginalName("UnprocessableEntity")] UnprocessableEntity = 422,
    [pbr::OriginalName("Locked")] Locked = 423,
    [pbr::OriginalName("FailedDependency")] FailedDependency = 424,
    [pbr::OriginalName("UpgradeRequired")] UpgradeRequired = 426,
    [pbr::OriginalName("PreconditionRequired")] PreconditionRequired = 428,
    [pbr::OriginalName("TooManyRequests")] TooManyRequests = 429,
    [pbr::OriginalName("RequestHeaderFieldsTooLarge")] RequestHeaderFieldsTooLarge = 431,
    [pbr::OriginalName("UnavailableForLegalReasons")] UnavailableForLegalReasons = 451,
    [pbr::OriginalName("InternalServerError")] InternalServerError = 500,
    [pbr::OriginalName("NotImplemented")] NotImplemented = 501,
    [pbr::OriginalName("BadGateway")] BadGateway = 502,
    [pbr::OriginalName("ServiceUnavailable")] ServiceUnavailable = 503,
    [pbr::OriginalName("GatewayTimeout")] GatewayTimeout = 504,
    [pbr::OriginalName("HttpVersionNotSupported")] HttpVersionNotSupported = 505,
    [pbr::OriginalName("VariantAlsoNegotiates")] VariantAlsoNegotiates = 506,
    [pbr::OriginalName("InsufficientStorage")] InsufficientStorage = 507,
    [pbr::OriginalName("LoopDetected")] LoopDetected = 508,
    [pbr::OriginalName("NotExtended")] NotExtended = 510,
    [pbr::OriginalName("NetworkAuthenticationRequired")] NetworkAuthenticationRequired = 511,
  }

  public enum LivingStatus {
    [pbr::OriginalName("Alive")] Alive = 0,
    [pbr::OriginalName("Dead")] Dead = 1,
  }

  public enum SomeEnum {
    [pbr::OriginalName("SomeEnum_Value0")] Value0 = 0,
    [pbr::OriginalName("SomeEnum_Value1")] Value1 = 1,
    [pbr::OriginalName("SomeEnum_Value2")] Value2 = 2,
    [pbr::OriginalName("SomeEnum_Value3")] Value3 = 3,
  }

  public enum SomeEnumAsInt {
    [pbr::OriginalName("Value0")] Value0 = 0,
    [pbr::OriginalName("Value1")] Value1 = 1,
    [pbr::OriginalName("Value2")] Value2 = 2,
    [pbr::OriginalName("Value3")] Value3 = 3,
  }

  #endregion

  #region Messages
  public sealed partial class AddHeader : pb::IMessage<AddHeader> {
    private static readonly pb::MessageParser<AddHeader> _parser = new pb::MessageParser<AddHeader>(() => new AddHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddHeader(AddHeader other) : this() {
      name_ = other.name_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddHeader Clone() {
      return new AddHeader(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 2;
    private string value_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Value {
      get { return value_; }
      set {
        value_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value.Length != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Value.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddHeader other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value.Length != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Value = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Adhoc : pb::IMessage<Adhoc> {
    private static readonly pb::MessageParser<Adhoc> _parser = new pb::MessageParser<Adhoc>(() => new Adhoc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Adhoc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Adhoc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Adhoc(Adhoc other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Adhoc Clone() {
      return new Adhoc(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Adhoc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Adhoc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Adhoc other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AllFields : pb::IMessage<AllFields> {
    private static readonly pb::MessageParser<AllFields> _parser = new pb::MessageParser<AllFields>(() => new AllFields());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllFields> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllFields() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllFields(AllFields other) : this() {
      id_ = other.id_;
      nullableId_ = other.nullableId_;
      byte_ = other.byte_;
      short_ = other.short_;
      int_ = other.int_;
      long_ = other.long_;
      uShort_ = other.uShort_;
      uInt_ = other.uInt_;
      uLong_ = other.uLong_;
      float_ = other.float_;
      double_ = other.double_;
      decimal_ = other.decimal_ != null ? other.decimal_.Clone() : null;
      string_ = other.string_;
      dateTime_ = other.dateTime_ != null ? other.dateTime_.Clone() : null;
      timeSpan_ = other.timeSpan_ != null ? other.timeSpan_.Clone() : null;
      guid_ = other.guid_ != null ? other.guid_.Clone() : null;
      nullableDateTime_ = other.nullableDateTime_ != null ? other.nullableDateTime_.Clone() : null;
      nullableTimeSpan_ = other.nullableTimeSpan_ != null ? other.nullableTimeSpan_.Clone() : null;
      nullableGuid_ = other.nullableGuid_ != null ? other.nullableGuid_.Clone() : null;
      enum_ = other.enum_;
      nullableEnum_ = other.nullableEnum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllFields Clone() {
      return new AllFields(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "NullableId" field.</summary>
    public const int NullableIdFieldNumber = 2;
    private int nullableId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int NullableId {
      get { return nullableId_; }
      set {
        nullableId_ = value;
      }
    }

    /// <summary>Field number for the "Byte" field.</summary>
    public const int ByteFieldNumber = 3;
    private uint byte_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Byte {
      get { return byte_; }
      set {
        byte_ = value;
      }
    }

    /// <summary>Field number for the "Short" field.</summary>
    public const int ShortFieldNumber = 4;
    private int short_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Short {
      get { return short_; }
      set {
        short_ = value;
      }
    }

    /// <summary>Field number for the "Int" field.</summary>
    public const int IntFieldNumber = 5;
    private int int_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Int {
      get { return int_; }
      set {
        int_ = value;
      }
    }

    /// <summary>Field number for the "Long" field.</summary>
    public const int LongFieldNumber = 6;
    private long long_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Long {
      get { return long_; }
      set {
        long_ = value;
      }
    }

    /// <summary>Field number for the "UShort" field.</summary>
    public const int UShortFieldNumber = 7;
    private uint uShort_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UShort {
      get { return uShort_; }
      set {
        uShort_ = value;
      }
    }

    /// <summary>Field number for the "UInt" field.</summary>
    public const int UIntFieldNumber = 8;
    private uint uInt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint UInt {
      get { return uInt_; }
      set {
        uInt_ = value;
      }
    }

    /// <summary>Field number for the "ULong" field.</summary>
    public const int ULongFieldNumber = 9;
    private ulong uLong_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong ULong {
      get { return uLong_; }
      set {
        uLong_ = value;
      }
    }

    /// <summary>Field number for the "Float" field.</summary>
    public const int FloatFieldNumber = 10;
    private float float_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Float {
      get { return float_; }
      set {
        float_ = value;
      }
    }

    /// <summary>Field number for the "Double" field.</summary>
    public const int DoubleFieldNumber = 11;
    private double double_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Double {
      get { return double_; }
      set {
        double_ = value;
      }
    }

    /// <summary>Field number for the "Decimal" field.</summary>
    public const int DecimalFieldNumber = 12;
    private global::ProtoBuf.Bcl.Decimal decimal_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.Decimal Decimal {
      get { return decimal_; }
      set {
        decimal_ = value;
      }
    }

    /// <summary>Field number for the "String" field.</summary>
    public const int StringFieldNumber = 13;
    private string string_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string String {
      get { return string_; }
      set {
        string_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DateTime" field.</summary>
    public const int DateTimeFieldNumber = 14;
    private global::ProtoBuf.Bcl.DateTime dateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime DateTime {
      get { return dateTime_; }
      set {
        dateTime_ = value;
      }
    }

    /// <summary>Field number for the "TimeSpan" field.</summary>
    public const int TimeSpanFieldNumber = 15;
    private global::ProtoBuf.Bcl.TimeSpan timeSpan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.TimeSpan TimeSpan {
      get { return timeSpan_; }
      set {
        timeSpan_ = value;
      }
    }

    /// <summary>Field number for the "Guid" field.</summary>
    public const int GuidFieldNumber = 16;
    private global::ProtoBuf.Bcl.Guid guid_;
    /// <summary>
    /// default value could not be applied: 00000000-0000-0000-0000-000000000000
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.Guid Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    /// <summary>Field number for the "NullableDateTime" field.</summary>
    public const int NullableDateTimeFieldNumber = 17;
    private global::ProtoBuf.Bcl.DateTime nullableDateTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime NullableDateTime {
      get { return nullableDateTime_; }
      set {
        nullableDateTime_ = value;
      }
    }

    /// <summary>Field number for the "NullableTimeSpan" field.</summary>
    public const int NullableTimeSpanFieldNumber = 18;
    private global::ProtoBuf.Bcl.TimeSpan nullableTimeSpan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.TimeSpan NullableTimeSpan {
      get { return nullableTimeSpan_; }
      set {
        nullableTimeSpan_ = value;
      }
    }

    /// <summary>Field number for the "NullableGuid" field.</summary>
    public const int NullableGuidFieldNumber = 19;
    private global::ProtoBuf.Bcl.Guid nullableGuid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.Guid NullableGuid {
      get { return nullableGuid_; }
      set {
        nullableGuid_ = value;
      }
    }

    /// <summary>Field number for the "Enum" field.</summary>
    public const int EnumFieldNumber = 20;
    private global::ServiceStack.Extensions.Tests.Protoc.HttpStatusCode enum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.HttpStatusCode Enum {
      get { return enum_; }
      set {
        enum_ = value;
      }
    }

    /// <summary>Field number for the "NullableEnum" field.</summary>
    public const int NullableEnumFieldNumber = 21;
    private global::ServiceStack.Extensions.Tests.Protoc.HttpStatusCode nullableEnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.HttpStatusCode NullableEnum {
      get { return nullableEnum_; }
      set {
        nullableEnum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllFields other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (NullableId != other.NullableId) return false;
      if (Byte != other.Byte) return false;
      if (Short != other.Short) return false;
      if (Int != other.Int) return false;
      if (Long != other.Long) return false;
      if (UShort != other.UShort) return false;
      if (UInt != other.UInt) return false;
      if (ULong != other.ULong) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float, other.Float)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Double, other.Double)) return false;
      if (!object.Equals(Decimal, other.Decimal)) return false;
      if (String != other.String) return false;
      if (!object.Equals(DateTime, other.DateTime)) return false;
      if (!object.Equals(TimeSpan, other.TimeSpan)) return false;
      if (!object.Equals(Guid, other.Guid)) return false;
      if (!object.Equals(NullableDateTime, other.NullableDateTime)) return false;
      if (!object.Equals(NullableTimeSpan, other.NullableTimeSpan)) return false;
      if (!object.Equals(NullableGuid, other.NullableGuid)) return false;
      if (Enum != other.Enum) return false;
      if (NullableEnum != other.NullableEnum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (NullableId != 0) hash ^= NullableId.GetHashCode();
      if (Byte != 0) hash ^= Byte.GetHashCode();
      if (Short != 0) hash ^= Short.GetHashCode();
      if (Int != 0) hash ^= Int.GetHashCode();
      if (Long != 0L) hash ^= Long.GetHashCode();
      if (UShort != 0) hash ^= UShort.GetHashCode();
      if (UInt != 0) hash ^= UInt.GetHashCode();
      if (ULong != 0UL) hash ^= ULong.GetHashCode();
      if (Float != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float);
      if (Double != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Double);
      if (decimal_ != null) hash ^= Decimal.GetHashCode();
      if (String.Length != 0) hash ^= String.GetHashCode();
      if (dateTime_ != null) hash ^= DateTime.GetHashCode();
      if (timeSpan_ != null) hash ^= TimeSpan.GetHashCode();
      if (guid_ != null) hash ^= Guid.GetHashCode();
      if (nullableDateTime_ != null) hash ^= NullableDateTime.GetHashCode();
      if (nullableTimeSpan_ != null) hash ^= NullableTimeSpan.GetHashCode();
      if (nullableGuid_ != null) hash ^= NullableGuid.GetHashCode();
      if (Enum != 0) hash ^= Enum.GetHashCode();
      if (NullableEnum != 0) hash ^= NullableEnum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (NullableId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(NullableId);
      }
      if (Byte != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(Byte);
      }
      if (Short != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Short);
      }
      if (Int != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(Int);
      }
      if (Long != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(Long);
      }
      if (UShort != 0) {
        output.WriteRawTag(56);
        output.WriteUInt32(UShort);
      }
      if (UInt != 0) {
        output.WriteRawTag(64);
        output.WriteUInt32(UInt);
      }
      if (ULong != 0UL) {
        output.WriteRawTag(72);
        output.WriteUInt64(ULong);
      }
      if (Float != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(Float);
      }
      if (Double != 0D) {
        output.WriteRawTag(89);
        output.WriteDouble(Double);
      }
      if (decimal_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(Decimal);
      }
      if (String.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(String);
      }
      if (dateTime_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(DateTime);
      }
      if (timeSpan_ != null) {
        output.WriteRawTag(122);
        output.WriteMessage(TimeSpan);
      }
      if (guid_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(Guid);
      }
      if (nullableDateTime_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(NullableDateTime);
      }
      if (nullableTimeSpan_ != null) {
        output.WriteRawTag(146, 1);
        output.WriteMessage(NullableTimeSpan);
      }
      if (nullableGuid_ != null) {
        output.WriteRawTag(154, 1);
        output.WriteMessage(NullableGuid);
      }
      if (Enum != 0) {
        output.WriteRawTag(160, 1);
        output.WriteEnum((int) Enum);
      }
      if (NullableEnum != 0) {
        output.WriteRawTag(168, 1);
        output.WriteEnum((int) NullableEnum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (NullableId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(NullableId);
      }
      if (Byte != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(Byte);
      }
      if (Short != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Short);
      }
      if (Int != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Int);
      }
      if (Long != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Long);
      }
      if (UShort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UShort);
      }
      if (UInt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(UInt);
      }
      if (ULong != 0UL) {
        size += 1 + pb::CodedOutputStream.ComputeUInt64Size(ULong);
      }
      if (Float != 0F) {
        size += 1 + 4;
      }
      if (Double != 0D) {
        size += 1 + 8;
      }
      if (decimal_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Decimal);
      }
      if (String.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(String);
      }
      if (dateTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateTime);
      }
      if (timeSpan_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TimeSpan);
      }
      if (guid_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(Guid);
      }
      if (nullableDateTime_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NullableDateTime);
      }
      if (nullableTimeSpan_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NullableTimeSpan);
      }
      if (nullableGuid_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(NullableGuid);
      }
      if (Enum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Enum);
      }
      if (NullableEnum != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) NullableEnum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllFields other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.NullableId != 0) {
        NullableId = other.NullableId;
      }
      if (other.Byte != 0) {
        Byte = other.Byte;
      }
      if (other.Short != 0) {
        Short = other.Short;
      }
      if (other.Int != 0) {
        Int = other.Int;
      }
      if (other.Long != 0L) {
        Long = other.Long;
      }
      if (other.UShort != 0) {
        UShort = other.UShort;
      }
      if (other.UInt != 0) {
        UInt = other.UInt;
      }
      if (other.ULong != 0UL) {
        ULong = other.ULong;
      }
      if (other.Float != 0F) {
        Float = other.Float;
      }
      if (other.Double != 0D) {
        Double = other.Double;
      }
      if (other.decimal_ != null) {
        if (decimal_ == null) {
          Decimal = new global::ProtoBuf.Bcl.Decimal();
        }
        Decimal.MergeFrom(other.Decimal);
      }
      if (other.String.Length != 0) {
        String = other.String;
      }
      if (other.dateTime_ != null) {
        if (dateTime_ == null) {
          DateTime = new global::ProtoBuf.Bcl.DateTime();
        }
        DateTime.MergeFrom(other.DateTime);
      }
      if (other.timeSpan_ != null) {
        if (timeSpan_ == null) {
          TimeSpan = new global::ProtoBuf.Bcl.TimeSpan();
        }
        TimeSpan.MergeFrom(other.TimeSpan);
      }
      if (other.guid_ != null) {
        if (guid_ == null) {
          Guid = new global::ProtoBuf.Bcl.Guid();
        }
        Guid.MergeFrom(other.Guid);
      }
      if (other.nullableDateTime_ != null) {
        if (nullableDateTime_ == null) {
          NullableDateTime = new global::ProtoBuf.Bcl.DateTime();
        }
        NullableDateTime.MergeFrom(other.NullableDateTime);
      }
      if (other.nullableTimeSpan_ != null) {
        if (nullableTimeSpan_ == null) {
          NullableTimeSpan = new global::ProtoBuf.Bcl.TimeSpan();
        }
        NullableTimeSpan.MergeFrom(other.NullableTimeSpan);
      }
      if (other.nullableGuid_ != null) {
        if (nullableGuid_ == null) {
          NullableGuid = new global::ProtoBuf.Bcl.Guid();
        }
        NullableGuid.MergeFrom(other.NullableGuid);
      }
      if (other.Enum != 0) {
        Enum = other.Enum;
      }
      if (other.NullableEnum != 0) {
        NullableEnum = other.NullableEnum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            NullableId = input.ReadInt32();
            break;
          }
          case 24: {
            Byte = input.ReadUInt32();
            break;
          }
          case 32: {
            Short = input.ReadInt32();
            break;
          }
          case 40: {
            Int = input.ReadInt32();
            break;
          }
          case 48: {
            Long = input.ReadInt64();
            break;
          }
          case 56: {
            UShort = input.ReadUInt32();
            break;
          }
          case 64: {
            UInt = input.ReadUInt32();
            break;
          }
          case 72: {
            ULong = input.ReadUInt64();
            break;
          }
          case 85: {
            Float = input.ReadFloat();
            break;
          }
          case 89: {
            Double = input.ReadDouble();
            break;
          }
          case 98: {
            if (decimal_ == null) {
              Decimal = new global::ProtoBuf.Bcl.Decimal();
            }
            input.ReadMessage(Decimal);
            break;
          }
          case 106: {
            String = input.ReadString();
            break;
          }
          case 114: {
            if (dateTime_ == null) {
              DateTime = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(DateTime);
            break;
          }
          case 122: {
            if (timeSpan_ == null) {
              TimeSpan = new global::ProtoBuf.Bcl.TimeSpan();
            }
            input.ReadMessage(TimeSpan);
            break;
          }
          case 130: {
            if (guid_ == null) {
              Guid = new global::ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Guid);
            break;
          }
          case 138: {
            if (nullableDateTime_ == null) {
              NullableDateTime = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(NullableDateTime);
            break;
          }
          case 146: {
            if (nullableTimeSpan_ == null) {
              NullableTimeSpan = new global::ProtoBuf.Bcl.TimeSpan();
            }
            input.ReadMessage(NullableTimeSpan);
            break;
          }
          case 154: {
            if (nullableGuid_ == null) {
              NullableGuid = new global::ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(NullableGuid);
            break;
          }
          case 160: {
            Enum = (global::ServiceStack.Extensions.Tests.Protoc.HttpStatusCode) input.ReadEnum();
            break;
          }
          case 168: {
            NullableEnum = (global::ServiceStack.Extensions.Tests.Protoc.HttpStatusCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AnyHello : pb::IMessage<AnyHello> {
    private static readonly pb::MessageParser<AnyHello> _parser = new pb::MessageParser<AnyHello>(() => new AnyHello());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnyHello> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnyHello() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnyHello(AnyHello other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnyHello Clone() {
      return new AnyHello(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnyHello);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnyHello other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnyHello other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignRoles : pb::IMessage<AssignRoles> {
    private static readonly pb::MessageParser<AssignRoles> _parser = new pb::MessageParser<AssignRoles>(() => new AssignRoles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignRoles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoles(AssignRoles other) : this() {
      userName_ = other.userName_;
      permissions_ = other.permissions_.Clone();
      roles_ = other.roles_.Clone();
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRoles Clone() {
      return new AssignRoles(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Permissions" field.</summary>
    public const int PermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_permissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "Roles" field.</summary>
    public const int RolesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_roles_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> roles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Roles {
      get { return roles_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignRoles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignRoles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if(!roles_.Equals(other.roles_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      hash ^= permissions_.GetHashCode();
      hash ^= roles_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      roles_.WriteTo(output, _repeated_roles_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      size += roles_.CalculateSize(_repeated_roles_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignRoles other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      permissions_.Add(other.permissions_);
      roles_.Add(other.roles_);
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 26: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AssignRolesResponse : pb::IMessage<AssignRolesResponse> {
    private static readonly pb::MessageParser<AssignRolesResponse> _parser = new pb::MessageParser<AssignRolesResponse>(() => new AssignRolesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AssignRolesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRolesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRolesResponse(AssignRolesResponse other) : this() {
      allRoles_ = other.allRoles_.Clone();
      allPermissions_ = other.allPermissions_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AssignRolesResponse Clone() {
      return new AssignRolesResponse(this);
    }

    /// <summary>Field number for the "AllRoles" field.</summary>
    public const int AllRolesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_allRoles_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> allRoles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllRoles {
      get { return allRoles_; }
    }

    /// <summary>Field number for the "AllPermissions" field.</summary>
    public const int AllPermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_allPermissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> allPermissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllPermissions {
      get { return allPermissions_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 4;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AssignRolesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AssignRolesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!allRoles_.Equals(other.allRoles_)) return false;
      if(!allPermissions_.Equals(other.allPermissions_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= allRoles_.GetHashCode();
      hash ^= allPermissions_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      allRoles_.WriteTo(output, _repeated_allRoles_codec);
      allPermissions_.WriteTo(output, _repeated_allPermissions_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += allRoles_.CalculateSize(_repeated_allRoles_codec);
      size += allPermissions_.CalculateSize(_repeated_allPermissions_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AssignRolesResponse other) {
      if (other == null) {
        return;
      }
      allRoles_.Add(other.allRoles_);
      allPermissions_.Add(other.allPermissions_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            allRoles_.AddEntriesFrom(input, _repeated_allRoles_codec);
            break;
          }
          case 18: {
            allPermissions_.AddEntriesFrom(input, _repeated_allPermissions_codec);
            break;
          }
          case 26: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 34: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Authenticate : pb::IMessage<Authenticate> {
    private static readonly pb::MessageParser<Authenticate> _parser = new pb::MessageParser<Authenticate>(() => new Authenticate());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Authenticate> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authenticate() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authenticate(Authenticate other) : this() {
      provider_ = other.provider_;
      state_ = other.state_;
      oauthToken_ = other.oauthToken_;
      oauthVerifier_ = other.oauthVerifier_;
      userName_ = other.userName_;
      password_ = other.password_;
      rememberMe_ = other.rememberMe_;
      continue_ = other.continue_;
      errorView_ = other.errorView_;
      nonce_ = other.nonce_;
      uri_ = other.uri_;
      response_ = other.response_;
      qop_ = other.qop_;
      nc_ = other.nc_;
      cnonce_ = other.cnonce_;
      useTokenCookie_ = other.useTokenCookie_;
      accessToken_ = other.accessToken_;
      accessTokenSecret_ = other.accessTokenSecret_;
      scope_ = other.scope_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Authenticate Clone() {
      return new Authenticate(this);
    }

    /// <summary>Field number for the "provider" field.</summary>
    public const int ProviderFieldNumber = 1;
    private string provider_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Provider {
      get { return provider_; }
      set {
        provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "State" field.</summary>
    public const int StateFieldNumber = 2;
    private string state_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string State {
      get { return state_; }
      set {
        state_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oauth_token" field.</summary>
    public const int OauthTokenFieldNumber = 3;
    private string oauthToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OauthToken {
      get { return oauthToken_; }
      set {
        oauthToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "oauth_verifier" field.</summary>
    public const int OauthVerifierFieldNumber = 4;
    private string oauthVerifier_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OauthVerifier {
      get { return oauthVerifier_; }
      set {
        oauthVerifier_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 5;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RememberMe" field.</summary>
    public const int RememberMeFieldNumber = 7;
    private bool rememberMe_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool RememberMe {
      get { return rememberMe_; }
      set {
        rememberMe_ = value;
      }
    }

    /// <summary>Field number for the "Continue" field.</summary>
    public const int ContinueFieldNumber = 8;
    private string continue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Continue {
      get { return continue_; }
      set {
        continue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ErrorView" field.</summary>
    public const int ErrorViewFieldNumber = 9;
    private string errorView_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorView {
      get { return errorView_; }
      set {
        errorView_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nonce" field.</summary>
    public const int NonceFieldNumber = 10;
    private string nonce_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nonce {
      get { return nonce_; }
      set {
        nonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 11;
    private string uri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "response" field.</summary>
    public const int ResponseFieldNumber = 12;
    private string response_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Response {
      get { return response_; }
      set {
        response_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "qop" field.</summary>
    public const int QopFieldNumber = 13;
    private string qop_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Qop {
      get { return qop_; }
      set {
        qop_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "nc" field.</summary>
    public const int NcFieldNumber = 14;
    private string nc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Nc {
      get { return nc_; }
      set {
        nc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cnonce" field.</summary>
    public const int CnonceFieldNumber = 15;
    private string cnonce_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Cnonce {
      get { return cnonce_; }
      set {
        cnonce_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UseTokenCookie" field.</summary>
    public const int UseTokenCookieFieldNumber = 16;
    private bool useTokenCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseTokenCookie {
      get { return useTokenCookie_; }
      set {
        useTokenCookie_ = value;
      }
    }

    /// <summary>Field number for the "AccessToken" field.</summary>
    public const int AccessTokenFieldNumber = 17;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AccessTokenSecret" field.</summary>
    public const int AccessTokenSecretFieldNumber = 18;
    private string accessTokenSecret_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessTokenSecret {
      get { return accessTokenSecret_; }
      set {
        accessTokenSecret_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scope" field.</summary>
    public const int ScopeFieldNumber = 19;
    private string scope_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Scope {
      get { return scope_; }
      set {
        scope_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 20;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 162);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Authenticate);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Authenticate other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Provider != other.Provider) return false;
      if (State != other.State) return false;
      if (OauthToken != other.OauthToken) return false;
      if (OauthVerifier != other.OauthVerifier) return false;
      if (UserName != other.UserName) return false;
      if (Password != other.Password) return false;
      if (RememberMe != other.RememberMe) return false;
      if (Continue != other.Continue) return false;
      if (ErrorView != other.ErrorView) return false;
      if (Nonce != other.Nonce) return false;
      if (Uri != other.Uri) return false;
      if (Response != other.Response) return false;
      if (Qop != other.Qop) return false;
      if (Nc != other.Nc) return false;
      if (Cnonce != other.Cnonce) return false;
      if (UseTokenCookie != other.UseTokenCookie) return false;
      if (AccessToken != other.AccessToken) return false;
      if (AccessTokenSecret != other.AccessTokenSecret) return false;
      if (Scope != other.Scope) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Provider.Length != 0) hash ^= Provider.GetHashCode();
      if (State.Length != 0) hash ^= State.GetHashCode();
      if (OauthToken.Length != 0) hash ^= OauthToken.GetHashCode();
      if (OauthVerifier.Length != 0) hash ^= OauthVerifier.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (RememberMe != false) hash ^= RememberMe.GetHashCode();
      if (Continue.Length != 0) hash ^= Continue.GetHashCode();
      if (ErrorView.Length != 0) hash ^= ErrorView.GetHashCode();
      if (Nonce.Length != 0) hash ^= Nonce.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (Response.Length != 0) hash ^= Response.GetHashCode();
      if (Qop.Length != 0) hash ^= Qop.GetHashCode();
      if (Nc.Length != 0) hash ^= Nc.GetHashCode();
      if (Cnonce.Length != 0) hash ^= Cnonce.GetHashCode();
      if (UseTokenCookie != false) hash ^= UseTokenCookie.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (AccessTokenSecret.Length != 0) hash ^= AccessTokenSecret.GetHashCode();
      if (Scope.Length != 0) hash ^= Scope.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Provider.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Provider);
      }
      if (State.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(State);
      }
      if (OauthToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OauthToken);
      }
      if (OauthVerifier.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OauthVerifier);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(UserName);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (RememberMe != false) {
        output.WriteRawTag(56);
        output.WriteBool(RememberMe);
      }
      if (Continue.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(Continue);
      }
      if (ErrorView.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ErrorView);
      }
      if (Nonce.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(Nonce);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(Uri);
      }
      if (Response.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(Response);
      }
      if (Qop.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Qop);
      }
      if (Nc.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Nc);
      }
      if (Cnonce.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(Cnonce);
      }
      if (UseTokenCookie != false) {
        output.WriteRawTag(128, 1);
        output.WriteBool(UseTokenCookie);
      }
      if (AccessToken.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteString(AccessToken);
      }
      if (AccessTokenSecret.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(AccessTokenSecret);
      }
      if (Scope.Length != 0) {
        output.WriteRawTag(154, 1);
        output.WriteString(Scope);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Provider.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Provider);
      }
      if (State.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(State);
      }
      if (OauthToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OauthToken);
      }
      if (OauthVerifier.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OauthVerifier);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (RememberMe != false) {
        size += 1 + 1;
      }
      if (Continue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Continue);
      }
      if (ErrorView.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorView);
      }
      if (Nonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nonce);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (Response.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Response);
      }
      if (Qop.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Qop);
      }
      if (Nc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Nc);
      }
      if (Cnonce.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Cnonce);
      }
      if (UseTokenCookie != false) {
        size += 2 + 1;
      }
      if (AccessToken.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (AccessTokenSecret.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(AccessTokenSecret);
      }
      if (Scope.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Scope);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Authenticate other) {
      if (other == null) {
        return;
      }
      if (other.Provider.Length != 0) {
        Provider = other.Provider;
      }
      if (other.State.Length != 0) {
        State = other.State;
      }
      if (other.OauthToken.Length != 0) {
        OauthToken = other.OauthToken;
      }
      if (other.OauthVerifier.Length != 0) {
        OauthVerifier = other.OauthVerifier;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.RememberMe != false) {
        RememberMe = other.RememberMe;
      }
      if (other.Continue.Length != 0) {
        Continue = other.Continue;
      }
      if (other.ErrorView.Length != 0) {
        ErrorView = other.ErrorView;
      }
      if (other.Nonce.Length != 0) {
        Nonce = other.Nonce;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      if (other.Response.Length != 0) {
        Response = other.Response;
      }
      if (other.Qop.Length != 0) {
        Qop = other.Qop;
      }
      if (other.Nc.Length != 0) {
        Nc = other.Nc;
      }
      if (other.Cnonce.Length != 0) {
        Cnonce = other.Cnonce;
      }
      if (other.UseTokenCookie != false) {
        UseTokenCookie = other.UseTokenCookie;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.AccessTokenSecret.Length != 0) {
        AccessTokenSecret = other.AccessTokenSecret;
      }
      if (other.Scope.Length != 0) {
        Scope = other.Scope;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Provider = input.ReadString();
            break;
          }
          case 18: {
            State = input.ReadString();
            break;
          }
          case 26: {
            OauthToken = input.ReadString();
            break;
          }
          case 34: {
            OauthVerifier = input.ReadString();
            break;
          }
          case 42: {
            UserName = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
          case 56: {
            RememberMe = input.ReadBool();
            break;
          }
          case 66: {
            Continue = input.ReadString();
            break;
          }
          case 74: {
            ErrorView = input.ReadString();
            break;
          }
          case 82: {
            Nonce = input.ReadString();
            break;
          }
          case 90: {
            Uri = input.ReadString();
            break;
          }
          case 98: {
            Response = input.ReadString();
            break;
          }
          case 106: {
            Qop = input.ReadString();
            break;
          }
          case 114: {
            Nc = input.ReadString();
            break;
          }
          case 122: {
            Cnonce = input.ReadString();
            break;
          }
          case 128: {
            UseTokenCookie = input.ReadBool();
            break;
          }
          case 138: {
            AccessToken = input.ReadString();
            break;
          }
          case 146: {
            AccessTokenSecret = input.ReadString();
            break;
          }
          case 154: {
            Scope = input.ReadString();
            break;
          }
          case 162: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class AuthenticateResponse : pb::IMessage<AuthenticateResponse> {
    private static readonly pb::MessageParser<AuthenticateResponse> _parser = new pb::MessageParser<AuthenticateResponse>(() => new AuthenticateResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AuthenticateResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticateResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticateResponse(AuthenticateResponse other) : this() {
      userId_ = other.userId_;
      sessionId_ = other.sessionId_;
      userName_ = other.userName_;
      displayName_ = other.displayName_;
      referrerUrl_ = other.referrerUrl_;
      bearerToken_ = other.bearerToken_;
      refreshToken_ = other.refreshToken_;
      profileUrl_ = other.profileUrl_;
      roles_ = other.roles_.Clone();
      permissions_ = other.permissions_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AuthenticateResponse Clone() {
      return new AuthenticateResponse(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 2;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 3;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReferrerUrl" field.</summary>
    public const int ReferrerUrlFieldNumber = 5;
    private string referrerUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferrerUrl {
      get { return referrerUrl_; }
      set {
        referrerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BearerToken" field.</summary>
    public const int BearerTokenFieldNumber = 6;
    private string bearerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BearerToken {
      get { return bearerToken_; }
      set {
        bearerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 7;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProfileUrl" field.</summary>
    public const int ProfileUrlFieldNumber = 8;
    private string profileUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileUrl {
      get { return profileUrl_; }
      set {
        profileUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Roles" field.</summary>
    public const int RolesFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_roles_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> roles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Roles {
      get { return roles_; }
    }

    /// <summary>Field number for the "Permissions" field.</summary>
    public const int PermissionsFieldNumber = 10;
    private static readonly pb::FieldCodec<string> _repeated_permissions_codec
        = pb::FieldCodec.ForString(82);
    private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 11;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 12;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 98);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AuthenticateResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AuthenticateResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (SessionId != other.SessionId) return false;
      if (UserName != other.UserName) return false;
      if (DisplayName != other.DisplayName) return false;
      if (ReferrerUrl != other.ReferrerUrl) return false;
      if (BearerToken != other.BearerToken) return false;
      if (RefreshToken != other.RefreshToken) return false;
      if (ProfileUrl != other.ProfileUrl) return false;
      if(!roles_.Equals(other.roles_)) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (ReferrerUrl.Length != 0) hash ^= ReferrerUrl.GetHashCode();
      if (BearerToken.Length != 0) hash ^= BearerToken.GetHashCode();
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (ProfileUrl.Length != 0) hash ^= ProfileUrl.GetHashCode();
      hash ^= roles_.GetHashCode();
      hash ^= permissions_.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (ReferrerUrl.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(RefreshToken);
      }
      if (ProfileUrl.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(ProfileUrl);
      }
      roles_.WriteTo(output, _repeated_roles_codec);
      permissions_.WriteTo(output, _repeated_permissions_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ResponseStatus);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (ReferrerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (ProfileUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileUrl);
      }
      size += roles_.CalculateSize(_repeated_roles_codec);
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AuthenticateResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.ReferrerUrl.Length != 0) {
        ReferrerUrl = other.ReferrerUrl;
      }
      if (other.BearerToken.Length != 0) {
        BearerToken = other.BearerToken;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.ProfileUrl.Length != 0) {
        ProfileUrl = other.ProfileUrl;
      }
      roles_.Add(other.roles_);
      permissions_.Add(other.permissions_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            ReferrerUrl = input.ReadString();
            break;
          }
          case 50: {
            BearerToken = input.ReadString();
            break;
          }
          case 58: {
            RefreshToken = input.ReadString();
            break;
          }
          case 66: {
            ProfileUrl = input.ReadString();
            break;
          }
          case 74: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
          case 82: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 90: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
          case 98: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeConnectionInfo : pb::IMessage<ChangeConnectionInfo> {
    private static readonly pb::MessageParser<ChangeConnectionInfo> _parser = new pb::MessageParser<ChangeConnectionInfo>(() => new ChangeConnectionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeConnectionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeConnectionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeConnectionInfo(ChangeConnectionInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeConnectionInfo Clone() {
      return new ChangeConnectionInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeConnectionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeConnectionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeConnectionInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ChangeDb : pb::IMessage<ChangeDb> {
    private static readonly pb::MessageParser<ChangeDb> _parser = new pb::MessageParser<ChangeDb>(() => new ChangeDb());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeDb> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDb() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDb(ChangeDb other) : this() {
      namedConnection_ = other.namedConnection_;
      connectionString_ = other.connectionString_;
      providerName_ = other.providerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDb Clone() {
      return new ChangeDb(this);
    }

    /// <summary>Field number for the "NamedConnection" field.</summary>
    public const int NamedConnectionFieldNumber = 1;
    private string namedConnection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NamedConnection {
      get { return namedConnection_; }
      set {
        namedConnection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConnectionString" field.</summary>
    public const int ConnectionStringFieldNumber = 2;
    private string connectionString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionString {
      get { return connectionString_; }
      set {
        connectionString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProviderName" field.</summary>
    public const int ProviderNameFieldNumber = 3;
    private string providerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProviderName {
      get { return providerName_; }
      set {
        providerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeDb);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeDb other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NamedConnection != other.NamedConnection) return false;
      if (ConnectionString != other.ConnectionString) return false;
      if (ProviderName != other.ProviderName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NamedConnection.Length != 0) hash ^= NamedConnection.GetHashCode();
      if (ConnectionString.Length != 0) hash ^= ConnectionString.GetHashCode();
      if (ProviderName.Length != 0) hash ^= ProviderName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NamedConnection.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NamedConnection);
      }
      if (ConnectionString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionString);
      }
      if (ProviderName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProviderName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NamedConnection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NamedConnection);
      }
      if (ConnectionString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionString);
      }
      if (ProviderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProviderName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeDb other) {
      if (other == null) {
        return;
      }
      if (other.NamedConnection.Length != 0) {
        NamedConnection = other.NamedConnection;
      }
      if (other.ConnectionString.Length != 0) {
        ConnectionString = other.ConnectionString;
      }
      if (other.ProviderName.Length != 0) {
        ProviderName = other.ProviderName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NamedConnection = input.ReadString();
            break;
          }
          case 18: {
            ConnectionString = input.ReadString();
            break;
          }
          case 26: {
            ProviderName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChangeDbResponse : pb::IMessage<ChangeDbResponse> {
    private static readonly pb::MessageParser<ChangeDbResponse> _parser = new pb::MessageParser<ChangeDbResponse>(() => new ChangeDbResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChangeDbResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDbResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDbResponse(ChangeDbResponse other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChangeDbResponse Clone() {
      return new ChangeDbResponse(this);
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::ServiceStack.Extensions.Tests.Protoc.Rockstar.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChangeDbResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChangeDbResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChangeDbResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChatMessage : pb::IMessage<ChatMessage> {
    private static readonly pb::MessageParser<ChatMessage> _parser = new pb::MessageParser<ChatMessage>(() => new ChatMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChatMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage(ChatMessage other) : this() {
      id_ = other.id_;
      channel_ = other.channel_;
      fromUserId_ = other.fromUserId_;
      fromName_ = other.fromName_;
      displayName_ = other.displayName_;
      message_ = other.message_;
      userAuthId_ = other.userAuthId_;
      private_ = other.private_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChatMessage Clone() {
      return new ChatMessage(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FromUserId" field.</summary>
    public const int FromUserIdFieldNumber = 3;
    private string fromUserId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromUserId {
      get { return fromUserId_; }
      set {
        fromUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FromName" field.</summary>
    public const int FromNameFieldNumber = 4;
    private string fromName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FromName {
      get { return fromName_; }
      set {
        fromName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 5;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 6;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserAuthId" field.</summary>
    public const int UserAuthIdFieldNumber = 7;
    private string userAuthId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserAuthId {
      get { return userAuthId_; }
      set {
        userAuthId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Private" field.</summary>
    public const int PrivateFieldNumber = 8;
    private bool private_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Private {
      get { return private_; }
      set {
        private_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChatMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChatMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Channel != other.Channel) return false;
      if (FromUserId != other.FromUserId) return false;
      if (FromName != other.FromName) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Message != other.Message) return false;
      if (UserAuthId != other.UserAuthId) return false;
      if (Private != other.Private) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (FromUserId.Length != 0) hash ^= FromUserId.GetHashCode();
      if (FromName.Length != 0) hash ^= FromName.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (UserAuthId.Length != 0) hash ^= UserAuthId.GetHashCode();
      if (Private != false) hash ^= Private.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (FromUserId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(FromUserId);
      }
      if (FromName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FromName);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(DisplayName);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Message);
      }
      if (UserAuthId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(UserAuthId);
      }
      if (Private != false) {
        output.WriteRawTag(64);
        output.WriteBool(Private);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (FromUserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromUserId);
      }
      if (FromName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FromName);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (UserAuthId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserAuthId);
      }
      if (Private != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChatMessage other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.FromUserId.Length != 0) {
        FromUserId = other.FromUserId;
      }
      if (other.FromName.Length != 0) {
        FromName = other.FromName;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.UserAuthId.Length != 0) {
        UserAuthId = other.UserAuthId;
      }
      if (other.Private != false) {
        Private = other.Private;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 26: {
            FromUserId = input.ReadString();
            break;
          }
          case 34: {
            FromName = input.ReadString();
            break;
          }
          case 42: {
            DisplayName = input.ReadString();
            break;
          }
          case 50: {
            Message = input.ReadString();
            break;
          }
          case 58: {
            UserAuthId = input.ReadString();
            break;
          }
          case 64: {
            Private = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConvertSessionToToken : pb::IMessage<ConvertSessionToToken> {
    private static readonly pb::MessageParser<ConvertSessionToToken> _parser = new pb::MessageParser<ConvertSessionToToken>(() => new ConvertSessionToToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConvertSessionToToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToToken(ConvertSessionToToken other) : this() {
      preserveSession_ = other.preserveSession_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToToken Clone() {
      return new ConvertSessionToToken(this);
    }

    /// <summary>Field number for the "PreserveSession" field.</summary>
    public const int PreserveSessionFieldNumber = 1;
    private bool preserveSession_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool PreserveSession {
      get { return preserveSession_; }
      set {
        preserveSession_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConvertSessionToToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConvertSessionToToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PreserveSession != other.PreserveSession) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PreserveSession != false) hash ^= PreserveSession.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PreserveSession != false) {
        output.WriteRawTag(8);
        output.WriteBool(PreserveSession);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PreserveSession != false) {
        size += 1 + 1;
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConvertSessionToToken other) {
      if (other == null) {
        return;
      }
      if (other.PreserveSession != false) {
        PreserveSession = other.PreserveSession;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PreserveSession = input.ReadBool();
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ConvertSessionToTokenResponse : pb::IMessage<ConvertSessionToTokenResponse> {
    private static readonly pb::MessageParser<ConvertSessionToTokenResponse> _parser = new pb::MessageParser<ConvertSessionToTokenResponse>(() => new ConvertSessionToTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConvertSessionToTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToTokenResponse(ConvertSessionToTokenResponse other) : this() {
      meta_ = other.meta_.Clone();
      accessToken_ = other.accessToken_;
      refreshToken_ = other.refreshToken_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConvertSessionToTokenResponse Clone() {
      return new ConvertSessionToTokenResponse(this);
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "AccessToken" field.</summary>
    public const int AccessTokenFieldNumber = 2;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 3;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 4;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConvertSessionToTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConvertSessionToTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Meta.Equals(other.Meta)) return false;
      if (AccessToken != other.AccessToken) return false;
      if (RefreshToken != other.RefreshToken) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Meta.GetHashCode();
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      meta_.WriteTo(output, _map_meta_codec);
      if (AccessToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AccessToken);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RefreshToken);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += meta_.CalculateSize(_map_meta_codec);
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConvertSessionToTokenResponse other) {
      if (other == null) {
        return;
      }
      meta_.Add(other.meta_);
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 18: {
            AccessToken = input.ReadString();
            break;
          }
          case 26: {
            RefreshToken = input.ReadString();
            break;
          }
          case 34: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTodo : pb::IMessage<CreateTodo> {
    private static readonly pb::MessageParser<CreateTodo> _parser = new pb::MessageParser<CreateTodo>(() => new CreateTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo(CreateTodo other) : this() {
      title_ = other.title_;
      order_ = other.order_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodo Clone() {
      return new CreateTodo(this);
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 1;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 2;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Title != other.Title) return false;
      if (Order != other.Order) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Title.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Title);
      }
      if (Order != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Order);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTodo other) {
      if (other == null) {
        return;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Title = input.ReadString();
            break;
          }
          case 16: {
            Order = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CreateTodoResponse : pb::IMessage<CreateTodoResponse> {
    private static readonly pb::MessageParser<CreateTodoResponse> _parser = new pb::MessageParser<CreateTodoResponse>(() => new CreateTodoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateTodoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse(CreateTodoResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateTodoResponse Clone() {
      return new CreateTodoResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::ServiceStack.Extensions.Tests.Protoc.Todo result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.Todo Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateTodoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateTodoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateTodoResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::ServiceStack.Extensions.Tests.Protoc.Todo();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::ServiceStack.Extensions.Tests.Protoc.Todo();
            }
            input.ReadMessage(Result);
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomRockstar : pb::IMessage<CustomRockstar> {
    private static readonly pb::MessageParser<CustomRockstar> _parser = new pb::MessageParser<CustomRockstar>(() => new CustomRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomRockstar(CustomRockstar other) : this() {
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      age_ = other.age_;
      rockstarAlbumName_ = other.rockstarAlbumName_;
      rockstarGenreName_ = other.rockstarGenreName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomRockstar Clone() {
      return new CustomRockstar(this);
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 1;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 2;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 3;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "RockstarAlbumName" field.</summary>
    public const int RockstarAlbumNameFieldNumber = 4;
    private string rockstarAlbumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarAlbumName {
      get { return rockstarAlbumName_; }
      set {
        rockstarAlbumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RockstarGenreName" field.</summary>
    public const int RockstarGenreNameFieldNumber = 5;
    private string rockstarGenreName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarGenreName {
      get { return rockstarGenreName_; }
      set {
        rockstarGenreName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Age != other.Age) return false;
      if (RockstarAlbumName != other.RockstarAlbumName) return false;
      if (RockstarGenreName != other.RockstarGenreName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (RockstarAlbumName.Length != 0) hash ^= RockstarAlbumName.GetHashCode();
      if (RockstarGenreName.Length != 0) hash ^= RockstarGenreName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FirstName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LastName);
      }
      if (Age != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RockstarAlbumName);
      }
      if (RockstarGenreName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RockstarGenreName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarAlbumName);
      }
      if (RockstarGenreName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarGenreName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomRockstar other) {
      if (other == null) {
        return;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.RockstarAlbumName.Length != 0) {
        RockstarAlbumName = other.RockstarAlbumName;
      }
      if (other.RockstarGenreName.Length != 0) {
        RockstarGenreName = other.RockstarGenreName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirstName = input.ReadString();
            break;
          }
          case 18: {
            LastName = input.ReadString();
            break;
          }
          case 24: {
            Age = input.ReadInt32();
            break;
          }
          case 34: {
            RockstarAlbumName = input.ReadString();
            break;
          }
          case 42: {
            RockstarGenreName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomRockstarSchema : pb::IMessage<CustomRockstarSchema> {
    private static readonly pb::MessageParser<CustomRockstarSchema> _parser = new pb::MessageParser<CustomRockstarSchema>(() => new CustomRockstarSchema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomRockstarSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomRockstarSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomRockstarSchema(CustomRockstarSchema other) : this() {
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      age_ = other.age_;
      rockstarAlbumName_ = other.rockstarAlbumName_;
      rockstarGenreName_ = other.rockstarGenreName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomRockstarSchema Clone() {
      return new CustomRockstarSchema(this);
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 1;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 2;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 3;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "RockstarAlbumName" field.</summary>
    public const int RockstarAlbumNameFieldNumber = 4;
    private string rockstarAlbumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarAlbumName {
      get { return rockstarAlbumName_; }
      set {
        rockstarAlbumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RockstarGenreName" field.</summary>
    public const int RockstarGenreNameFieldNumber = 5;
    private string rockstarGenreName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarGenreName {
      get { return rockstarGenreName_; }
      set {
        rockstarGenreName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomRockstarSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomRockstarSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Age != other.Age) return false;
      if (RockstarAlbumName != other.RockstarAlbumName) return false;
      if (RockstarGenreName != other.RockstarGenreName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (RockstarAlbumName.Length != 0) hash ^= RockstarAlbumName.GetHashCode();
      if (RockstarGenreName.Length != 0) hash ^= RockstarGenreName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FirstName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LastName);
      }
      if (Age != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(RockstarAlbumName);
      }
      if (RockstarGenreName.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RockstarGenreName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarAlbumName);
      }
      if (RockstarGenreName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarGenreName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomRockstarSchema other) {
      if (other == null) {
        return;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.RockstarAlbumName.Length != 0) {
        RockstarAlbumName = other.RockstarAlbumName;
      }
      if (other.RockstarGenreName.Length != 0) {
        RockstarGenreName = other.RockstarGenreName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirstName = input.ReadString();
            break;
          }
          case 18: {
            LastName = input.ReadString();
            break;
          }
          case 24: {
            Age = input.ReadInt32();
            break;
          }
          case 34: {
            RockstarAlbumName = input.ReadString();
            break;
          }
          case 42: {
            RockstarGenreName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomSelectRockstar : pb::IMessage<CustomSelectRockstar> {
    private static readonly pb::MessageParser<CustomSelectRockstar> _parser = new pb::MessageParser<CustomSelectRockstar>(() => new CustomSelectRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomSelectRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomSelectRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomSelectRockstar(CustomSelectRockstar other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomSelectRockstar Clone() {
      return new CustomSelectRockstar(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 4;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomSelectRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomSelectRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (Age != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomSelectRockstar other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 32: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class CustomSelectRockstarResponse : pb::IMessage<CustomSelectRockstarResponse> {
    private static readonly pb::MessageParser<CustomSelectRockstarResponse> _parser = new pb::MessageParser<CustomSelectRockstarResponse>(() => new CustomSelectRockstarResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CustomSelectRockstarResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomSelectRockstarResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomSelectRockstarResponse(CustomSelectRockstarResponse other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CustomSelectRockstarResponse Clone() {
      return new CustomSelectRockstarResponse(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 3;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CustomSelectRockstarResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CustomSelectRockstarResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (Age != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CustomSelectRockstarResponse other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 24: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteTodo : pb::IMessage<DeleteTodo> {
    private static readonly pb::MessageParser<DeleteTodo> _parser = new pb::MessageParser<DeleteTodo>(() => new DeleteTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodo(DeleteTodo other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodo Clone() {
      return new DeleteTodo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTodo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DeleteTodos : pb::IMessage<DeleteTodos> {
    private static readonly pb::MessageParser<DeleteTodos> _parser = new pb::MessageParser<DeleteTodos>(() => new DeleteTodos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteTodos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodos(DeleteTodos other) : this() {
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteTodos Clone() {
      return new DeleteTodos(this);
    }

    /// <summary>Field number for the "Ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<long> _repeated_ids_codec
        = pb::FieldCodec.ForInt64(8);
    private readonly pbc::RepeatedField<long> ids_ = new pbc::RepeatedField<long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<long> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteTodos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteTodos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteTodos other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class DynamicRequest : pb::IMessage<DynamicRequest> {
    private static readonly pb::MessageParser<DynamicRequest> _parser = new pb::MessageParser<DynamicRequest>(() => new DynamicRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicRequest(DynamicRequest other) : this() {
      params_ = other.params_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicRequest Clone() {
      return new DynamicRequest(this);
    }

    /// <summary>Field number for the "Params" field.</summary>
    public const int ParamsFieldNumber = 1;
    private static readonly pbc::MapField<string, string>.Codec _map_params_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 10);
    private readonly pbc::MapField<string, string> params_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Params {
      get { return params_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Params.Equals(other.Params)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Params.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      params_.WriteTo(output, _map_params_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += params_.CalculateSize(_map_params_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicRequest other) {
      if (other == null) {
        return;
      }
      params_.Add(other.params_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            params_.AddEntriesFrom(input, _map_params_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class EmptyResponse : pb::IMessage<EmptyResponse> {
    private static readonly pb::MessageParser<EmptyResponse> _parser = new pb::MessageParser<EmptyResponse>(() => new EmptyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<EmptyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse(EmptyResponse other) : this() {
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public EmptyResponse Clone() {
      return new EmptyResponse(this);
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 1;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as EmptyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(EmptyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(EmptyResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class FileContent : pb::IMessage<FileContent> {
    private static readonly pb::MessageParser<FileContent> _parser = new pb::MessageParser<FileContent>(() => new FileContent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FileContent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileContent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileContent(FileContent other) : this() {
      name_ = other.name_;
      type_ = other.type_;
      length_ = other.length_;
      body_ = other.body_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FileContent Clone() {
      return new FileContent(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Length" field.</summary>
    public const int LengthFieldNumber = 3;
    private int length_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Length {
      get { return length_; }
      set {
        length_ = value;
      }
    }

    /// <summary>Field number for the "Body" field.</summary>
    public const int BodyFieldNumber = 4;
    private pb::ByteString body_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Body {
      get { return body_; }
      set {
        body_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FileContent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FileContent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Type != other.Type) return false;
      if (Length != other.Length) return false;
      if (Body != other.Body) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (Length != 0) hash ^= Length.GetHashCode();
      if (Body.Length != 0) hash ^= Body.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (Length != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Length);
      }
      if (Body.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Body);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Length);
      }
      if (Body.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Body);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FileContent other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      if (other.Length != 0) {
        Length = other.Length;
      }
      if (other.Body.Length != 0) {
        Body = other.Body;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
          case 24: {
            Length = input.ReadInt32();
            break;
          }
          case 34: {
            Body = input.ReadBytes();
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccessToken : pb::IMessage<GetAccessToken> {
    private static readonly pb::MessageParser<GetAccessToken> _parser = new pb::MessageParser<GetAccessToken>(() => new GetAccessToken());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccessToken> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessToken() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessToken(GetAccessToken other) : this() {
      refreshToken_ = other.refreshToken_;
      useTokenCookie_ = other.useTokenCookie_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessToken Clone() {
      return new GetAccessToken(this);
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 1;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UseTokenCookie" field.</summary>
    public const int UseTokenCookieFieldNumber = 2;
    private bool useTokenCookie_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool UseTokenCookie {
      get { return useTokenCookie_; }
      set {
        useTokenCookie_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccessToken);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccessToken other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RefreshToken != other.RefreshToken) return false;
      if (UseTokenCookie != other.UseTokenCookie) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (UseTokenCookie != false) hash ^= UseTokenCookie.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RefreshToken);
      }
      if (UseTokenCookie != false) {
        output.WriteRawTag(16);
        output.WriteBool(UseTokenCookie);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (UseTokenCookie != false) {
        size += 1 + 1;
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccessToken other) {
      if (other == null) {
        return;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.UseTokenCookie != false) {
        UseTokenCookie = other.UseTokenCookie;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RefreshToken = input.ReadString();
            break;
          }
          case 16: {
            UseTokenCookie = input.ReadBool();
            break;
          }
          case 26: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetAccessTokenResponse : pb::IMessage<GetAccessTokenResponse> {
    private static readonly pb::MessageParser<GetAccessTokenResponse> _parser = new pb::MessageParser<GetAccessTokenResponse>(() => new GetAccessTokenResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetAccessTokenResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessTokenResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessTokenResponse(GetAccessTokenResponse other) : this() {
      accessToken_ = other.accessToken_;
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetAccessTokenResponse Clone() {
      return new GetAccessTokenResponse(this);
    }

    /// <summary>Field number for the "AccessToken" field.</summary>
    public const int AccessTokenFieldNumber = 1;
    private string accessToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AccessToken {
      get { return accessToken_; }
      set {
        accessToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 3;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetAccessTokenResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetAccessTokenResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccessToken != other.AccessToken) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccessToken.Length != 0) hash ^= AccessToken.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccessToken.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(AccessToken);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccessToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AccessToken);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetAccessTokenResponse other) {
      if (other == null) {
        return;
      }
      if (other.AccessToken.Length != 0) {
        AccessToken = other.AccessToken;
      }
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccessToken = input.ReadString();
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 26: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetApiKeys : pb::IMessage<GetApiKeys> {
    private static readonly pb::MessageParser<GetApiKeys> _parser = new pb::MessageParser<GetApiKeys>(() => new GetApiKeys());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetApiKeys> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeys() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeys(GetApiKeys other) : this() {
      environment_ = other.environment_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeys Clone() {
      return new GetApiKeys(this);
    }

    /// <summary>Field number for the "Environment" field.</summary>
    public const int EnvironmentFieldNumber = 1;
    private string environment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Environment {
      get { return environment_; }
      set {
        environment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetApiKeys);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetApiKeys other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Environment != other.Environment) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Environment.Length != 0) hash ^= Environment.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Environment.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Environment);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Environment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Environment);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetApiKeys other) {
      if (other == null) {
        return;
      }
      if (other.Environment.Length != 0) {
        Environment = other.Environment;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Environment = input.ReadString();
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetApiKeysResponse : pb::IMessage<GetApiKeysResponse> {
    private static readonly pb::MessageParser<GetApiKeysResponse> _parser = new pb::MessageParser<GetApiKeysResponse>(() => new GetApiKeysResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetApiKeysResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeysResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeysResponse(GetApiKeysResponse other) : this() {
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetApiKeysResponse Clone() {
      return new GetApiKeysResponse(this);
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::ServiceStack.Extensions.Tests.Protoc.UserApiKey.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 3;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetApiKeysResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetApiKeysResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetApiKeysResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 26: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetFile : pb::IMessage<GetFile> {
    private static readonly pb::MessageParser<GetFile> _parser = new pb::MessageParser<GetFile>(() => new GetFile());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFile> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFile() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFile(GetFile other) : this() {
      path_ = other.path_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFile Clone() {
      return new GetFile(this);
    }

    /// <summary>Field number for the "Path" field.</summary>
    public const int PathFieldNumber = 1;
    private string path_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Path {
      get { return path_; }
      set {
        path_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFile);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFile other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Path != other.Path) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Path.Length != 0) hash ^= Path.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Path.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Path);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Path.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Path);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFile other) {
      if (other == null) {
        return;
      }
      if (other.Path.Length != 0) {
        Path = other.Path;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Path = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetHello : pb::IMessage<GetHello> {
    private static readonly pb::MessageParser<GetHello> _parser = new pb::MessageParser<GetHello>(() => new GetHello());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetHello> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHello() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHello(GetHello other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetHello Clone() {
      return new GetHello(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetHello);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetHello other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetHello other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTodo : pb::IMessage<GetTodo> {
    private static readonly pb::MessageParser<GetTodo> _parser = new pb::MessageParser<GetTodo>(() => new GetTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodo(GetTodo other) : this() {
      id_ = other.id_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodo Clone() {
      return new GetTodo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTodoResponse : pb::IMessage<GetTodoResponse> {
    private static readonly pb::MessageParser<GetTodoResponse> _parser = new pb::MessageParser<GetTodoResponse>(() => new GetTodoResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodoResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse(GetTodoResponse other) : this() {
      result_ = other.result_ != null ? other.result_.Clone() : null;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodoResponse Clone() {
      return new GetTodoResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private global::ServiceStack.Extensions.Tests.Protoc.Todo result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.Todo Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodoResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodoResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Result, other.Result)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (result_ != null) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (result_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (result_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodoResponse other) {
      if (other == null) {
        return;
      }
      if (other.result_ != null) {
        if (result_ == null) {
          Result = new global::ServiceStack.Extensions.Tests.Protoc.Todo();
        }
        Result.MergeFrom(other.Result);
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (result_ == null) {
              Result = new global::ServiceStack.Extensions.Tests.Protoc.Todo();
            }
            input.ReadMessage(Result);
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class GetTodos : pb::IMessage<GetTodos> {
    private static readonly pb::MessageParser<GetTodos> _parser = new pb::MessageParser<GetTodos>(() => new GetTodos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodos(GetTodos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodos Clone() {
      return new GetTodos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class GetTodosResponse : pb::IMessage<GetTodosResponse> {
    private static readonly pb::MessageParser<GetTodosResponse> _parser = new pb::MessageParser<GetTodosResponse>(() => new GetTodosResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTodosResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodosResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodosResponse(GetTodosResponse other) : this() {
      results_ = other.results_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTodosResponse Clone() {
      return new GetTodosResponse(this);
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.Todo> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::ServiceStack.Extensions.Tests.Protoc.Todo.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Todo> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Todo>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Todo> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTodosResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTodosResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTodosResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelloJwt : pb::IMessage<HelloJwt> {
    private static readonly pb::MessageParser<HelloJwt> _parser = new pb::MessageParser<HelloJwt>(() => new HelloJwt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloJwt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwt(HelloJwt other) : this() {
      name_ = other.name_;
      bearerToken_ = other.bearerToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwt Clone() {
      return new HelloJwt(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BearerToken" field.</summary>
    public const int BearerTokenFieldNumber = 2;
    private string bearerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BearerToken {
      get { return bearerToken_; }
      set {
        bearerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloJwt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloJwt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (BearerToken != other.BearerToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (BearerToken.Length != 0) hash ^= BearerToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (BearerToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BearerToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (BearerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BearerToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloJwt other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.BearerToken.Length != 0) {
        BearerToken = other.BearerToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            BearerToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelloJwtResponse : pb::IMessage<HelloJwtResponse> {
    private static readonly pb::MessageParser<HelloJwtResponse> _parser = new pb::MessageParser<HelloJwtResponse>(() => new HelloJwtResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloJwtResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwtResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwtResponse(HelloJwtResponse other) : this() {
      result_ = other.result_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloJwtResponse Clone() {
      return new HelloJwtResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloJwtResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloJwtResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloJwtResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelloResponse : pb::IMessage<HelloResponse> {
    private static readonly pb::MessageParser<HelloResponse> _parser = new pb::MessageParser<HelloResponse>(() => new HelloResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse(HelloResponse other) : this() {
      result_ = other.result_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloResponse Clone() {
      return new HelloResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Incr : pb::IMessage<Incr> {
    private static readonly pb::MessageParser<Incr> _parser = new pb::MessageParser<Incr>(() => new Incr());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Incr> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Incr() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Incr(Incr other) : this() {
      amount_ = other.amount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Incr Clone() {
      return new Incr(this);
    }

    /// <summary>Field number for the "Amount" field.</summary>
    public const int AmountFieldNumber = 1;
    private int amount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Amount {
      get { return amount_; }
      set {
        amount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Incr);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Incr other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Amount != other.Amount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Amount != 0) hash ^= Amount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Amount != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Amount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Amount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Amount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Incr other) {
      if (other == null) {
        return;
      }
      if (other.Amount != 0) {
        Amount = other.Amount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Amount = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Movie : pb::IMessage<Movie> {
    private static readonly pb::MessageParser<Movie> _parser = new pb::MessageParser<Movie>(() => new Movie());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Movie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Movie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Movie(Movie other) : this() {
      id_ = other.id_;
      imdbId_ = other.imdbId_;
      title_ = other.title_;
      rating_ = other.rating_;
      score_ = other.score_ != null ? other.score_.Clone() : null;
      director_ = other.director_;
      releaseDate_ = other.releaseDate_ != null ? other.releaseDate_.Clone() : null;
      tagLine_ = other.tagLine_;
      genres_ = other.genres_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Movie Clone() {
      return new Movie(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "ImdbId" field.</summary>
    public const int ImdbIdFieldNumber = 2;
    private string imdbId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ImdbId {
      get { return imdbId_; }
      set {
        imdbId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 3;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Rating" field.</summary>
    public const int RatingFieldNumber = 4;
    private string rating_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Rating {
      get { return rating_; }
      set {
        rating_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Score" field.</summary>
    public const int ScoreFieldNumber = 5;
    private global::ProtoBuf.Bcl.Decimal score_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.Decimal Score {
      get { return score_; }
      set {
        score_ = value;
      }
    }

    /// <summary>Field number for the "Director" field.</summary>
    public const int DirectorFieldNumber = 6;
    private string director_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Director {
      get { return director_; }
      set {
        director_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReleaseDate" field.</summary>
    public const int ReleaseDateFieldNumber = 7;
    private global::ProtoBuf.Bcl.DateTime releaseDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime ReleaseDate {
      get { return releaseDate_; }
      set {
        releaseDate_ = value;
      }
    }

    /// <summary>Field number for the "TagLine" field.</summary>
    public const int TagLineFieldNumber = 8;
    private string tagLine_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TagLine {
      get { return tagLine_; }
      set {
        tagLine_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Genres" field.</summary>
    public const int GenresFieldNumber = 9;
    private static readonly pb::FieldCodec<string> _repeated_genres_codec
        = pb::FieldCodec.ForString(74);
    private readonly pbc::RepeatedField<string> genres_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Genres {
      get { return genres_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Movie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Movie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ImdbId != other.ImdbId) return false;
      if (Title != other.Title) return false;
      if (Rating != other.Rating) return false;
      if (!object.Equals(Score, other.Score)) return false;
      if (Director != other.Director) return false;
      if (!object.Equals(ReleaseDate, other.ReleaseDate)) return false;
      if (TagLine != other.TagLine) return false;
      if(!genres_.Equals(other.genres_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (ImdbId.Length != 0) hash ^= ImdbId.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Rating.Length != 0) hash ^= Rating.GetHashCode();
      if (score_ != null) hash ^= Score.GetHashCode();
      if (Director.Length != 0) hash ^= Director.GetHashCode();
      if (releaseDate_ != null) hash ^= ReleaseDate.GetHashCode();
      if (TagLine.Length != 0) hash ^= TagLine.GetHashCode();
      hash ^= genres_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (ImdbId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ImdbId);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Title);
      }
      if (Rating.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Rating);
      }
      if (score_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Score);
      }
      if (Director.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Director);
      }
      if (releaseDate_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ReleaseDate);
      }
      if (TagLine.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(TagLine);
      }
      genres_.WriteTo(output, _repeated_genres_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (ImdbId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ImdbId);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Rating.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Rating);
      }
      if (score_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Score);
      }
      if (Director.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Director);
      }
      if (releaseDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ReleaseDate);
      }
      if (TagLine.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TagLine);
      }
      size += genres_.CalculateSize(_repeated_genres_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Movie other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.ImdbId.Length != 0) {
        ImdbId = other.ImdbId;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Rating.Length != 0) {
        Rating = other.Rating;
      }
      if (other.score_ != null) {
        if (score_ == null) {
          Score = new global::ProtoBuf.Bcl.Decimal();
        }
        Score.MergeFrom(other.Score);
      }
      if (other.Director.Length != 0) {
        Director = other.Director;
      }
      if (other.releaseDate_ != null) {
        if (releaseDate_ == null) {
          ReleaseDate = new global::ProtoBuf.Bcl.DateTime();
        }
        ReleaseDate.MergeFrom(other.ReleaseDate);
      }
      if (other.TagLine.Length != 0) {
        TagLine = other.TagLine;
      }
      genres_.Add(other.genres_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            ImdbId = input.ReadString();
            break;
          }
          case 26: {
            Title = input.ReadString();
            break;
          }
          case 34: {
            Rating = input.ReadString();
            break;
          }
          case 42: {
            if (score_ == null) {
              Score = new global::ProtoBuf.Bcl.Decimal();
            }
            input.ReadMessage(Score);
            break;
          }
          case 50: {
            Director = input.ReadString();
            break;
          }
          case 58: {
            if (releaseDate_ == null) {
              ReleaseDate = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(ReleaseDate);
            break;
          }
          case 66: {
            TagLine = input.ReadString();
            break;
          }
          case 74: {
            genres_.AddEntriesFrom(input, _repeated_genres_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Multiply : pb::IMessage<Multiply> {
    private static readonly pb::MessageParser<Multiply> _parser = new pb::MessageParser<Multiply>(() => new Multiply());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Multiply> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Multiply() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Multiply(Multiply other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Multiply Clone() {
      return new Multiply(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private int x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private int y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Multiply);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Multiply other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (X != other.X) return false;
      if (Y != other.Y) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0) hash ^= X.GetHashCode();
      if (Y != 0) hash ^= Y.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (X != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(X);
      }
      if (Y != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Y);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (X != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(X);
      }
      if (Y != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Y);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Multiply other) {
      if (other == null) {
        return;
      }
      if (other.X != 0) {
        X = other.X;
      }
      if (other.Y != 0) {
        Y = other.Y;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            X = input.ReadInt32();
            break;
          }
          case 16: {
            Y = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class MultiplyResponse : pb::IMessage<MultiplyResponse> {
    private static readonly pb::MessageParser<MultiplyResponse> _parser = new pb::MessageParser<MultiplyResponse>(() => new MultiplyResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MultiplyResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[41]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiplyResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiplyResponse(MultiplyResponse other) : this() {
      result_ = other.result_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MultiplyResponse Clone() {
      return new MultiplyResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private int result_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MultiplyResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MultiplyResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result != 0) hash ^= Result.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Result);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Result);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MultiplyResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result != 0) {
        Result = other.Result;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Result = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NamedRockstar : pb::IMessage<NamedRockstar> {
    private static readonly pb::MessageParser<NamedRockstar> _parser = new pb::MessageParser<NamedRockstar>(() => new NamedRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NamedRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[42]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedRockstar(NamedRockstar other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NamedRockstar Clone() {
      return new NamedRockstar(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NamedRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NamedRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NamedRockstar other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class PagingTest : pb::IMessage<PagingTest> {
    private static readonly pb::MessageParser<PagingTest> _parser = new pb::MessageParser<PagingTest>(() => new PagingTest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PagingTest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[43]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PagingTest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PagingTest(PagingTest other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PagingTest Clone() {
      return new PagingTest(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 3;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PagingTest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PagingTest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Value != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PagingTest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class PostChatToChannel : pb::IMessage<PostChatToChannel> {
    private static readonly pb::MessageParser<PostChatToChannel> _parser = new pb::MessageParser<PostChatToChannel>(() => new PostChatToChannel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostChatToChannel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[44]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostChatToChannel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostChatToChannel(PostChatToChannel other) : this() {
      from_ = other.from_;
      toUserId_ = other.toUserId_;
      channel_ = other.channel_;
      message_ = other.message_;
      selector_ = other.selector_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostChatToChannel Clone() {
      return new PostChatToChannel(this);
    }

    /// <summary>Field number for the "From" field.</summary>
    public const int FromFieldNumber = 1;
    private string from_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string From {
      get { return from_; }
      set {
        from_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ToUserId" field.</summary>
    public const int ToUserIdFieldNumber = 2;
    private string toUserId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ToUserId {
      get { return toUserId_; }
      set {
        toUserId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 3;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 4;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Selector" field.</summary>
    public const int SelectorFieldNumber = 5;
    private string selector_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Selector {
      get { return selector_; }
      set {
        selector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostChatToChannel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostChatToChannel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (From != other.From) return false;
      if (ToUserId != other.ToUserId) return false;
      if (Channel != other.Channel) return false;
      if (Message != other.Message) return false;
      if (Selector != other.Selector) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (From.Length != 0) hash ^= From.GetHashCode();
      if (ToUserId.Length != 0) hash ^= ToUserId.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (Selector.Length != 0) hash ^= Selector.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (From.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(From);
      }
      if (ToUserId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ToUserId);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Channel);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Message);
      }
      if (Selector.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Selector);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (From.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(From);
      }
      if (ToUserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ToUserId);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (Selector.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Selector);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostChatToChannel other) {
      if (other == null) {
        return;
      }
      if (other.From.Length != 0) {
        From = other.From;
      }
      if (other.ToUserId.Length != 0) {
        ToUserId = other.ToUserId;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.Selector.Length != 0) {
        Selector = other.Selector;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            From = input.ReadString();
            break;
          }
          case 18: {
            ToUserId = input.ReadString();
            break;
          }
          case 26: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            Message = input.ReadString();
            break;
          }
          case 42: {
            Selector = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryAdhoc : pb::IMessage<QueryAdhoc> {
    private static readonly pb::MessageParser<QueryAdhoc> _parser = new pb::MessageParser<QueryAdhoc>(() => new QueryAdhoc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryAdhoc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[45]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdhoc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdhoc(QueryAdhoc other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdhoc Clone() {
      return new QueryAdhoc(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryAdhoc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryAdhoc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryAdhoc other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class QueryAdhocRockstars : pb::IMessage<QueryAdhocRockstars> {
    private static readonly pb::MessageParser<QueryAdhocRockstars> _parser = new pb::MessageParser<QueryAdhocRockstars>(() => new QueryAdhocRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryAdhocRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[46]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdhocRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdhocRockstars(QueryAdhocRockstars other) : this() {
      firstName_ = other.firstName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAdhocRockstars Clone() {
      return new QueryAdhocRockstars(this);
    }

    /// <summary>Field number for the "first_name" field.</summary>
    public const int FirstNameFieldNumber = 1;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryAdhocRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryAdhocRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstName != other.FirstName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FirstName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryAdhocRockstars other) {
      if (other == null) {
        return;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirstName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryAllFields : pb::IMessage<QueryAllFields> {
    private static readonly pb::MessageParser<QueryAllFields> _parser = new pb::MessageParser<QueryAllFields>(() => new QueryAllFields());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryAllFields> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[47]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAllFields() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAllFields(QueryAllFields other) : this() {
      guid_ = other.guid_ != null ? other.guid_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryAllFields Clone() {
      return new QueryAllFields(this);
    }

    /// <summary>Field number for the "Guid" field.</summary>
    public const int GuidFieldNumber = 1;
    private global::ProtoBuf.Bcl.Guid guid_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.Guid Guid {
      get { return guid_; }
      set {
        guid_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryAllFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryAllFields other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Guid, other.Guid)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (guid_ != null) hash ^= Guid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (guid_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Guid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (guid_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Guid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryAllFields other) {
      if (other == null) {
        return;
      }
      if (other.guid_ != null) {
        if (guid_ == null) {
          Guid = new global::ProtoBuf.Bcl.Guid();
        }
        Guid.MergeFrom(other.Guid);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (guid_ == null) {
              Guid = new global::ProtoBuf.Bcl.Guid();
            }
            input.ReadMessage(Guid);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryBase : pb::IMessage<QueryBase> {
    private static readonly pb::MessageParser<QueryBase> _parser = new pb::MessageParser<QueryBase>(() => new QueryBase());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryBase> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[48]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryBase() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryBase(QueryBase other) : this() {
      skip_ = other.skip_;
      take_ = other.take_;
      orderBy_ = other.orderBy_;
      orderByDesc_ = other.orderByDesc_;
      include_ = other.include_;
      fields_ = other.fields_;
      meta_ = other.meta_.Clone();
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryDbRockstarCustomRockstar:
          QueryDbRockstarCustomRockstar = other.QueryDbRockstarCustomRockstar.Clone();
          break;
        case SubtypeOneofCase.QueryDbRockstarRockstarAlias:
          QueryDbRockstarRockstarAlias = other.QueryDbRockstarRockstarAlias.Clone();
          break;
        case SubtypeOneofCase.QueryDbPagingTest:
          QueryDbPagingTest = other.QueryDbPagingTest.Clone();
          break;
        case SubtypeOneofCase.QueryDbCustomSelectRockstar:
          QueryDbCustomSelectRockstar = other.QueryDbCustomSelectRockstar.Clone();
          break;
        case SubtypeOneofCase.QueryDbMovie:
          QueryDbMovie = other.QueryDbMovie.Clone();
          break;
        case SubtypeOneofCase.QueryDbRockstarReference:
          QueryDbRockstarReference = other.QueryDbRockstarReference.Clone();
          break;
        case SubtypeOneofCase.QueryDbAdhoc:
          QueryDbAdhoc = other.QueryDbAdhoc.Clone();
          break;
        case SubtypeOneofCase.QueryDbNamedRockstar:
          QueryDbNamedRockstar = other.QueryDbNamedRockstar.Clone();
          break;
        case SubtypeOneofCase.QueryDbTypeWithEnum:
          QueryDbTypeWithEnum = other.QueryDbTypeWithEnum.Clone();
          break;
        case SubtypeOneofCase.QueryDbRockstarAlbum:
          QueryDbRockstarAlbum = other.QueryDbRockstarAlbum.Clone();
          break;
        case SubtypeOneofCase.QueryDbCustomSelectRockstarCustomSelectRockstarResponse:
          QueryDbCustomSelectRockstarCustomSelectRockstarResponse = other.QueryDbCustomSelectRockstarCustomSelectRockstarResponse.Clone();
          break;
        case SubtypeOneofCase.QueryDbRockstar:
          QueryDbRockstar = other.QueryDbRockstar.Clone();
          break;
        case SubtypeOneofCase.QueryDbAllFields:
          QueryDbAllFields = other.QueryDbAllFields.Clone();
          break;
        case SubtypeOneofCase.QueryDbRockstarCustomRockstarSchema:
          QueryDbRockstarCustomRockstarSchema = other.QueryDbRockstarCustomRockstarSchema.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryBase Clone() {
      return new QueryBase(this);
    }

    /// <summary>Field number for the "Skip" field.</summary>
    public const int SkipFieldNumber = 1;
    private int skip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Skip {
      get { return skip_; }
      set {
        skip_ = value;
      }
    }

    /// <summary>Field number for the "Take" field.</summary>
    public const int TakeFieldNumber = 2;
    private int take_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Take {
      get { return take_; }
      set {
        take_ = value;
      }
    }

    /// <summary>Field number for the "OrderBy" field.</summary>
    public const int OrderByFieldNumber = 3;
    private string orderBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "OrderByDesc" field.</summary>
    public const int OrderByDescFieldNumber = 4;
    private string orderByDesc_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderByDesc {
      get { return orderByDesc_; }
      set {
        orderByDesc_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Include" field.</summary>
    public const int IncludeFieldNumber = 5;
    private string include_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Include {
      get { return include_; }
      set {
        include_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Fields" field.</summary>
    public const int FieldsFieldNumber = 6;
    private string fields_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fields {
      get { return fields_; }
      set {
        fields_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 7;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 58);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "QueryDb_Rockstar_CustomRockstar" field.</summary>
    public const int QueryDbRockstarCustomRockstarFieldNumber = 1595516;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar QueryDbRockstarCustomRockstar {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstar ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbRockstarCustomRockstar;
      }
    }

    /// <summary>Field number for the "QueryDb_Rockstar_RockstarAlias" field.</summary>
    public const int QueryDbRockstarRockstarAliasFieldNumber = 95568396;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_RockstarAlias QueryDbRockstarRockstarAlias {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbRockstarRockstarAlias ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_RockstarAlias) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbRockstarRockstarAlias;
      }
    }

    /// <summary>Field number for the "QueryDb_PagingTest" field.</summary>
    public const int QueryDbPagingTestFieldNumber = 110246772;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_PagingTest QueryDbPagingTest {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbPagingTest ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_PagingTest) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbPagingTest;
      }
    }

    /// <summary>Field number for the "QueryDb_CustomSelectRockstar" field.</summary>
    public const int QueryDbCustomSelectRockstarFieldNumber = 117530989;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar QueryDbCustomSelectRockstar {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbCustomSelectRockstar ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbCustomSelectRockstar;
      }
    }

    /// <summary>Field number for the "QueryDb_Movie" field.</summary>
    public const int QueryDbMovieFieldNumber = 133134611;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie QueryDbMovie {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbMovie ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbMovie;
      }
    }

    /// <summary>Field number for the "QueryDb_RockstarReference" field.</summary>
    public const int QueryDbRockstarReferenceFieldNumber = 139856298;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference QueryDbRockstarReference {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbRockstarReference ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbRockstarReference;
      }
    }

    /// <summary>Field number for the "QueryDb_Adhoc" field.</summary>
    public const int QueryDbAdhocFieldNumber = 193863048;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Adhoc QueryDbAdhoc {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbAdhoc ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Adhoc) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbAdhoc;
      }
    }

    /// <summary>Field number for the "QueryDb_NamedRockstar" field.</summary>
    public const int QueryDbNamedRockstarFieldNumber = 217534861;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_NamedRockstar QueryDbNamedRockstar {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbNamedRockstar ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_NamedRockstar) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbNamedRockstar;
      }
    }

    /// <summary>Field number for the "QueryDb_TypeWithEnum" field.</summary>
    public const int QueryDbTypeWithEnumFieldNumber = 390586478;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_TypeWithEnum QueryDbTypeWithEnum {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbTypeWithEnum ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_TypeWithEnum) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbTypeWithEnum;
      }
    }

    /// <summary>Field number for the "QueryDb_RockstarAlbum" field.</summary>
    public const int QueryDbRockstarAlbumFieldNumber = 411180685;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarAlbum QueryDbRockstarAlbum {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbRockstarAlbum ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarAlbum) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbRockstarAlbum;
      }
    }

    /// <summary>Field number for the "QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse" field.</summary>
    public const int QueryDbCustomSelectRockstarCustomSelectRockstarResponseFieldNumber = 428847863;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse QueryDbCustomSelectRockstarCustomSelectRockstarResponse {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbCustomSelectRockstarCustomSelectRockstarResponse ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbCustomSelectRockstarCustomSelectRockstarResponse;
      }
    }

    /// <summary>Field number for the "QueryDb_Rockstar" field.</summary>
    public const int QueryDbRockstarFieldNumber = 447773769;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar QueryDbRockstar {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbRockstar ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbRockstar;
      }
    }

    /// <summary>Field number for the "QueryDb_AllFields" field.</summary>
    public const int QueryDbAllFieldsFieldNumber = 473971172;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_AllFields QueryDbAllFields {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbAllFields ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_AllFields) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbAllFields;
      }
    }

    /// <summary>Field number for the "QueryDb_Rockstar_CustomRockstarSchema" field.</summary>
    public const int QueryDbRockstarCustomRockstarSchemaFieldNumber = 483328659;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstarSchema QueryDbRockstarCustomRockstarSchema {
      get { return subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstarSchema ? (global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstarSchema) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryDbRockstarCustomRockstarSchema;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryDbRockstarCustomRockstar = 1595516,
      QueryDbRockstarRockstarAlias = 95568396,
      QueryDbPagingTest = 110246772,
      QueryDbCustomSelectRockstar = 117530989,
      QueryDbMovie = 133134611,
      QueryDbRockstarReference = 139856298,
      QueryDbAdhoc = 193863048,
      QueryDbNamedRockstar = 217534861,
      QueryDbTypeWithEnum = 390586478,
      QueryDbRockstarAlbum = 411180685,
      QueryDbCustomSelectRockstarCustomSelectRockstarResponse = 428847863,
      QueryDbRockstar = 447773769,
      QueryDbAllFields = 473971172,
      QueryDbRockstarCustomRockstarSchema = 483328659,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryBase);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryBase other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Skip != other.Skip) return false;
      if (Take != other.Take) return false;
      if (OrderBy != other.OrderBy) return false;
      if (OrderByDesc != other.OrderByDesc) return false;
      if (Include != other.Include) return false;
      if (Fields != other.Fields) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(QueryDbRockstarCustomRockstar, other.QueryDbRockstarCustomRockstar)) return false;
      if (!object.Equals(QueryDbRockstarRockstarAlias, other.QueryDbRockstarRockstarAlias)) return false;
      if (!object.Equals(QueryDbPagingTest, other.QueryDbPagingTest)) return false;
      if (!object.Equals(QueryDbCustomSelectRockstar, other.QueryDbCustomSelectRockstar)) return false;
      if (!object.Equals(QueryDbMovie, other.QueryDbMovie)) return false;
      if (!object.Equals(QueryDbRockstarReference, other.QueryDbRockstarReference)) return false;
      if (!object.Equals(QueryDbAdhoc, other.QueryDbAdhoc)) return false;
      if (!object.Equals(QueryDbNamedRockstar, other.QueryDbNamedRockstar)) return false;
      if (!object.Equals(QueryDbTypeWithEnum, other.QueryDbTypeWithEnum)) return false;
      if (!object.Equals(QueryDbRockstarAlbum, other.QueryDbRockstarAlbum)) return false;
      if (!object.Equals(QueryDbCustomSelectRockstarCustomSelectRockstarResponse, other.QueryDbCustomSelectRockstarCustomSelectRockstarResponse)) return false;
      if (!object.Equals(QueryDbRockstar, other.QueryDbRockstar)) return false;
      if (!object.Equals(QueryDbAllFields, other.QueryDbAllFields)) return false;
      if (!object.Equals(QueryDbRockstarCustomRockstarSchema, other.QueryDbRockstarCustomRockstarSchema)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Skip != 0) hash ^= Skip.GetHashCode();
      if (Take != 0) hash ^= Take.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (OrderByDesc.Length != 0) hash ^= OrderByDesc.GetHashCode();
      if (Include.Length != 0) hash ^= Include.GetHashCode();
      if (Fields.Length != 0) hash ^= Fields.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstar) hash ^= QueryDbRockstarCustomRockstar.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarRockstarAlias) hash ^= QueryDbRockstarRockstarAlias.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbPagingTest) hash ^= QueryDbPagingTest.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbCustomSelectRockstar) hash ^= QueryDbCustomSelectRockstar.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbMovie) hash ^= QueryDbMovie.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarReference) hash ^= QueryDbRockstarReference.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbAdhoc) hash ^= QueryDbAdhoc.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbNamedRockstar) hash ^= QueryDbNamedRockstar.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbTypeWithEnum) hash ^= QueryDbTypeWithEnum.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarAlbum) hash ^= QueryDbRockstarAlbum.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbCustomSelectRockstarCustomSelectRockstarResponse) hash ^= QueryDbCustomSelectRockstarCustomSelectRockstarResponse.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstar) hash ^= QueryDbRockstar.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbAllFields) hash ^= QueryDbAllFields.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstarSchema) hash ^= QueryDbRockstarCustomRockstarSchema.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Skip != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Skip);
      }
      if (Take != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Take);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(OrderBy);
      }
      if (OrderByDesc.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(OrderByDesc);
      }
      if (Include.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Include);
      }
      if (Fields.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Fields);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstar) {
        output.WriteRawTag(226, 135, 139, 6);
        output.WriteMessage(QueryDbRockstarCustomRockstar);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarRockstarAlias) {
        output.WriteRawTag(226, 160, 200, 236, 2);
        output.WriteMessage(QueryDbRockstarRockstarAlias);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbPagingTest) {
        output.WriteRawTag(162, 183, 199, 164, 3);
        output.WriteMessage(QueryDbPagingTest);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbCustomSelectRockstar) {
        output.WriteRawTag(234, 150, 172, 192, 3);
        output.WriteMessage(QueryDbCustomSelectRockstar);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbMovie) {
        output.WriteRawTag(154, 145, 239, 251, 3);
        output.WriteMessage(QueryDbMovie);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarReference) {
        output.WriteRawTag(210, 154, 193, 149, 4);
        output.WriteMessage(QueryDbRockstarReference);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbAdhoc) {
        output.WriteRawTag(194, 216, 195, 227, 5);
        output.WriteMessage(QueryDbAdhoc);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbNamedRockstar) {
        output.WriteRawTag(234, 152, 234, 189, 6);
        output.WriteMessage(QueryDbNamedRockstar);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbTypeWithEnum) {
        output.WriteRawTag(242, 134, 252, 209, 11);
        output.WriteMessage(QueryDbTypeWithEnum);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarAlbum) {
        output.WriteRawTag(234, 232, 195, 160, 12);
        output.WriteMessage(QueryDbRockstarAlbum);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbCustomSelectRockstarCustomSelectRockstarResponse) {
        output.WriteRawTag(186, 175, 246, 227, 12);
        output.WriteMessage(QueryDbCustomSelectRockstarCustomSelectRockstarResponse);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstar) {
        output.WriteRawTag(202, 196, 143, 172, 13);
        output.WriteMessage(QueryDbRockstar);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbAllFields) {
        output.WriteRawTag(162, 158, 135, 144, 14);
        output.WriteMessage(QueryDbAllFields);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstarSchema) {
        output.WriteRawTag(154, 169, 224, 179, 14);
        output.WriteMessage(QueryDbRockstarCustomRockstarSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Skip != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Skip);
      }
      if (Take != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Take);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (OrderByDesc.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderByDesc);
      }
      if (Include.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Include);
      }
      if (Fields.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Fields);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstar) {
        size += 4 + pb::CodedOutputStream.ComputeMessageSize(QueryDbRockstarCustomRockstar);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarRockstarAlias) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbRockstarRockstarAlias);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbPagingTest) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbPagingTest);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbCustomSelectRockstar) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbCustomSelectRockstar);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbMovie) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbMovie);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarReference) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbRockstarReference);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbAdhoc) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbAdhoc);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbNamedRockstar) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbNamedRockstar);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbTypeWithEnum) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbTypeWithEnum);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarAlbum) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbRockstarAlbum);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbCustomSelectRockstarCustomSelectRockstarResponse) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbCustomSelectRockstarCustomSelectRockstarResponse);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstar) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbRockstar);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbAllFields) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbAllFields);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstarSchema) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryDbRockstarCustomRockstarSchema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryBase other) {
      if (other == null) {
        return;
      }
      if (other.Skip != 0) {
        Skip = other.Skip;
      }
      if (other.Take != 0) {
        Take = other.Take;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.OrderByDesc.Length != 0) {
        OrderByDesc = other.OrderByDesc;
      }
      if (other.Include.Length != 0) {
        Include = other.Include;
      }
      if (other.Fields.Length != 0) {
        Fields = other.Fields;
      }
      meta_.Add(other.meta_);
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryDbRockstarCustomRockstar:
          if (QueryDbRockstarCustomRockstar == null) {
            QueryDbRockstarCustomRockstar = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar();
          }
          QueryDbRockstarCustomRockstar.MergeFrom(other.QueryDbRockstarCustomRockstar);
          break;
        case SubtypeOneofCase.QueryDbRockstarRockstarAlias:
          if (QueryDbRockstarRockstarAlias == null) {
            QueryDbRockstarRockstarAlias = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_RockstarAlias();
          }
          QueryDbRockstarRockstarAlias.MergeFrom(other.QueryDbRockstarRockstarAlias);
          break;
        case SubtypeOneofCase.QueryDbPagingTest:
          if (QueryDbPagingTest == null) {
            QueryDbPagingTest = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_PagingTest();
          }
          QueryDbPagingTest.MergeFrom(other.QueryDbPagingTest);
          break;
        case SubtypeOneofCase.QueryDbCustomSelectRockstar:
          if (QueryDbCustomSelectRockstar == null) {
            QueryDbCustomSelectRockstar = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar();
          }
          QueryDbCustomSelectRockstar.MergeFrom(other.QueryDbCustomSelectRockstar);
          break;
        case SubtypeOneofCase.QueryDbMovie:
          if (QueryDbMovie == null) {
            QueryDbMovie = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie();
          }
          QueryDbMovie.MergeFrom(other.QueryDbMovie);
          break;
        case SubtypeOneofCase.QueryDbRockstarReference:
          if (QueryDbRockstarReference == null) {
            QueryDbRockstarReference = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference();
          }
          QueryDbRockstarReference.MergeFrom(other.QueryDbRockstarReference);
          break;
        case SubtypeOneofCase.QueryDbAdhoc:
          if (QueryDbAdhoc == null) {
            QueryDbAdhoc = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Adhoc();
          }
          QueryDbAdhoc.MergeFrom(other.QueryDbAdhoc);
          break;
        case SubtypeOneofCase.QueryDbNamedRockstar:
          if (QueryDbNamedRockstar == null) {
            QueryDbNamedRockstar = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_NamedRockstar();
          }
          QueryDbNamedRockstar.MergeFrom(other.QueryDbNamedRockstar);
          break;
        case SubtypeOneofCase.QueryDbTypeWithEnum:
          if (QueryDbTypeWithEnum == null) {
            QueryDbTypeWithEnum = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_TypeWithEnum();
          }
          QueryDbTypeWithEnum.MergeFrom(other.QueryDbTypeWithEnum);
          break;
        case SubtypeOneofCase.QueryDbRockstarAlbum:
          if (QueryDbRockstarAlbum == null) {
            QueryDbRockstarAlbum = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarAlbum();
          }
          QueryDbRockstarAlbum.MergeFrom(other.QueryDbRockstarAlbum);
          break;
        case SubtypeOneofCase.QueryDbCustomSelectRockstarCustomSelectRockstarResponse:
          if (QueryDbCustomSelectRockstarCustomSelectRockstarResponse == null) {
            QueryDbCustomSelectRockstarCustomSelectRockstarResponse = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse();
          }
          QueryDbCustomSelectRockstarCustomSelectRockstarResponse.MergeFrom(other.QueryDbCustomSelectRockstarCustomSelectRockstarResponse);
          break;
        case SubtypeOneofCase.QueryDbRockstar:
          if (QueryDbRockstar == null) {
            QueryDbRockstar = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar();
          }
          QueryDbRockstar.MergeFrom(other.QueryDbRockstar);
          break;
        case SubtypeOneofCase.QueryDbAllFields:
          if (QueryDbAllFields == null) {
            QueryDbAllFields = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_AllFields();
          }
          QueryDbAllFields.MergeFrom(other.QueryDbAllFields);
          break;
        case SubtypeOneofCase.QueryDbRockstarCustomRockstarSchema:
          if (QueryDbRockstarCustomRockstarSchema == null) {
            QueryDbRockstarCustomRockstarSchema = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstarSchema();
          }
          QueryDbRockstarCustomRockstarSchema.MergeFrom(other.QueryDbRockstarCustomRockstarSchema);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Skip = input.ReadInt32();
            break;
          }
          case 16: {
            Take = input.ReadInt32();
            break;
          }
          case 26: {
            OrderBy = input.ReadString();
            break;
          }
          case 34: {
            OrderByDesc = input.ReadString();
            break;
          }
          case 42: {
            Include = input.ReadString();
            break;
          }
          case 50: {
            Fields = input.ReadString();
            break;
          }
          case 58: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 12764130: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstar();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstar) {
              subBuilder.MergeFrom(QueryDbRockstarCustomRockstar);
            }
            input.ReadMessage(subBuilder);
            QueryDbRockstarCustomRockstar = subBuilder;
            break;
          }
          case 764547170: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_RockstarAlias subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_RockstarAlias();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarRockstarAlias) {
              subBuilder.MergeFrom(QueryDbRockstarRockstarAlias);
            }
            input.ReadMessage(subBuilder);
            QueryDbRockstarRockstarAlias = subBuilder;
            break;
          }
          case 881974178: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_PagingTest subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_PagingTest();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbPagingTest) {
              subBuilder.MergeFrom(QueryDbPagingTest);
            }
            input.ReadMessage(subBuilder);
            QueryDbPagingTest = subBuilder;
            break;
          }
          case 940247914: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbCustomSelectRockstar) {
              subBuilder.MergeFrom(QueryDbCustomSelectRockstar);
            }
            input.ReadMessage(subBuilder);
            QueryDbCustomSelectRockstar = subBuilder;
            break;
          }
          case 1065076890: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Movie();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbMovie) {
              subBuilder.MergeFrom(QueryDbMovie);
            }
            input.ReadMessage(subBuilder);
            QueryDbMovie = subBuilder;
            break;
          }
          case 1118850386: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarReference();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarReference) {
              subBuilder.MergeFrom(QueryDbRockstarReference);
            }
            input.ReadMessage(subBuilder);
            QueryDbRockstarReference = subBuilder;
            break;
          }
          case 1550904386: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Adhoc subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Adhoc();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbAdhoc) {
              subBuilder.MergeFrom(QueryDbAdhoc);
            }
            input.ReadMessage(subBuilder);
            QueryDbAdhoc = subBuilder;
            break;
          }
          case 1740278890: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_NamedRockstar subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_NamedRockstar();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbNamedRockstar) {
              subBuilder.MergeFrom(QueryDbNamedRockstar);
            }
            input.ReadMessage(subBuilder);
            QueryDbNamedRockstar = subBuilder;
            break;
          }
          case 3124691826: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_TypeWithEnum subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_TypeWithEnum();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbTypeWithEnum) {
              subBuilder.MergeFrom(QueryDbTypeWithEnum);
            }
            input.ReadMessage(subBuilder);
            QueryDbTypeWithEnum = subBuilder;
            break;
          }
          case 3289445482: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarAlbum subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_RockstarAlbum();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarAlbum) {
              subBuilder.MergeFrom(QueryDbRockstarAlbum);
            }
            input.ReadMessage(subBuilder);
            QueryDbRockstarAlbum = subBuilder;
            break;
          }
          case 3430782906: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbCustomSelectRockstarCustomSelectRockstarResponse) {
              subBuilder.MergeFrom(QueryDbCustomSelectRockstarCustomSelectRockstarResponse);
            }
            input.ReadMessage(subBuilder);
            QueryDbCustomSelectRockstarCustomSelectRockstarResponse = subBuilder;
            break;
          }
          case 3582190154: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstar) {
              subBuilder.MergeFrom(QueryDbRockstar);
            }
            input.ReadMessage(subBuilder);
            QueryDbRockstar = subBuilder;
            break;
          }
          case 3791769378: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_AllFields subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_AllFields();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbAllFields) {
              subBuilder.MergeFrom(QueryDbAllFields);
            }
            input.ReadMessage(subBuilder);
            QueryDbAllFields = subBuilder;
            break;
          }
          case 3866629274: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstarSchema subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryDb_Rockstar_CustomRockstarSchema();
            if (subtypeCase_ == SubtypeOneofCase.QueryDbRockstarCustomRockstarSchema) {
              subBuilder.MergeFrom(QueryDbRockstarCustomRockstarSchema);
            }
            input.ReadMessage(subBuilder);
            QueryDbRockstarCustomRockstarSchema = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryCaseInsensitiveOrderBy : pb::IMessage<QueryCaseInsensitiveOrderBy> {
    private static readonly pb::MessageParser<QueryCaseInsensitiveOrderBy> _parser = new pb::MessageParser<QueryCaseInsensitiveOrderBy>(() => new QueryCaseInsensitiveOrderBy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryCaseInsensitiveOrderBy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[49]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCaseInsensitiveOrderBy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCaseInsensitiveOrderBy(QueryCaseInsensitiveOrderBy other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCaseInsensitiveOrderBy Clone() {
      return new QueryCaseInsensitiveOrderBy(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryCaseInsensitiveOrderBy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryCaseInsensitiveOrderBy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryCaseInsensitiveOrderBy other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryChangeConnectionInfo : pb::IMessage<QueryChangeConnectionInfo> {
    private static readonly pb::MessageParser<QueryChangeConnectionInfo> _parser = new pb::MessageParser<QueryChangeConnectionInfo>(() => new QueryChangeConnectionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryChangeConnectionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[50]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryChangeConnectionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryChangeConnectionInfo(QueryChangeConnectionInfo other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryChangeConnectionInfo Clone() {
      return new QueryChangeConnectionInfo(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryChangeConnectionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryChangeConnectionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryChangeConnectionInfo other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class QueryChangeDb : pb::IMessage<QueryChangeDb> {
    private static readonly pb::MessageParser<QueryChangeDb> _parser = new pb::MessageParser<QueryChangeDb>(() => new QueryChangeDb());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryChangeDb> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[51]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryChangeDb() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryChangeDb(QueryChangeDb other) : this() {
      namedConnection_ = other.namedConnection_;
      connectionString_ = other.connectionString_;
      providerName_ = other.providerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryChangeDb Clone() {
      return new QueryChangeDb(this);
    }

    /// <summary>Field number for the "NamedConnection" field.</summary>
    public const int NamedConnectionFieldNumber = 1;
    private string namedConnection_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NamedConnection {
      get { return namedConnection_; }
      set {
        namedConnection_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConnectionString" field.</summary>
    public const int ConnectionStringFieldNumber = 2;
    private string connectionString_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConnectionString {
      get { return connectionString_; }
      set {
        connectionString_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProviderName" field.</summary>
    public const int ProviderNameFieldNumber = 3;
    private string providerName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProviderName {
      get { return providerName_; }
      set {
        providerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryChangeDb);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryChangeDb other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NamedConnection != other.NamedConnection) return false;
      if (ConnectionString != other.ConnectionString) return false;
      if (ProviderName != other.ProviderName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NamedConnection.Length != 0) hash ^= NamedConnection.GetHashCode();
      if (ConnectionString.Length != 0) hash ^= ConnectionString.GetHashCode();
      if (ProviderName.Length != 0) hash ^= ProviderName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NamedConnection.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NamedConnection);
      }
      if (ConnectionString.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ConnectionString);
      }
      if (ProviderName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ProviderName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NamedConnection.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NamedConnection);
      }
      if (ConnectionString.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConnectionString);
      }
      if (ProviderName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProviderName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryChangeDb other) {
      if (other == null) {
        return;
      }
      if (other.NamedConnection.Length != 0) {
        NamedConnection = other.NamedConnection;
      }
      if (other.ConnectionString.Length != 0) {
        ConnectionString = other.ConnectionString;
      }
      if (other.ProviderName.Length != 0) {
        ProviderName = other.ProviderName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NamedConnection = input.ReadString();
            break;
          }
          case 18: {
            ConnectionString = input.ReadString();
            break;
          }
          case 26: {
            ProviderName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryCustomRockstars : pb::IMessage<QueryCustomRockstars> {
    private static readonly pb::MessageParser<QueryCustomRockstars> _parser = new pb::MessageParser<QueryCustomRockstars>(() => new QueryCustomRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryCustomRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[52]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstars(QueryCustomRockstars other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstars Clone() {
      return new QueryCustomRockstars(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryCustomRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryCustomRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryCustomRockstars other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryCustomRockstarsFilter : pb::IMessage<QueryCustomRockstarsFilter> {
    private static readonly pb::MessageParser<QueryCustomRockstarsFilter> _parser = new pb::MessageParser<QueryCustomRockstarsFilter>(() => new QueryCustomRockstarsFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryCustomRockstarsFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[53]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsFilter(QueryCustomRockstarsFilter other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsFilter Clone() {
      return new QueryCustomRockstarsFilter(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryCustomRockstarsFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryCustomRockstarsFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryCustomRockstarsFilter other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryCustomRockstarsReferences : pb::IMessage<QueryCustomRockstarsReferences> {
    private static readonly pb::MessageParser<QueryCustomRockstarsReferences> _parser = new pb::MessageParser<QueryCustomRockstarsReferences>(() => new QueryCustomRockstarsReferences());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryCustomRockstarsReferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[54]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsReferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsReferences(QueryCustomRockstarsReferences other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsReferences Clone() {
      return new QueryCustomRockstarsReferences(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryCustomRockstarsReferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryCustomRockstarsReferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryCustomRockstarsReferences other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryCustomRockstarsSchema : pb::IMessage<QueryCustomRockstarsSchema> {
    private static readonly pb::MessageParser<QueryCustomRockstarsSchema> _parser = new pb::MessageParser<QueryCustomRockstarsSchema>(() => new QueryCustomRockstarsSchema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryCustomRockstarsSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[55]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsSchema(QueryCustomRockstarsSchema other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryCustomRockstarsSchema Clone() {
      return new QueryCustomRockstarsSchema(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryCustomRockstarsSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryCustomRockstarsSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryCustomRockstarsSchema other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_Adhoc : pb::IMessage<QueryDb_Adhoc> {
    private static readonly pb::MessageParser<QueryDb_Adhoc> _parser = new pb::MessageParser<QueryDb_Adhoc>(() => new QueryDb_Adhoc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_Adhoc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[56]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Adhoc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Adhoc(QueryDb_Adhoc other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryAdhoc:
          QueryAdhoc = other.QueryAdhoc.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Adhoc Clone() {
      return new QueryDb_Adhoc(this);
    }

    /// <summary>Field number for the "QueryAdhoc" field.</summary>
    public const int QueryAdhocFieldNumber = 91431949;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryAdhoc QueryAdhoc {
      get { return subtypeCase_ == SubtypeOneofCase.QueryAdhoc ? (global::ServiceStack.Extensions.Tests.Protoc.QueryAdhoc) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryAdhoc;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryAdhoc = 91431949,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_Adhoc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_Adhoc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryAdhoc, other.QueryAdhoc)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryAdhoc) hash ^= QueryAdhoc.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryAdhoc) {
        output.WriteRawTag(234, 192, 228, 220, 2);
        output.WriteMessage(QueryAdhoc);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryAdhoc) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryAdhoc);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_Adhoc other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryAdhoc:
          if (QueryAdhoc == null) {
            QueryAdhoc = new global::ServiceStack.Extensions.Tests.Protoc.QueryAdhoc();
          }
          QueryAdhoc.MergeFrom(other.QueryAdhoc);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 731455594: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryAdhoc subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryAdhoc();
            if (subtypeCase_ == SubtypeOneofCase.QueryAdhoc) {
              subBuilder.MergeFrom(QueryAdhoc);
            }
            input.ReadMessage(subBuilder);
            QueryAdhoc = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_AllFields : pb::IMessage<QueryDb_AllFields> {
    private static readonly pb::MessageParser<QueryDb_AllFields> _parser = new pb::MessageParser<QueryDb_AllFields>(() => new QueryDb_AllFields());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_AllFields> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[57]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_AllFields() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_AllFields(QueryDb_AllFields other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryAllFields:
          QueryAllFields = other.QueryAllFields.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_AllFields Clone() {
      return new QueryDb_AllFields(this);
    }

    /// <summary>Field number for the "QueryAllFields" field.</summary>
    public const int QueryAllFieldsFieldNumber = 524448297;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryAllFields QueryAllFields {
      get { return subtypeCase_ == SubtypeOneofCase.QueryAllFields ? (global::ServiceStack.Extensions.Tests.Protoc.QueryAllFields) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryAllFields;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryAllFields = 524448297,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_AllFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_AllFields other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryAllFields, other.QueryAllFields)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryAllFields) hash ^= QueryAllFields.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryAllFields) {
        output.WriteRawTag(202, 162, 206, 208, 15);
        output.WriteMessage(QueryAllFields);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryAllFields) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryAllFields);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_AllFields other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryAllFields:
          if (QueryAllFields == null) {
            QueryAllFields = new global::ServiceStack.Extensions.Tests.Protoc.QueryAllFields();
          }
          QueryAllFields.MergeFrom(other.QueryAllFields);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 4195586378: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryAllFields subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryAllFields();
            if (subtypeCase_ == SubtypeOneofCase.QueryAllFields) {
              subBuilder.MergeFrom(QueryAllFields);
            }
            input.ReadMessage(subBuilder);
            QueryAllFields = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_CustomSelectRockstar : pb::IMessage<QueryDb_CustomSelectRockstar> {
    private static readonly pb::MessageParser<QueryDb_CustomSelectRockstar> _parser = new pb::MessageParser<QueryDb_CustomSelectRockstar>(() => new QueryDb_CustomSelectRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_CustomSelectRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[58]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_CustomSelectRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_CustomSelectRockstar(QueryDb_CustomSelectRockstar other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelect:
          QueryJoinedRockstarAlbumsCustomSelect = other.QueryJoinedRockstarAlbumsCustomSelect.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_CustomSelectRockstar Clone() {
      return new QueryDb_CustomSelectRockstar(this);
    }

    /// <summary>Field number for the "QueryJoinedRockstarAlbumsCustomSelect" field.</summary>
    public const int QueryJoinedRockstarAlbumsCustomSelectFieldNumber = 141691829;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelect QueryJoinedRockstarAlbumsCustomSelect {
      get { return subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelect ? (global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelect) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelect;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryJoinedRockstarAlbumsCustomSelect = 141691829,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_CustomSelectRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_CustomSelectRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryJoinedRockstarAlbumsCustomSelect, other.QueryJoinedRockstarAlbumsCustomSelect)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelect) hash ^= QueryJoinedRockstarAlbumsCustomSelect.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelect) {
        output.WriteRawTag(170, 187, 193, 156, 4);
        output.WriteMessage(QueryJoinedRockstarAlbumsCustomSelect);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelect) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryJoinedRockstarAlbumsCustomSelect);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_CustomSelectRockstar other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelect:
          if (QueryJoinedRockstarAlbumsCustomSelect == null) {
            QueryJoinedRockstarAlbumsCustomSelect = new global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelect();
          }
          QueryJoinedRockstarAlbumsCustomSelect.MergeFrom(other.QueryJoinedRockstarAlbumsCustomSelect);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 1133534634: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelect subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelect();
            if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelect) {
              subBuilder.MergeFrom(QueryJoinedRockstarAlbumsCustomSelect);
            }
            input.ReadMessage(subBuilder);
            QueryJoinedRockstarAlbumsCustomSelect = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse : pb::IMessage<QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse> {
    private static readonly pb::MessageParser<QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse> _parser = new pb::MessageParser<QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse>(() => new QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[59]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse(QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelectResponse:
          QueryJoinedRockstarAlbumsCustomSelectResponse = other.QueryJoinedRockstarAlbumsCustomSelectResponse.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse Clone() {
      return new QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse(this);
    }

    /// <summary>Field number for the "QueryJoinedRockstarAlbumsCustomSelectResponse" field.</summary>
    public const int QueryJoinedRockstarAlbumsCustomSelectResponseFieldNumber = 536127599;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelectResponse QueryJoinedRockstarAlbumsCustomSelectResponse {
      get { return subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelectResponse ? (global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelectResponse) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelectResponse;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryJoinedRockstarAlbumsCustomSelectResponse = 536127599,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryJoinedRockstarAlbumsCustomSelectResponse, other.QueryJoinedRockstarAlbumsCustomSelectResponse)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelectResponse) hash ^= QueryJoinedRockstarAlbumsCustomSelectResponse.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelectResponse) {
        output.WriteRawTag(250, 134, 149, 253, 15);
        output.WriteMessage(QueryJoinedRockstarAlbumsCustomSelectResponse);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelectResponse) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryJoinedRockstarAlbumsCustomSelectResponse);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_CustomSelectRockstar_CustomSelectRockstarResponse other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelectResponse:
          if (QueryJoinedRockstarAlbumsCustomSelectResponse == null) {
            QueryJoinedRockstarAlbumsCustomSelectResponse = new global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelectResponse();
          }
          QueryJoinedRockstarAlbumsCustomSelectResponse.MergeFrom(other.QueryJoinedRockstarAlbumsCustomSelectResponse);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 4289020794: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelectResponse subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbumsCustomSelectResponse();
            if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbumsCustomSelectResponse) {
              subBuilder.MergeFrom(QueryJoinedRockstarAlbumsCustomSelectResponse);
            }
            input.ReadMessage(subBuilder);
            QueryJoinedRockstarAlbumsCustomSelectResponse = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_Movie : pb::IMessage<QueryDb_Movie> {
    private static readonly pb::MessageParser<QueryDb_Movie> _parser = new pb::MessageParser<QueryDb_Movie>(() => new QueryDb_Movie());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_Movie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[60]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Movie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Movie(QueryDb_Movie other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.SearchMovies:
          SearchMovies = other.SearchMovies.Clone();
          break;
        case SubtypeOneofCase.StreamMovies:
          StreamMovies = other.StreamMovies.Clone();
          break;
        case SubtypeOneofCase.QueryMovies:
          QueryMovies = other.QueryMovies.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Movie Clone() {
      return new QueryDb_Movie(this);
    }

    /// <summary>Field number for the "SearchMovies" field.</summary>
    public const int SearchMoviesFieldNumber = 205066215;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.SearchMovies SearchMovies {
      get { return subtypeCase_ == SubtypeOneofCase.SearchMovies ? (global::ServiceStack.Extensions.Tests.Protoc.SearchMovies) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.SearchMovies;
      }
    }

    /// <summary>Field number for the "StreamMovies" field.</summary>
    public const int StreamMoviesFieldNumber = 254558360;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.StreamMovies StreamMovies {
      get { return subtypeCase_ == SubtypeOneofCase.StreamMovies ? (global::ServiceStack.Extensions.Tests.Protoc.StreamMovies) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.StreamMovies;
      }
    }

    /// <summary>Field number for the "QueryMovies" field.</summary>
    public const int QueryMoviesFieldNumber = 510651567;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryMovies QueryMovies {
      get { return subtypeCase_ == SubtypeOneofCase.QueryMovies ? (global::ServiceStack.Extensions.Tests.Protoc.QueryMovies) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryMovies;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      SearchMovies = 205066215,
      StreamMovies = 254558360,
      QueryMovies = 510651567,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_Movie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_Movie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SearchMovies, other.SearchMovies)) return false;
      if (!object.Equals(StreamMovies, other.StreamMovies)) return false;
      if (!object.Equals(QueryMovies, other.QueryMovies)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.SearchMovies) hash ^= SearchMovies.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.StreamMovies) hash ^= StreamMovies.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryMovies) hash ^= QueryMovies.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.SearchMovies) {
        output.WriteRawTag(186, 254, 161, 142, 6);
        output.WriteMessage(SearchMovies);
      }
      if (subtypeCase_ == SubtypeOneofCase.StreamMovies) {
        output.WriteRawTag(194, 137, 136, 203, 7);
        output.WriteMessage(StreamMovies);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryMovies) {
        output.WriteRawTag(250, 202, 253, 155, 15);
        output.WriteMessage(QueryMovies);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.SearchMovies) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(SearchMovies);
      }
      if (subtypeCase_ == SubtypeOneofCase.StreamMovies) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(StreamMovies);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryMovies) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryMovies);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_Movie other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.SearchMovies:
          if (SearchMovies == null) {
            SearchMovies = new global::ServiceStack.Extensions.Tests.Protoc.SearchMovies();
          }
          SearchMovies.MergeFrom(other.SearchMovies);
          break;
        case SubtypeOneofCase.StreamMovies:
          if (StreamMovies == null) {
            StreamMovies = new global::ServiceStack.Extensions.Tests.Protoc.StreamMovies();
          }
          StreamMovies.MergeFrom(other.StreamMovies);
          break;
        case SubtypeOneofCase.QueryMovies:
          if (QueryMovies == null) {
            QueryMovies = new global::ServiceStack.Extensions.Tests.Protoc.QueryMovies();
          }
          QueryMovies.MergeFrom(other.QueryMovies);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 1640529722: {
            global::ServiceStack.Extensions.Tests.Protoc.SearchMovies subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.SearchMovies();
            if (subtypeCase_ == SubtypeOneofCase.SearchMovies) {
              subBuilder.MergeFrom(SearchMovies);
            }
            input.ReadMessage(subBuilder);
            SearchMovies = subBuilder;
            break;
          }
          case 2036466882: {
            global::ServiceStack.Extensions.Tests.Protoc.StreamMovies subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.StreamMovies();
            if (subtypeCase_ == SubtypeOneofCase.StreamMovies) {
              subBuilder.MergeFrom(StreamMovies);
            }
            input.ReadMessage(subBuilder);
            StreamMovies = subBuilder;
            break;
          }
          case 4085212538: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryMovies subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryMovies();
            if (subtypeCase_ == SubtypeOneofCase.QueryMovies) {
              subBuilder.MergeFrom(QueryMovies);
            }
            input.ReadMessage(subBuilder);
            QueryMovies = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_NamedRockstar : pb::IMessage<QueryDb_NamedRockstar> {
    private static readonly pb::MessageParser<QueryDb_NamedRockstar> _parser = new pb::MessageParser<QueryDb_NamedRockstar>(() => new QueryDb_NamedRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_NamedRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[61]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_NamedRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_NamedRockstar(QueryDb_NamedRockstar other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryNamedRockstars:
          QueryNamedRockstars = other.QueryNamedRockstars.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_NamedRockstar Clone() {
      return new QueryDb_NamedRockstar(this);
    }

    /// <summary>Field number for the "QueryNamedRockstars" field.</summary>
    public const int QueryNamedRockstarsFieldNumber = 294326335;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryNamedRockstars QueryNamedRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryNamedRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryNamedRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryNamedRockstars;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryNamedRockstars = 294326335,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_NamedRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_NamedRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryNamedRockstars, other.QueryNamedRockstars)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryNamedRockstars) hash ^= QueryNamedRockstars.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryNamedRockstars) {
        output.WriteRawTag(250, 131, 226, 226, 8);
        output.WriteMessage(QueryNamedRockstars);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryNamedRockstars) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryNamedRockstars);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_NamedRockstar other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryNamedRockstars:
          if (QueryNamedRockstars == null) {
            QueryNamedRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryNamedRockstars();
          }
          QueryNamedRockstars.MergeFrom(other.QueryNamedRockstars);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 2354610682: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryNamedRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryNamedRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryNamedRockstars) {
              subBuilder.MergeFrom(QueryNamedRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryNamedRockstars = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_PagingTest : pb::IMessage<QueryDb_PagingTest> {
    private static readonly pb::MessageParser<QueryDb_PagingTest> _parser = new pb::MessageParser<QueryDb_PagingTest>(() => new QueryDb_PagingTest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_PagingTest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[62]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_PagingTest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_PagingTest(QueryDb_PagingTest other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryPagingTest:
          QueryPagingTest = other.QueryPagingTest.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_PagingTest Clone() {
      return new QueryDb_PagingTest(this);
    }

    /// <summary>Field number for the "QueryPagingTest" field.</summary>
    public const int QueryPagingTestFieldNumber = 354250915;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryPagingTest QueryPagingTest {
      get { return subtypeCase_ == SubtypeOneofCase.QueryPagingTest ? (global::ServiceStack.Extensions.Tests.Protoc.QueryPagingTest) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryPagingTest;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryPagingTest = 354250915,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_PagingTest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_PagingTest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryPagingTest, other.QueryPagingTest)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryPagingTest) hash ^= QueryPagingTest.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryPagingTest) {
        output.WriteRawTag(154, 138, 174, 199, 10);
        output.WriteMessage(QueryPagingTest);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryPagingTest) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryPagingTest);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_PagingTest other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryPagingTest:
          if (QueryPagingTest == null) {
            QueryPagingTest = new global::ServiceStack.Extensions.Tests.Protoc.QueryPagingTest();
          }
          QueryPagingTest.MergeFrom(other.QueryPagingTest);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 2834007322: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryPagingTest subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryPagingTest();
            if (subtypeCase_ == SubtypeOneofCase.QueryPagingTest) {
              subBuilder.MergeFrom(QueryPagingTest);
            }
            input.ReadMessage(subBuilder);
            QueryPagingTest = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_Rockstar : pb::IMessage<QueryDb_Rockstar> {
    private static readonly pb::MessageParser<QueryDb_Rockstar> _parser = new pb::MessageParser<QueryDb_Rockstar>(() => new QueryDb_Rockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_Rockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[63]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar(QueryDb_Rockstar other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryRockstars:
          QueryRockstars = other.QueryRockstars.Clone();
          break;
        case SubtypeOneofCase.QueryChangeConnectionInfo:
          QueryChangeConnectionInfo = other.QueryChangeConnectionInfo.Clone();
          break;
        case SubtypeOneofCase.QueryRockstarsImplicit:
          QueryRockstarsImplicit = other.QueryRockstarsImplicit.Clone();
          break;
        case SubtypeOneofCase.QueryFieldRockstarsDynamic:
          QueryFieldRockstarsDynamic = other.QueryFieldRockstarsDynamic.Clone();
          break;
        case SubtypeOneofCase.QueryFieldRockstars:
          QueryFieldRockstars = other.QueryFieldRockstars.Clone();
          break;
        case SubtypeOneofCase.QueryOverridedRockstars:
          QueryOverridedRockstars = other.QueryOverridedRockstars.Clone();
          break;
        case SubtypeOneofCase.QueryRockstarsIFilter:
          QueryRockstarsIFilter = other.QueryRockstarsIFilter.Clone();
          break;
        case SubtypeOneofCase.QueryGetRockstars:
          QueryGetRockstars = other.QueryGetRockstars.Clone();
          break;
        case SubtypeOneofCase.QueryOrRockstars:
          QueryOrRockstars = other.QueryOrRockstars.Clone();
          break;
        case SubtypeOneofCase.QueryRockstarsFilter:
          QueryRockstarsFilter = other.QueryRockstarsFilter.Clone();
          break;
        case SubtypeOneofCase.QueryRockstarsConventions:
          QueryRockstarsConventions = other.QueryRockstarsConventions.Clone();
          break;
        case SubtypeOneofCase.QueryAdhocRockstars:
          QueryAdhocRockstars = other.QueryAdhocRockstars.Clone();
          break;
        case SubtypeOneofCase.QueryFieldsImplicitConventions:
          QueryFieldsImplicitConventions = other.QueryFieldsImplicitConventions.Clone();
          break;
        case SubtypeOneofCase.QueryRockstarFilters:
          QueryRockstarFilters = other.QueryRockstarFilters.Clone();
          break;
        case SubtypeOneofCase.QueryCaseInsensitiveOrderBy:
          QueryCaseInsensitiveOrderBy = other.QueryCaseInsensitiveOrderBy.Clone();
          break;
        case SubtypeOneofCase.QueryChangeDb:
          QueryChangeDb = other.QueryChangeDb.Clone();
          break;
        case SubtypeOneofCase.QueryGetRockstarsDynamic:
          QueryGetRockstarsDynamic = other.QueryGetRockstarsDynamic.Clone();
          break;
        case SubtypeOneofCase.QueryOrRockstarsFields:
          QueryOrRockstarsFields = other.QueryOrRockstarsFields.Clone();
          break;
        case SubtypeOneofCase.QueryUnknownRockstars:
          QueryUnknownRockstars = other.QueryUnknownRockstars.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar Clone() {
      return new QueryDb_Rockstar(this);
    }

    /// <summary>Field number for the "QueryRockstars" field.</summary>
    public const int QueryRockstarsFieldNumber = 10;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstars QueryRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstars;
      }
    }

    /// <summary>Field number for the "QueryChangeConnectionInfo" field.</summary>
    public const int QueryChangeConnectionInfoFieldNumber = 48758375;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo QueryChangeConnectionInfo {
      get { return subtypeCase_ == SubtypeOneofCase.QueryChangeConnectionInfo ? (global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryChangeConnectionInfo;
      }
    }

    /// <summary>Field number for the "QueryRockstarsImplicit" field.</summary>
    public const int QueryRockstarsImplicitFieldNumber = 49586902;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsImplicit QueryRockstarsImplicit {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarsImplicit ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsImplicit) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarsImplicit;
      }
    }

    /// <summary>Field number for the "QueryFieldRockstarsDynamic" field.</summary>
    public const int QueryFieldRockstarsDynamicFieldNumber = 69037208;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstarsDynamic QueryFieldRockstarsDynamic {
      get { return subtypeCase_ == SubtypeOneofCase.QueryFieldRockstarsDynamic ? (global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstarsDynamic) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryFieldRockstarsDynamic;
      }
    }

    /// <summary>Field number for the "QueryFieldRockstars" field.</summary>
    public const int QueryFieldRockstarsFieldNumber = 112815840;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstars QueryFieldRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryFieldRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryFieldRockstars;
      }
    }

    /// <summary>Field number for the "QueryOverridedRockstars" field.</summary>
    public const int QueryOverridedRockstarsFieldNumber = 120014899;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars QueryOverridedRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryOverridedRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryOverridedRockstars;
      }
    }

    /// <summary>Field number for the "QueryRockstarsIFilter" field.</summary>
    public const int QueryRockstarsIFilterFieldNumber = 148136160;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsIFilter QueryRockstarsIFilter {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarsIFilter ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsIFilter) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarsIFilter;
      }
    }

    /// <summary>Field number for the "QueryGetRockstars" field.</summary>
    public const int QueryGetRockstarsFieldNumber = 216997297;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstars QueryGetRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryGetRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryGetRockstars;
      }
    }

    /// <summary>Field number for the "QueryOrRockstars" field.</summary>
    public const int QueryOrRockstarsFieldNumber = 221913152;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstars QueryOrRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryOrRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryOrRockstars;
      }
    }

    /// <summary>Field number for the "QueryRockstarsFilter" field.</summary>
    public const int QueryRockstarsFilterFieldNumber = 261863748;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsFilter QueryRockstarsFilter {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarsFilter ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsFilter) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarsFilter;
      }
    }

    /// <summary>Field number for the "QueryRockstarsConventions" field.</summary>
    public const int QueryRockstarsConventionsFieldNumber = 314421004;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsConventions QueryRockstarsConventions {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarsConventions ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsConventions) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarsConventions;
      }
    }

    /// <summary>Field number for the "QueryAdhocRockstars" field.</summary>
    public const int QueryAdhocRockstarsFieldNumber = 327102818;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryAdhocRockstars QueryAdhocRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryAdhocRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryAdhocRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryAdhocRockstars;
      }
    }

    /// <summary>Field number for the "QueryFieldsImplicitConventions" field.</summary>
    public const int QueryFieldsImplicitConventionsFieldNumber = 355646391;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryFieldsImplicitConventions QueryFieldsImplicitConventions {
      get { return subtypeCase_ == SubtypeOneofCase.QueryFieldsImplicitConventions ? (global::ServiceStack.Extensions.Tests.Protoc.QueryFieldsImplicitConventions) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryFieldsImplicitConventions;
      }
    }

    /// <summary>Field number for the "QueryRockstarFilters" field.</summary>
    public const int QueryRockstarFiltersFieldNumber = 408217178;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarFilters QueryRockstarFilters {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarFilters ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarFilters) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarFilters;
      }
    }

    /// <summary>Field number for the "QueryCaseInsensitiveOrderBy" field.</summary>
    public const int QueryCaseInsensitiveOrderByFieldNumber = 425975099;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy QueryCaseInsensitiveOrderBy {
      get { return subtypeCase_ == SubtypeOneofCase.QueryCaseInsensitiveOrderBy ? (global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryCaseInsensitiveOrderBy;
      }
    }

    /// <summary>Field number for the "QueryChangeDb" field.</summary>
    public const int QueryChangeDbFieldNumber = 454373236;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryChangeDb QueryChangeDb {
      get { return subtypeCase_ == SubtypeOneofCase.QueryChangeDb ? (global::ServiceStack.Extensions.Tests.Protoc.QueryChangeDb) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryChangeDb;
      }
    }

    /// <summary>Field number for the "QueryGetRockstarsDynamic" field.</summary>
    public const int QueryGetRockstarsDynamicFieldNumber = 487926813;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstarsDynamic QueryGetRockstarsDynamic {
      get { return subtypeCase_ == SubtypeOneofCase.QueryGetRockstarsDynamic ? (global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstarsDynamic) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryGetRockstarsDynamic;
      }
    }

    /// <summary>Field number for the "QueryOrRockstarsFields" field.</summary>
    public const int QueryOrRockstarsFieldsFieldNumber = 527268965;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstarsFields QueryOrRockstarsFields {
      get { return subtypeCase_ == SubtypeOneofCase.QueryOrRockstarsFields ? (global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstarsFields) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryOrRockstarsFields;
      }
    }

    /// <summary>Field number for the "QueryUnknownRockstars" field.</summary>
    public const int QueryUnknownRockstarsFieldNumber = 527646846;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryUnknownRockstars QueryUnknownRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryUnknownRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryUnknownRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryUnknownRockstars;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryRockstars = 10,
      QueryChangeConnectionInfo = 48758375,
      QueryRockstarsImplicit = 49586902,
      QueryFieldRockstarsDynamic = 69037208,
      QueryFieldRockstars = 112815840,
      QueryOverridedRockstars = 120014899,
      QueryRockstarsIFilter = 148136160,
      QueryGetRockstars = 216997297,
      QueryOrRockstars = 221913152,
      QueryRockstarsFilter = 261863748,
      QueryRockstarsConventions = 314421004,
      QueryAdhocRockstars = 327102818,
      QueryFieldsImplicitConventions = 355646391,
      QueryRockstarFilters = 408217178,
      QueryCaseInsensitiveOrderBy = 425975099,
      QueryChangeDb = 454373236,
      QueryGetRockstarsDynamic = 487926813,
      QueryOrRockstarsFields = 527268965,
      QueryUnknownRockstars = 527646846,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_Rockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_Rockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryRockstars, other.QueryRockstars)) return false;
      if (!object.Equals(QueryChangeConnectionInfo, other.QueryChangeConnectionInfo)) return false;
      if (!object.Equals(QueryRockstarsImplicit, other.QueryRockstarsImplicit)) return false;
      if (!object.Equals(QueryFieldRockstarsDynamic, other.QueryFieldRockstarsDynamic)) return false;
      if (!object.Equals(QueryFieldRockstars, other.QueryFieldRockstars)) return false;
      if (!object.Equals(QueryOverridedRockstars, other.QueryOverridedRockstars)) return false;
      if (!object.Equals(QueryRockstarsIFilter, other.QueryRockstarsIFilter)) return false;
      if (!object.Equals(QueryGetRockstars, other.QueryGetRockstars)) return false;
      if (!object.Equals(QueryOrRockstars, other.QueryOrRockstars)) return false;
      if (!object.Equals(QueryRockstarsFilter, other.QueryRockstarsFilter)) return false;
      if (!object.Equals(QueryRockstarsConventions, other.QueryRockstarsConventions)) return false;
      if (!object.Equals(QueryAdhocRockstars, other.QueryAdhocRockstars)) return false;
      if (!object.Equals(QueryFieldsImplicitConventions, other.QueryFieldsImplicitConventions)) return false;
      if (!object.Equals(QueryRockstarFilters, other.QueryRockstarFilters)) return false;
      if (!object.Equals(QueryCaseInsensitiveOrderBy, other.QueryCaseInsensitiveOrderBy)) return false;
      if (!object.Equals(QueryChangeDb, other.QueryChangeDb)) return false;
      if (!object.Equals(QueryGetRockstarsDynamic, other.QueryGetRockstarsDynamic)) return false;
      if (!object.Equals(QueryOrRockstarsFields, other.QueryOrRockstarsFields)) return false;
      if (!object.Equals(QueryUnknownRockstars, other.QueryUnknownRockstars)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstars) hash ^= QueryRockstars.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryChangeConnectionInfo) hash ^= QueryChangeConnectionInfo.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsImplicit) hash ^= QueryRockstarsImplicit.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryFieldRockstarsDynamic) hash ^= QueryFieldRockstarsDynamic.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryFieldRockstars) hash ^= QueryFieldRockstars.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedRockstars) hash ^= QueryOverridedRockstars.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsIFilter) hash ^= QueryRockstarsIFilter.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryGetRockstars) hash ^= QueryGetRockstars.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryOrRockstars) hash ^= QueryOrRockstars.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsFilter) hash ^= QueryRockstarsFilter.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsConventions) hash ^= QueryRockstarsConventions.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryAdhocRockstars) hash ^= QueryAdhocRockstars.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryFieldsImplicitConventions) hash ^= QueryFieldsImplicitConventions.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarFilters) hash ^= QueryRockstarFilters.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryCaseInsensitiveOrderBy) hash ^= QueryCaseInsensitiveOrderBy.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryChangeDb) hash ^= QueryChangeDb.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryGetRockstarsDynamic) hash ^= QueryGetRockstarsDynamic.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryOrRockstarsFields) hash ^= QueryOrRockstarsFields.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryUnknownRockstars) hash ^= QueryUnknownRockstars.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstars) {
        output.WriteRawTag(82);
        output.WriteMessage(QueryRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryChangeConnectionInfo) {
        output.WriteRawTag(186, 230, 255, 185, 1);
        output.WriteMessage(QueryChangeConnectionInfo);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsImplicit) {
        output.WriteRawTag(178, 173, 148, 189, 1);
        output.WriteMessage(QueryRockstarsImplicit);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryFieldRockstarsDynamic) {
        output.WriteRawTag(194, 201, 173, 135, 2);
        output.WriteMessage(QueryFieldRockstarsDynamic);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryFieldRockstars) {
        output.WriteRawTag(130, 238, 173, 174, 3);
        output.WriteMessage(QueryFieldRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedRockstars) {
        output.WriteRawTag(154, 131, 233, 201, 3);
        output.WriteMessage(QueryOverridedRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsIFilter) {
        output.WriteRawTag(130, 142, 140, 181, 4);
        output.WriteMessage(QueryRockstarsIFilter);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryGetRockstars) {
        output.WriteRawTag(138, 219, 227, 187, 6);
        output.WriteMessage(QueryGetRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOrRockstars) {
        output.WriteRawTag(130, 132, 196, 206, 6);
        output.WriteMessage(QueryOrRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsFilter) {
        output.WriteRawTag(162, 148, 247, 230, 7);
        output.WriteMessage(QueryRockstarsFilter);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsConventions) {
        output.WriteRawTag(226, 240, 181, 175, 9);
        output.WriteMessage(QueryRockstarsConventions);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryAdhocRockstars) {
        output.WriteRawTag(146, 150, 230, 223, 9);
        output.WriteMessage(QueryAdhocRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryFieldsImplicitConventions) {
        output.WriteRawTag(186, 187, 215, 204, 10);
        output.WriteMessage(QueryFieldsImplicitConventions);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarFilters) {
        output.WriteRawTag(210, 229, 156, 149, 12);
        output.WriteMessage(QueryRockstarFilters);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryCaseInsensitiveOrderBy) {
        output.WriteRawTag(218, 211, 251, 216, 12);
        output.WriteMessage(QueryCaseInsensitiveOrderBy);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryChangeDb) {
        output.WriteRawTag(162, 247, 165, 197, 13);
        output.WriteMessage(QueryChangeDb);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryGetRockstarsDynamic) {
        output.WriteRawTag(234, 193, 165, 197, 14);
        output.WriteMessage(QueryGetRockstarsDynamic);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOrRockstarsFields) {
        output.WriteRawTag(170, 198, 175, 219, 15);
        output.WriteMessage(QueryOrRockstarsFields);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryUnknownRockstars) {
        output.WriteRawTag(242, 135, 232, 220, 15);
        output.WriteMessage(QueryUnknownRockstars);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstars) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryChangeConnectionInfo) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryChangeConnectionInfo);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsImplicit) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarsImplicit);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryFieldRockstarsDynamic) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryFieldRockstarsDynamic);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryFieldRockstars) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryFieldRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedRockstars) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryOverridedRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsIFilter) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarsIFilter);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryGetRockstars) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryGetRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOrRockstars) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryOrRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsFilter) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarsFilter);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsConventions) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarsConventions);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryAdhocRockstars) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryAdhocRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryFieldsImplicitConventions) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryFieldsImplicitConventions);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarFilters) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarFilters);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryCaseInsensitiveOrderBy) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryCaseInsensitiveOrderBy);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryChangeDb) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryChangeDb);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryGetRockstarsDynamic) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryGetRockstarsDynamic);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOrRockstarsFields) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryOrRockstarsFields);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryUnknownRockstars) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryUnknownRockstars);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_Rockstar other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryRockstars:
          if (QueryRockstars == null) {
            QueryRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstars();
          }
          QueryRockstars.MergeFrom(other.QueryRockstars);
          break;
        case SubtypeOneofCase.QueryChangeConnectionInfo:
          if (QueryChangeConnectionInfo == null) {
            QueryChangeConnectionInfo = new global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo();
          }
          QueryChangeConnectionInfo.MergeFrom(other.QueryChangeConnectionInfo);
          break;
        case SubtypeOneofCase.QueryRockstarsImplicit:
          if (QueryRockstarsImplicit == null) {
            QueryRockstarsImplicit = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsImplicit();
          }
          QueryRockstarsImplicit.MergeFrom(other.QueryRockstarsImplicit);
          break;
        case SubtypeOneofCase.QueryFieldRockstarsDynamic:
          if (QueryFieldRockstarsDynamic == null) {
            QueryFieldRockstarsDynamic = new global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstarsDynamic();
          }
          QueryFieldRockstarsDynamic.MergeFrom(other.QueryFieldRockstarsDynamic);
          break;
        case SubtypeOneofCase.QueryFieldRockstars:
          if (QueryFieldRockstars == null) {
            QueryFieldRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstars();
          }
          QueryFieldRockstars.MergeFrom(other.QueryFieldRockstars);
          break;
        case SubtypeOneofCase.QueryOverridedRockstars:
          if (QueryOverridedRockstars == null) {
            QueryOverridedRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars();
          }
          QueryOverridedRockstars.MergeFrom(other.QueryOverridedRockstars);
          break;
        case SubtypeOneofCase.QueryRockstarsIFilter:
          if (QueryRockstarsIFilter == null) {
            QueryRockstarsIFilter = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsIFilter();
          }
          QueryRockstarsIFilter.MergeFrom(other.QueryRockstarsIFilter);
          break;
        case SubtypeOneofCase.QueryGetRockstars:
          if (QueryGetRockstars == null) {
            QueryGetRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstars();
          }
          QueryGetRockstars.MergeFrom(other.QueryGetRockstars);
          break;
        case SubtypeOneofCase.QueryOrRockstars:
          if (QueryOrRockstars == null) {
            QueryOrRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstars();
          }
          QueryOrRockstars.MergeFrom(other.QueryOrRockstars);
          break;
        case SubtypeOneofCase.QueryRockstarsFilter:
          if (QueryRockstarsFilter == null) {
            QueryRockstarsFilter = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsFilter();
          }
          QueryRockstarsFilter.MergeFrom(other.QueryRockstarsFilter);
          break;
        case SubtypeOneofCase.QueryRockstarsConventions:
          if (QueryRockstarsConventions == null) {
            QueryRockstarsConventions = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsConventions();
          }
          QueryRockstarsConventions.MergeFrom(other.QueryRockstarsConventions);
          break;
        case SubtypeOneofCase.QueryAdhocRockstars:
          if (QueryAdhocRockstars == null) {
            QueryAdhocRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryAdhocRockstars();
          }
          QueryAdhocRockstars.MergeFrom(other.QueryAdhocRockstars);
          break;
        case SubtypeOneofCase.QueryFieldsImplicitConventions:
          if (QueryFieldsImplicitConventions == null) {
            QueryFieldsImplicitConventions = new global::ServiceStack.Extensions.Tests.Protoc.QueryFieldsImplicitConventions();
          }
          QueryFieldsImplicitConventions.MergeFrom(other.QueryFieldsImplicitConventions);
          break;
        case SubtypeOneofCase.QueryRockstarFilters:
          if (QueryRockstarFilters == null) {
            QueryRockstarFilters = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarFilters();
          }
          QueryRockstarFilters.MergeFrom(other.QueryRockstarFilters);
          break;
        case SubtypeOneofCase.QueryCaseInsensitiveOrderBy:
          if (QueryCaseInsensitiveOrderBy == null) {
            QueryCaseInsensitiveOrderBy = new global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy();
          }
          QueryCaseInsensitiveOrderBy.MergeFrom(other.QueryCaseInsensitiveOrderBy);
          break;
        case SubtypeOneofCase.QueryChangeDb:
          if (QueryChangeDb == null) {
            QueryChangeDb = new global::ServiceStack.Extensions.Tests.Protoc.QueryChangeDb();
          }
          QueryChangeDb.MergeFrom(other.QueryChangeDb);
          break;
        case SubtypeOneofCase.QueryGetRockstarsDynamic:
          if (QueryGetRockstarsDynamic == null) {
            QueryGetRockstarsDynamic = new global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstarsDynamic();
          }
          QueryGetRockstarsDynamic.MergeFrom(other.QueryGetRockstarsDynamic);
          break;
        case SubtypeOneofCase.QueryOrRockstarsFields:
          if (QueryOrRockstarsFields == null) {
            QueryOrRockstarsFields = new global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstarsFields();
          }
          QueryOrRockstarsFields.MergeFrom(other.QueryOrRockstarsFields);
          break;
        case SubtypeOneofCase.QueryUnknownRockstars:
          if (QueryUnknownRockstars == null) {
            QueryUnknownRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryUnknownRockstars();
          }
          QueryUnknownRockstars.MergeFrom(other.QueryUnknownRockstars);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 82: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstars) {
              subBuilder.MergeFrom(QueryRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryRockstars = subBuilder;
            break;
          }
          case 390067002: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryChangeConnectionInfo();
            if (subtypeCase_ == SubtypeOneofCase.QueryChangeConnectionInfo) {
              subBuilder.MergeFrom(QueryChangeConnectionInfo);
            }
            input.ReadMessage(subBuilder);
            QueryChangeConnectionInfo = subBuilder;
            break;
          }
          case 396695218: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsImplicit subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsImplicit();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsImplicit) {
              subBuilder.MergeFrom(QueryRockstarsImplicit);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarsImplicit = subBuilder;
            break;
          }
          case 552297666: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstarsDynamic subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstarsDynamic();
            if (subtypeCase_ == SubtypeOneofCase.QueryFieldRockstarsDynamic) {
              subBuilder.MergeFrom(QueryFieldRockstarsDynamic);
            }
            input.ReadMessage(subBuilder);
            QueryFieldRockstarsDynamic = subBuilder;
            break;
          }
          case 902526722: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryFieldRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryFieldRockstars) {
              subBuilder.MergeFrom(QueryFieldRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryFieldRockstars = subBuilder;
            break;
          }
          case 960119194: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryOverridedRockstars) {
              subBuilder.MergeFrom(QueryOverridedRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryOverridedRockstars = subBuilder;
            break;
          }
          case 1185089282: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsIFilter subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsIFilter();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsIFilter) {
              subBuilder.MergeFrom(QueryRockstarsIFilter);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarsIFilter = subBuilder;
            break;
          }
          case 1735978378: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryGetRockstars) {
              subBuilder.MergeFrom(QueryGetRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryGetRockstars = subBuilder;
            break;
          }
          case 1775305218: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryOrRockstars) {
              subBuilder.MergeFrom(QueryOrRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryOrRockstars = subBuilder;
            break;
          }
          case 2094909986: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsFilter subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsFilter();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsFilter) {
              subBuilder.MergeFrom(QueryRockstarsFilter);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarsFilter = subBuilder;
            break;
          }
          case 2515368034: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsConventions subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsConventions();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsConventions) {
              subBuilder.MergeFrom(QueryRockstarsConventions);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarsConventions = subBuilder;
            break;
          }
          case 2616822546: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryAdhocRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryAdhocRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryAdhocRockstars) {
              subBuilder.MergeFrom(QueryAdhocRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryAdhocRockstars = subBuilder;
            break;
          }
          case 2845171130: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryFieldsImplicitConventions subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryFieldsImplicitConventions();
            if (subtypeCase_ == SubtypeOneofCase.QueryFieldsImplicitConventions) {
              subBuilder.MergeFrom(QueryFieldsImplicitConventions);
            }
            input.ReadMessage(subBuilder);
            QueryFieldsImplicitConventions = subBuilder;
            break;
          }
          case 3265737426: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarFilters subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarFilters();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarFilters) {
              subBuilder.MergeFrom(QueryRockstarFilters);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarFilters = subBuilder;
            break;
          }
          case 3407800794: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryCaseInsensitiveOrderBy();
            if (subtypeCase_ == SubtypeOneofCase.QueryCaseInsensitiveOrderBy) {
              subBuilder.MergeFrom(QueryCaseInsensitiveOrderBy);
            }
            input.ReadMessage(subBuilder);
            QueryCaseInsensitiveOrderBy = subBuilder;
            break;
          }
          case 3634985890: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryChangeDb subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryChangeDb();
            if (subtypeCase_ == SubtypeOneofCase.QueryChangeDb) {
              subBuilder.MergeFrom(QueryChangeDb);
            }
            input.ReadMessage(subBuilder);
            QueryChangeDb = subBuilder;
            break;
          }
          case 3903414506: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstarsDynamic subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryGetRockstarsDynamic();
            if (subtypeCase_ == SubtypeOneofCase.QueryGetRockstarsDynamic) {
              subBuilder.MergeFrom(QueryGetRockstarsDynamic);
            }
            input.ReadMessage(subBuilder);
            QueryGetRockstarsDynamic = subBuilder;
            break;
          }
          case 4218151722: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstarsFields subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryOrRockstarsFields();
            if (subtypeCase_ == SubtypeOneofCase.QueryOrRockstarsFields) {
              subBuilder.MergeFrom(QueryOrRockstarsFields);
            }
            input.ReadMessage(subBuilder);
            QueryOrRockstarsFields = subBuilder;
            break;
          }
          case 4221174770: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryUnknownRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryUnknownRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryUnknownRockstars) {
              subBuilder.MergeFrom(QueryUnknownRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryUnknownRockstars = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_RockstarAlbum : pb::IMessage<QueryDb_RockstarAlbum> {
    private static readonly pb::MessageParser<QueryDb_RockstarAlbum> _parser = new pb::MessageParser<QueryDb_RockstarAlbum>(() => new QueryDb_RockstarAlbum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_RockstarAlbum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[64]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_RockstarAlbum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_RockstarAlbum(QueryDb_RockstarAlbum other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryRockstarAlbums:
          QueryRockstarAlbums = other.QueryRockstarAlbums.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_RockstarAlbum Clone() {
      return new QueryDb_RockstarAlbum(this);
    }

    /// <summary>Field number for the "QueryRockstarAlbums" field.</summary>
    public const int QueryRockstarAlbumsFieldNumber = 497413094;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbums QueryRockstarAlbums {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbums ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbums) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarAlbums;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryRockstarAlbums = 497413094,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_RockstarAlbum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_RockstarAlbum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryRockstarAlbums, other.QueryRockstarAlbums)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbums) hash ^= QueryRockstarAlbums.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbums) {
        output.WriteRawTag(178, 190, 189, 233, 14);
        output.WriteMessage(QueryRockstarAlbums);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbums) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarAlbums);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_RockstarAlbum other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryRockstarAlbums:
          if (QueryRockstarAlbums == null) {
            QueryRockstarAlbums = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbums();
          }
          QueryRockstarAlbums.MergeFrom(other.QueryRockstarAlbums);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 3979304754: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbums subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbums();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbums) {
              subBuilder.MergeFrom(QueryRockstarAlbums);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarAlbums = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_RockstarReference : pb::IMessage<QueryDb_RockstarReference> {
    private static readonly pb::MessageParser<QueryDb_RockstarReference> _parser = new pb::MessageParser<QueryDb_RockstarReference>(() => new QueryDb_RockstarReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_RockstarReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[65]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_RockstarReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_RockstarReference(QueryDb_RockstarReference other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryRockstarsWithReferences:
          QueryRockstarsWithReferences = other.QueryRockstarsWithReferences.Clone();
          break;
        case SubtypeOneofCase.QueryCustomRockstarsReferences:
          QueryCustomRockstarsReferences = other.QueryCustomRockstarsReferences.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_RockstarReference Clone() {
      return new QueryDb_RockstarReference(this);
    }

    /// <summary>Field number for the "QueryRockstarsWithReferences" field.</summary>
    public const int QueryRockstarsWithReferencesFieldNumber = 203511396;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsWithReferences QueryRockstarsWithReferences {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarsWithReferences ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsWithReferences) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarsWithReferences;
      }
    }

    /// <summary>Field number for the "QueryCustomRockstarsReferences" field.</summary>
    public const int QueryCustomRockstarsReferencesFieldNumber = 376893524;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences QueryCustomRockstarsReferences {
      get { return subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsReferences ? (global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryCustomRockstarsReferences;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryRockstarsWithReferences = 203511396,
      QueryCustomRockstarsReferences = 376893524,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_RockstarReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_RockstarReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryRockstarsWithReferences, other.QueryRockstarsWithReferences)) return false;
      if (!object.Equals(QueryCustomRockstarsReferences, other.QueryCustomRockstarsReferences)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsWithReferences) hash ^= QueryRockstarsWithReferences.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsReferences) hash ^= QueryCustomRockstarsReferences.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsWithReferences) {
        output.WriteRawTag(162, 230, 170, 136, 6);
        output.WriteMessage(QueryRockstarsWithReferences);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsReferences) {
        output.WriteRawTag(162, 133, 222, 157, 11);
        output.WriteMessage(QueryCustomRockstarsReferences);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsWithReferences) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarsWithReferences);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsReferences) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryCustomRockstarsReferences);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_RockstarReference other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryRockstarsWithReferences:
          if (QueryRockstarsWithReferences == null) {
            QueryRockstarsWithReferences = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsWithReferences();
          }
          QueryRockstarsWithReferences.MergeFrom(other.QueryRockstarsWithReferences);
          break;
        case SubtypeOneofCase.QueryCustomRockstarsReferences:
          if (QueryCustomRockstarsReferences == null) {
            QueryCustomRockstarsReferences = new global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences();
          }
          QueryCustomRockstarsReferences.MergeFrom(other.QueryCustomRockstarsReferences);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 1628091170: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsWithReferences subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarsWithReferences();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarsWithReferences) {
              subBuilder.MergeFrom(QueryRockstarsWithReferences);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarsWithReferences = subBuilder;
            break;
          }
          case 3015148194: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsReferences();
            if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsReferences) {
              subBuilder.MergeFrom(QueryCustomRockstarsReferences);
            }
            input.ReadMessage(subBuilder);
            QueryCustomRockstarsReferences = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_Rockstar_CustomRockstar : pb::IMessage<QueryDb_Rockstar_CustomRockstar> {
    private static readonly pb::MessageParser<QueryDb_Rockstar_CustomRockstar> _parser = new pb::MessageParser<QueryDb_Rockstar_CustomRockstar>(() => new QueryDb_Rockstar_CustomRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_Rockstar_CustomRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[66]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_CustomRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_CustomRockstar(QueryDb_Rockstar_CustomRockstar other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryCustomRockstars:
          QueryCustomRockstars = other.QueryCustomRockstars.Clone();
          break;
        case SubtypeOneofCase.QueryJoinedRockstarAlbums:
          QueryJoinedRockstarAlbums = other.QueryJoinedRockstarAlbums.Clone();
          break;
        case SubtypeOneofCase.QueryCustomRockstarsFilter:
          QueryCustomRockstarsFilter = other.QueryCustomRockstarsFilter.Clone();
          break;
        case SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin:
          QueryRockstarAlbumsCustomLeftJoin = other.QueryRockstarAlbumsCustomLeftJoin.Clone();
          break;
        case SubtypeOneofCase.QueryRockstarAlbumsImplicit:
          QueryRockstarAlbumsImplicit = other.QueryRockstarAlbumsImplicit.Clone();
          break;
        case SubtypeOneofCase.QueryOverridedCustomRockstars:
          QueryOverridedCustomRockstars = other.QueryOverridedCustomRockstars.Clone();
          break;
        case SubtypeOneofCase.QueryRockstarAlbumsLeftJoin:
          QueryRockstarAlbumsLeftJoin = other.QueryRockstarAlbumsLeftJoin.Clone();
          break;
        case SubtypeOneofCase.QueryMultiJoinRockstar:
          QueryMultiJoinRockstar = other.QueryMultiJoinRockstar.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_CustomRockstar Clone() {
      return new QueryDb_Rockstar_CustomRockstar(this);
    }

    /// <summary>Field number for the "QueryCustomRockstars" field.</summary>
    public const int QueryCustomRockstarsFieldNumber = 24502909;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstars QueryCustomRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryCustomRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryCustomRockstars;
      }
    }

    /// <summary>Field number for the "QueryJoinedRockstarAlbums" field.</summary>
    public const int QueryJoinedRockstarAlbumsFieldNumber = 149576717;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbums QueryJoinedRockstarAlbums {
      get { return subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbums ? (global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbums) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryJoinedRockstarAlbums;
      }
    }

    /// <summary>Field number for the "QueryCustomRockstarsFilter" field.</summary>
    public const int QueryCustomRockstarsFilterFieldNumber = 227679611;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsFilter QueryCustomRockstarsFilter {
      get { return subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsFilter ? (global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsFilter) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryCustomRockstarsFilter;
      }
    }

    /// <summary>Field number for the "QueryRockstarAlbumsCustomLeftJoin" field.</summary>
    public const int QueryRockstarAlbumsCustomLeftJoinFieldNumber = 396185863;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin QueryRockstarAlbumsCustomLeftJoin {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin;
      }
    }

    /// <summary>Field number for the "QueryRockstarAlbumsImplicit" field.</summary>
    public const int QueryRockstarAlbumsImplicitFieldNumber = 415628851;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsImplicit QueryRockstarAlbumsImplicit {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsImplicit ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsImplicit) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarAlbumsImplicit;
      }
    }

    /// <summary>Field number for the "QueryOverridedCustomRockstars" field.</summary>
    public const int QueryOverridedCustomRockstarsFieldNumber = 442785347;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars QueryOverridedCustomRockstars {
      get { return subtypeCase_ == SubtypeOneofCase.QueryOverridedCustomRockstars ? (global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryOverridedCustomRockstars;
      }
    }

    /// <summary>Field number for the "QueryRockstarAlbumsLeftJoin" field.</summary>
    public const int QueryRockstarAlbumsLeftJoinFieldNumber = 461151229;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsLeftJoin QueryRockstarAlbumsLeftJoin {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsLeftJoin ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsLeftJoin) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarAlbumsLeftJoin;
      }
    }

    /// <summary>Field number for the "QueryMultiJoinRockstar" field.</summary>
    public const int QueryMultiJoinRockstarFieldNumber = 467458623;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryMultiJoinRockstar QueryMultiJoinRockstar {
      get { return subtypeCase_ == SubtypeOneofCase.QueryMultiJoinRockstar ? (global::ServiceStack.Extensions.Tests.Protoc.QueryMultiJoinRockstar) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryMultiJoinRockstar;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryCustomRockstars = 24502909,
      QueryJoinedRockstarAlbums = 149576717,
      QueryCustomRockstarsFilter = 227679611,
      QueryRockstarAlbumsCustomLeftJoin = 396185863,
      QueryRockstarAlbumsImplicit = 415628851,
      QueryOverridedCustomRockstars = 442785347,
      QueryRockstarAlbumsLeftJoin = 461151229,
      QueryMultiJoinRockstar = 467458623,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_Rockstar_CustomRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_Rockstar_CustomRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryCustomRockstars, other.QueryCustomRockstars)) return false;
      if (!object.Equals(QueryJoinedRockstarAlbums, other.QueryJoinedRockstarAlbums)) return false;
      if (!object.Equals(QueryCustomRockstarsFilter, other.QueryCustomRockstarsFilter)) return false;
      if (!object.Equals(QueryRockstarAlbumsCustomLeftJoin, other.QueryRockstarAlbumsCustomLeftJoin)) return false;
      if (!object.Equals(QueryRockstarAlbumsImplicit, other.QueryRockstarAlbumsImplicit)) return false;
      if (!object.Equals(QueryOverridedCustomRockstars, other.QueryOverridedCustomRockstars)) return false;
      if (!object.Equals(QueryRockstarAlbumsLeftJoin, other.QueryRockstarAlbumsLeftJoin)) return false;
      if (!object.Equals(QueryMultiJoinRockstar, other.QueryMultiJoinRockstar)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstars) hash ^= QueryCustomRockstars.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbums) hash ^= QueryJoinedRockstarAlbums.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsFilter) hash ^= QueryCustomRockstarsFilter.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin) hash ^= QueryRockstarAlbumsCustomLeftJoin.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsImplicit) hash ^= QueryRockstarAlbumsImplicit.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedCustomRockstars) hash ^= QueryOverridedCustomRockstars.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsLeftJoin) hash ^= QueryRockstarAlbumsLeftJoin.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.QueryMultiJoinRockstar) hash ^= QueryMultiJoinRockstar.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstars) {
        output.WriteRawTag(234, 167, 188, 93);
        output.WriteMessage(QueryCustomRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbums) {
        output.WriteRawTag(234, 192, 203, 186, 4);
        output.WriteMessage(QueryJoinedRockstarAlbums);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsFilter) {
        output.WriteRawTag(218, 215, 195, 228, 6);
        output.WriteMessage(QueryCustomRockstarsFilter);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin) {
        output.WriteRawTag(186, 144, 170, 231, 11);
        output.WriteMessage(QueryRockstarAlbumsCustomLeftJoin);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsImplicit) {
        output.WriteRawTag(154, 227, 191, 177, 12);
        output.WriteMessage(QueryRockstarAlbumsImplicit);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedCustomRockstars) {
        output.WriteRawTag(154, 228, 139, 153, 13);
        output.WriteMessage(QueryOverridedCustomRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsLeftJoin) {
        output.WriteRawTag(234, 191, 147, 223, 13);
        output.WriteMessage(QueryRockstarAlbumsLeftJoin);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryMultiJoinRockstar) {
        output.WriteRawTag(250, 163, 155, 247, 13);
        output.WriteMessage(QueryMultiJoinRockstar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstars) {
        size += 4 + pb::CodedOutputStream.ComputeMessageSize(QueryCustomRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbums) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryJoinedRockstarAlbums);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsFilter) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryCustomRockstarsFilter);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarAlbumsCustomLeftJoin);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsImplicit) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarAlbumsImplicit);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryOverridedCustomRockstars) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryOverridedCustomRockstars);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsLeftJoin) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarAlbumsLeftJoin);
      }
      if (subtypeCase_ == SubtypeOneofCase.QueryMultiJoinRockstar) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryMultiJoinRockstar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_Rockstar_CustomRockstar other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryCustomRockstars:
          if (QueryCustomRockstars == null) {
            QueryCustomRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstars();
          }
          QueryCustomRockstars.MergeFrom(other.QueryCustomRockstars);
          break;
        case SubtypeOneofCase.QueryJoinedRockstarAlbums:
          if (QueryJoinedRockstarAlbums == null) {
            QueryJoinedRockstarAlbums = new global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbums();
          }
          QueryJoinedRockstarAlbums.MergeFrom(other.QueryJoinedRockstarAlbums);
          break;
        case SubtypeOneofCase.QueryCustomRockstarsFilter:
          if (QueryCustomRockstarsFilter == null) {
            QueryCustomRockstarsFilter = new global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsFilter();
          }
          QueryCustomRockstarsFilter.MergeFrom(other.QueryCustomRockstarsFilter);
          break;
        case SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin:
          if (QueryRockstarAlbumsCustomLeftJoin == null) {
            QueryRockstarAlbumsCustomLeftJoin = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin();
          }
          QueryRockstarAlbumsCustomLeftJoin.MergeFrom(other.QueryRockstarAlbumsCustomLeftJoin);
          break;
        case SubtypeOneofCase.QueryRockstarAlbumsImplicit:
          if (QueryRockstarAlbumsImplicit == null) {
            QueryRockstarAlbumsImplicit = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsImplicit();
          }
          QueryRockstarAlbumsImplicit.MergeFrom(other.QueryRockstarAlbumsImplicit);
          break;
        case SubtypeOneofCase.QueryOverridedCustomRockstars:
          if (QueryOverridedCustomRockstars == null) {
            QueryOverridedCustomRockstars = new global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars();
          }
          QueryOverridedCustomRockstars.MergeFrom(other.QueryOverridedCustomRockstars);
          break;
        case SubtypeOneofCase.QueryRockstarAlbumsLeftJoin:
          if (QueryRockstarAlbumsLeftJoin == null) {
            QueryRockstarAlbumsLeftJoin = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsLeftJoin();
          }
          QueryRockstarAlbumsLeftJoin.MergeFrom(other.QueryRockstarAlbumsLeftJoin);
          break;
        case SubtypeOneofCase.QueryMultiJoinRockstar:
          if (QueryMultiJoinRockstar == null) {
            QueryMultiJoinRockstar = new global::ServiceStack.Extensions.Tests.Protoc.QueryMultiJoinRockstar();
          }
          QueryMultiJoinRockstar.MergeFrom(other.QueryMultiJoinRockstar);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 196023274: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstars) {
              subBuilder.MergeFrom(QueryCustomRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryCustomRockstars = subBuilder;
            break;
          }
          case 1196613738: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbums subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryJoinedRockstarAlbums();
            if (subtypeCase_ == SubtypeOneofCase.QueryJoinedRockstarAlbums) {
              subBuilder.MergeFrom(QueryJoinedRockstarAlbums);
            }
            input.ReadMessage(subBuilder);
            QueryJoinedRockstarAlbums = subBuilder;
            break;
          }
          case 1821436890: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsFilter subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsFilter();
            if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsFilter) {
              subBuilder.MergeFrom(QueryCustomRockstarsFilter);
            }
            input.ReadMessage(subBuilder);
            QueryCustomRockstarsFilter = subBuilder;
            break;
          }
          case 3169486906: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsCustomLeftJoin();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsCustomLeftJoin) {
              subBuilder.MergeFrom(QueryRockstarAlbumsCustomLeftJoin);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarAlbumsCustomLeftJoin = subBuilder;
            break;
          }
          case 3325030810: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsImplicit subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsImplicit();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsImplicit) {
              subBuilder.MergeFrom(QueryRockstarAlbumsImplicit);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarAlbumsImplicit = subBuilder;
            break;
          }
          case 3542282778: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryOverridedCustomRockstars();
            if (subtypeCase_ == SubtypeOneofCase.QueryOverridedCustomRockstars) {
              subBuilder.MergeFrom(QueryOverridedCustomRockstars);
            }
            input.ReadMessage(subBuilder);
            QueryOverridedCustomRockstars = subBuilder;
            break;
          }
          case 3689209834: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsLeftJoin subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlbumsLeftJoin();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlbumsLeftJoin) {
              subBuilder.MergeFrom(QueryRockstarAlbumsLeftJoin);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarAlbumsLeftJoin = subBuilder;
            break;
          }
          case 3739668986: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryMultiJoinRockstar subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryMultiJoinRockstar();
            if (subtypeCase_ == SubtypeOneofCase.QueryMultiJoinRockstar) {
              subBuilder.MergeFrom(QueryMultiJoinRockstar);
            }
            input.ReadMessage(subBuilder);
            QueryMultiJoinRockstar = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_Rockstar_CustomRockstarSchema : pb::IMessage<QueryDb_Rockstar_CustomRockstarSchema> {
    private static readonly pb::MessageParser<QueryDb_Rockstar_CustomRockstarSchema> _parser = new pb::MessageParser<QueryDb_Rockstar_CustomRockstarSchema>(() => new QueryDb_Rockstar_CustomRockstarSchema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_Rockstar_CustomRockstarSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[67]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_CustomRockstarSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_CustomRockstarSchema(QueryDb_Rockstar_CustomRockstarSchema other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryCustomRockstarsSchema:
          QueryCustomRockstarsSchema = other.QueryCustomRockstarsSchema.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_CustomRockstarSchema Clone() {
      return new QueryDb_Rockstar_CustomRockstarSchema(this);
    }

    /// <summary>Field number for the "QueryCustomRockstarsSchema" field.</summary>
    public const int QueryCustomRockstarsSchemaFieldNumber = 251457334;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsSchema QueryCustomRockstarsSchema {
      get { return subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsSchema ? (global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsSchema) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryCustomRockstarsSchema;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryCustomRockstarsSchema = 251457334,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_Rockstar_CustomRockstarSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_Rockstar_CustomRockstarSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryCustomRockstarsSchema, other.QueryCustomRockstarsSchema)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsSchema) hash ^= QueryCustomRockstarsSchema.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsSchema) {
        output.WriteRawTag(178, 243, 157, 191, 7);
        output.WriteMessage(QueryCustomRockstarsSchema);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsSchema) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryCustomRockstarsSchema);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_Rockstar_CustomRockstarSchema other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryCustomRockstarsSchema:
          if (QueryCustomRockstarsSchema == null) {
            QueryCustomRockstarsSchema = new global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsSchema();
          }
          QueryCustomRockstarsSchema.MergeFrom(other.QueryCustomRockstarsSchema);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 2011658674: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsSchema subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryCustomRockstarsSchema();
            if (subtypeCase_ == SubtypeOneofCase.QueryCustomRockstarsSchema) {
              subBuilder.MergeFrom(QueryCustomRockstarsSchema);
            }
            input.ReadMessage(subBuilder);
            QueryCustomRockstarsSchema = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_Rockstar_RockstarAlias : pb::IMessage<QueryDb_Rockstar_RockstarAlias> {
    private static readonly pb::MessageParser<QueryDb_Rockstar_RockstarAlias> _parser = new pb::MessageParser<QueryDb_Rockstar_RockstarAlias>(() => new QueryDb_Rockstar_RockstarAlias());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_Rockstar_RockstarAlias> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[68]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_RockstarAlias() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_RockstarAlias(QueryDb_Rockstar_RockstarAlias other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryRockstarAlias:
          QueryRockstarAlias = other.QueryRockstarAlias.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_Rockstar_RockstarAlias Clone() {
      return new QueryDb_Rockstar_RockstarAlias(this);
    }

    /// <summary>Field number for the "QueryRockstarAlias" field.</summary>
    public const int QueryRockstarAliasFieldNumber = 390089709;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlias QueryRockstarAlias {
      get { return subtypeCase_ == SubtypeOneofCase.QueryRockstarAlias ? (global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlias) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryRockstarAlias;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryRockstarAlias = 390089709,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_Rockstar_RockstarAlias);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_Rockstar_RockstarAlias other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryRockstarAlias, other.QueryRockstarAlias)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlias) hash ^= QueryRockstarAlias.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlias) {
        output.WriteRawTag(234, 190, 137, 208, 11);
        output.WriteMessage(QueryRockstarAlias);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlias) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryRockstarAlias);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_Rockstar_RockstarAlias other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryRockstarAlias:
          if (QueryRockstarAlias == null) {
            QueryRockstarAlias = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlias();
          }
          QueryRockstarAlias.MergeFrom(other.QueryRockstarAlias);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 3120717674: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlias subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryRockstarAlias();
            if (subtypeCase_ == SubtypeOneofCase.QueryRockstarAlias) {
              subBuilder.MergeFrom(QueryRockstarAlias);
            }
            input.ReadMessage(subBuilder);
            QueryRockstarAlias = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryDb_TypeWithEnum : pb::IMessage<QueryDb_TypeWithEnum> {
    private static readonly pb::MessageParser<QueryDb_TypeWithEnum> _parser = new pb::MessageParser<QueryDb_TypeWithEnum>(() => new QueryDb_TypeWithEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryDb_TypeWithEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[69]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_TypeWithEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_TypeWithEnum(QueryDb_TypeWithEnum other) : this() {
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryTypeWithEnums:
          QueryTypeWithEnums = other.QueryTypeWithEnums.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryDb_TypeWithEnum Clone() {
      return new QueryDb_TypeWithEnum(this);
    }

    /// <summary>Field number for the "QueryTypeWithEnums" field.</summary>
    public const int QueryTypeWithEnumsFieldNumber = 314562614;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.QueryTypeWithEnums QueryTypeWithEnums {
      get { return subtypeCase_ == SubtypeOneofCase.QueryTypeWithEnums ? (global::ServiceStack.Extensions.Tests.Protoc.QueryTypeWithEnums) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.QueryTypeWithEnums;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      QueryTypeWithEnums = 314562614,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryDb_TypeWithEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryDb_TypeWithEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(QueryTypeWithEnums, other.QueryTypeWithEnums)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (subtypeCase_ == SubtypeOneofCase.QueryTypeWithEnums) hash ^= QueryTypeWithEnums.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (subtypeCase_ == SubtypeOneofCase.QueryTypeWithEnums) {
        output.WriteRawTag(178, 131, 251, 175, 9);
        output.WriteMessage(QueryTypeWithEnums);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (subtypeCase_ == SubtypeOneofCase.QueryTypeWithEnums) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(QueryTypeWithEnums);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryDb_TypeWithEnum other) {
      if (other == null) {
        return;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.QueryTypeWithEnums:
          if (QueryTypeWithEnums == null) {
            QueryTypeWithEnums = new global::ServiceStack.Extensions.Tests.Protoc.QueryTypeWithEnums();
          }
          QueryTypeWithEnums.MergeFrom(other.QueryTypeWithEnums);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 2516500914: {
            global::ServiceStack.Extensions.Tests.Protoc.QueryTypeWithEnums subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.QueryTypeWithEnums();
            if (subtypeCase_ == SubtypeOneofCase.QueryTypeWithEnums) {
              subBuilder.MergeFrom(QueryTypeWithEnums);
            }
            input.ReadMessage(subBuilder);
            QueryTypeWithEnums = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryFieldRockstars : pb::IMessage<QueryFieldRockstars> {
    private static readonly pb::MessageParser<QueryFieldRockstars> _parser = new pb::MessageParser<QueryFieldRockstars>(() => new QueryFieldRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryFieldRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[70]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFieldRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFieldRockstars(QueryFieldRockstars other) : this() {
      firstName_ = other.firstName_;
      firstNames_ = other.firstNames_.Clone();
      age_ = other.age_;
      firstNameCaseInsensitive_ = other.firstNameCaseInsensitive_;
      firstNameStartsWith_ = other.firstNameStartsWith_;
      lastNameEndsWith_ = other.lastNameEndsWith_;
      firstNameBetween_ = other.firstNameBetween_.Clone();
      orLastName_ = other.orLastName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFieldRockstars Clone() {
      return new QueryFieldRockstars(this);
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 1;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstNames" field.</summary>
    public const int FirstNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_firstNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> firstNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FirstNames {
      get { return firstNames_; }
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 3;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "FirstNameCaseInsensitive" field.</summary>
    public const int FirstNameCaseInsensitiveFieldNumber = 4;
    private string firstNameCaseInsensitive_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstNameCaseInsensitive {
      get { return firstNameCaseInsensitive_; }
      set {
        firstNameCaseInsensitive_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstNameStartsWith" field.</summary>
    public const int FirstNameStartsWithFieldNumber = 5;
    private string firstNameStartsWith_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstNameStartsWith {
      get { return firstNameStartsWith_; }
      set {
        firstNameStartsWith_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastNameEndsWith" field.</summary>
    public const int LastNameEndsWithFieldNumber = 6;
    private string lastNameEndsWith_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastNameEndsWith {
      get { return lastNameEndsWith_; }
      set {
        lastNameEndsWith_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstNameBetween" field.</summary>
    public const int FirstNameBetweenFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_firstNameBetween_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> firstNameBetween_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FirstNameBetween {
      get { return firstNameBetween_; }
    }

    /// <summary>Field number for the "OrLastName" field.</summary>
    public const int OrLastNameFieldNumber = 8;
    private string orLastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrLastName {
      get { return orLastName_; }
      set {
        orLastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryFieldRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryFieldRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstName != other.FirstName) return false;
      if(!firstNames_.Equals(other.firstNames_)) return false;
      if (Age != other.Age) return false;
      if (FirstNameCaseInsensitive != other.FirstNameCaseInsensitive) return false;
      if (FirstNameStartsWith != other.FirstNameStartsWith) return false;
      if (LastNameEndsWith != other.LastNameEndsWith) return false;
      if(!firstNameBetween_.Equals(other.firstNameBetween_)) return false;
      if (OrLastName != other.OrLastName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      hash ^= firstNames_.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (FirstNameCaseInsensitive.Length != 0) hash ^= FirstNameCaseInsensitive.GetHashCode();
      if (FirstNameStartsWith.Length != 0) hash ^= FirstNameStartsWith.GetHashCode();
      if (LastNameEndsWith.Length != 0) hash ^= LastNameEndsWith.GetHashCode();
      hash ^= firstNameBetween_.GetHashCode();
      if (OrLastName.Length != 0) hash ^= OrLastName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FirstName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstName);
      }
      firstNames_.WriteTo(output, _repeated_firstNames_codec);
      if (Age != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Age);
      }
      if (FirstNameCaseInsensitive.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(FirstNameCaseInsensitive);
      }
      if (FirstNameStartsWith.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(FirstNameStartsWith);
      }
      if (LastNameEndsWith.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(LastNameEndsWith);
      }
      firstNameBetween_.WriteTo(output, _repeated_firstNameBetween_codec);
      if (OrLastName.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(OrLastName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      size += firstNames_.CalculateSize(_repeated_firstNames_codec);
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (FirstNameCaseInsensitive.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstNameCaseInsensitive);
      }
      if (FirstNameStartsWith.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstNameStartsWith);
      }
      if (LastNameEndsWith.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastNameEndsWith);
      }
      size += firstNameBetween_.CalculateSize(_repeated_firstNameBetween_codec);
      if (OrLastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrLastName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryFieldRockstars other) {
      if (other == null) {
        return;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      firstNames_.Add(other.firstNames_);
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.FirstNameCaseInsensitive.Length != 0) {
        FirstNameCaseInsensitive = other.FirstNameCaseInsensitive;
      }
      if (other.FirstNameStartsWith.Length != 0) {
        FirstNameStartsWith = other.FirstNameStartsWith;
      }
      if (other.LastNameEndsWith.Length != 0) {
        LastNameEndsWith = other.LastNameEndsWith;
      }
      firstNameBetween_.Add(other.firstNameBetween_);
      if (other.OrLastName.Length != 0) {
        OrLastName = other.OrLastName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirstName = input.ReadString();
            break;
          }
          case 18: {
            firstNames_.AddEntriesFrom(input, _repeated_firstNames_codec);
            break;
          }
          case 24: {
            Age = input.ReadInt32();
            break;
          }
          case 34: {
            FirstNameCaseInsensitive = input.ReadString();
            break;
          }
          case 42: {
            FirstNameStartsWith = input.ReadString();
            break;
          }
          case 50: {
            LastNameEndsWith = input.ReadString();
            break;
          }
          case 58: {
            firstNameBetween_.AddEntriesFrom(input, _repeated_firstNameBetween_codec);
            break;
          }
          case 66: {
            OrLastName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryFieldRockstarsDynamic : pb::IMessage<QueryFieldRockstarsDynamic> {
    private static readonly pb::MessageParser<QueryFieldRockstarsDynamic> _parser = new pb::MessageParser<QueryFieldRockstarsDynamic>(() => new QueryFieldRockstarsDynamic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryFieldRockstarsDynamic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[71]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFieldRockstarsDynamic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFieldRockstarsDynamic(QueryFieldRockstarsDynamic other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFieldRockstarsDynamic Clone() {
      return new QueryFieldRockstarsDynamic(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryFieldRockstarsDynamic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryFieldRockstarsDynamic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryFieldRockstarsDynamic other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryFieldsImplicitConventions : pb::IMessage<QueryFieldsImplicitConventions> {
    private static readonly pb::MessageParser<QueryFieldsImplicitConventions> _parser = new pb::MessageParser<QueryFieldsImplicitConventions>(() => new QueryFieldsImplicitConventions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryFieldsImplicitConventions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[72]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFieldsImplicitConventions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFieldsImplicitConventions(QueryFieldsImplicitConventions other) : this() {
      firstNameContains_ = other.firstNameContains_;
      lastNameEndsWith_ = other.lastNameEndsWith_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryFieldsImplicitConventions Clone() {
      return new QueryFieldsImplicitConventions(this);
    }

    /// <summary>Field number for the "FirstNameContains" field.</summary>
    public const int FirstNameContainsFieldNumber = 1;
    private string firstNameContains_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstNameContains {
      get { return firstNameContains_; }
      set {
        firstNameContains_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastNameEndsWith" field.</summary>
    public const int LastNameEndsWithFieldNumber = 2;
    private string lastNameEndsWith_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastNameEndsWith {
      get { return lastNameEndsWith_; }
      set {
        lastNameEndsWith_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryFieldsImplicitConventions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryFieldsImplicitConventions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstNameContains != other.FirstNameContains) return false;
      if (LastNameEndsWith != other.LastNameEndsWith) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstNameContains.Length != 0) hash ^= FirstNameContains.GetHashCode();
      if (LastNameEndsWith.Length != 0) hash ^= LastNameEndsWith.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FirstNameContains.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstNameContains);
      }
      if (LastNameEndsWith.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LastNameEndsWith);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirstNameContains.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstNameContains);
      }
      if (LastNameEndsWith.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastNameEndsWith);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryFieldsImplicitConventions other) {
      if (other == null) {
        return;
      }
      if (other.FirstNameContains.Length != 0) {
        FirstNameContains = other.FirstNameContains;
      }
      if (other.LastNameEndsWith.Length != 0) {
        LastNameEndsWith = other.LastNameEndsWith;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirstNameContains = input.ReadString();
            break;
          }
          case 18: {
            LastNameEndsWith = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryGetRockstars : pb::IMessage<QueryGetRockstars> {
    private static readonly pb::MessageParser<QueryGetRockstars> _parser = new pb::MessageParser<QueryGetRockstars>(() => new QueryGetRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryGetRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[73]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGetRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGetRockstars(QueryGetRockstars other) : this() {
      ids_ = other.ids_.Clone();
      ages_ = other.ages_.Clone();
      firstNames_ = other.firstNames_.Clone();
      idsBetween_ = other.idsBetween_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGetRockstars Clone() {
      return new QueryGetRockstars(this);
    }

    /// <summary>Field number for the "Ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_ids_codec
        = pb::FieldCodec.ForInt32(8);
    private readonly pbc::RepeatedField<int> ids_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "Ages" field.</summary>
    public const int AgesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_ages_codec
        = pb::FieldCodec.ForInt32(16);
    private readonly pbc::RepeatedField<int> ages_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ages {
      get { return ages_; }
    }

    /// <summary>Field number for the "FirstNames" field.</summary>
    public const int FirstNamesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_firstNames_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> firstNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FirstNames {
      get { return firstNames_; }
    }

    /// <summary>Field number for the "IdsBetween" field.</summary>
    public const int IdsBetweenFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_idsBetween_codec
        = pb::FieldCodec.ForInt32(32);
    private readonly pbc::RepeatedField<int> idsBetween_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IdsBetween {
      get { return idsBetween_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryGetRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryGetRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      if(!ages_.Equals(other.ages_)) return false;
      if(!firstNames_.Equals(other.firstNames_)) return false;
      if(!idsBetween_.Equals(other.idsBetween_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      hash ^= ages_.GetHashCode();
      hash ^= firstNames_.GetHashCode();
      hash ^= idsBetween_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      ages_.WriteTo(output, _repeated_ages_codec);
      firstNames_.WriteTo(output, _repeated_firstNames_codec);
      idsBetween_.WriteTo(output, _repeated_idsBetween_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      size += ages_.CalculateSize(_repeated_ages_codec);
      size += firstNames_.CalculateSize(_repeated_firstNames_codec);
      size += idsBetween_.CalculateSize(_repeated_idsBetween_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryGetRockstars other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      ages_.Add(other.ages_);
      firstNames_.Add(other.firstNames_);
      idsBetween_.Add(other.idsBetween_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 18:
          case 16: {
            ages_.AddEntriesFrom(input, _repeated_ages_codec);
            break;
          }
          case 26: {
            firstNames_.AddEntriesFrom(input, _repeated_firstNames_codec);
            break;
          }
          case 34:
          case 32: {
            idsBetween_.AddEntriesFrom(input, _repeated_idsBetween_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryGetRockstarsDynamic : pb::IMessage<QueryGetRockstarsDynamic> {
    private static readonly pb::MessageParser<QueryGetRockstarsDynamic> _parser = new pb::MessageParser<QueryGetRockstarsDynamic>(() => new QueryGetRockstarsDynamic());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryGetRockstarsDynamic> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[74]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGetRockstarsDynamic() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGetRockstarsDynamic(QueryGetRockstarsDynamic other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryGetRockstarsDynamic Clone() {
      return new QueryGetRockstarsDynamic(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryGetRockstarsDynamic);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryGetRockstarsDynamic other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryGetRockstarsDynamic other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class QueryJoinedRockstarAlbums : pb::IMessage<QueryJoinedRockstarAlbums> {
    private static readonly pb::MessageParser<QueryJoinedRockstarAlbums> _parser = new pb::MessageParser<QueryJoinedRockstarAlbums>(() => new QueryJoinedRockstarAlbums());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryJoinedRockstarAlbums> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[75]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryJoinedRockstarAlbums() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryJoinedRockstarAlbums(QueryJoinedRockstarAlbums other) : this() {
      age_ = other.age_;
      rockstarAlbumName_ = other.rockstarAlbumName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryJoinedRockstarAlbums Clone() {
      return new QueryJoinedRockstarAlbums(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "RockstarAlbumName" field.</summary>
    public const int RockstarAlbumNameFieldNumber = 2;
    private string rockstarAlbumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarAlbumName {
      get { return rockstarAlbumName_; }
      set {
        rockstarAlbumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryJoinedRockstarAlbums);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryJoinedRockstarAlbums other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      if (RockstarAlbumName != other.RockstarAlbumName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (RockstarAlbumName.Length != 0) hash ^= RockstarAlbumName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RockstarAlbumName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarAlbumName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryJoinedRockstarAlbums other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.RockstarAlbumName.Length != 0) {
        RockstarAlbumName = other.RockstarAlbumName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
          case 18: {
            RockstarAlbumName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryJoinedRockstarAlbumsCustomSelect : pb::IMessage<QueryJoinedRockstarAlbumsCustomSelect> {
    private static readonly pb::MessageParser<QueryJoinedRockstarAlbumsCustomSelect> _parser = new pb::MessageParser<QueryJoinedRockstarAlbumsCustomSelect>(() => new QueryJoinedRockstarAlbumsCustomSelect());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryJoinedRockstarAlbumsCustomSelect> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[76]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryJoinedRockstarAlbumsCustomSelect() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryJoinedRockstarAlbumsCustomSelect(QueryJoinedRockstarAlbumsCustomSelect other) : this() {
      age_ = other.age_;
      rockstarAlbumName_ = other.rockstarAlbumName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryJoinedRockstarAlbumsCustomSelect Clone() {
      return new QueryJoinedRockstarAlbumsCustomSelect(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "RockstarAlbumName" field.</summary>
    public const int RockstarAlbumNameFieldNumber = 2;
    private string rockstarAlbumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarAlbumName {
      get { return rockstarAlbumName_; }
      set {
        rockstarAlbumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryJoinedRockstarAlbumsCustomSelect);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryJoinedRockstarAlbumsCustomSelect other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      if (RockstarAlbumName != other.RockstarAlbumName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (RockstarAlbumName.Length != 0) hash ^= RockstarAlbumName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RockstarAlbumName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarAlbumName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryJoinedRockstarAlbumsCustomSelect other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.RockstarAlbumName.Length != 0) {
        RockstarAlbumName = other.RockstarAlbumName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
          case 18: {
            RockstarAlbumName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryJoinedRockstarAlbumsCustomSelectResponse : pb::IMessage<QueryJoinedRockstarAlbumsCustomSelectResponse> {
    private static readonly pb::MessageParser<QueryJoinedRockstarAlbumsCustomSelectResponse> _parser = new pb::MessageParser<QueryJoinedRockstarAlbumsCustomSelectResponse>(() => new QueryJoinedRockstarAlbumsCustomSelectResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryJoinedRockstarAlbumsCustomSelectResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[77]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryJoinedRockstarAlbumsCustomSelectResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryJoinedRockstarAlbumsCustomSelectResponse(QueryJoinedRockstarAlbumsCustomSelectResponse other) : this() {
      age_ = other.age_;
      rockstarAlbumName_ = other.rockstarAlbumName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryJoinedRockstarAlbumsCustomSelectResponse Clone() {
      return new QueryJoinedRockstarAlbumsCustomSelectResponse(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "RockstarAlbumName" field.</summary>
    public const int RockstarAlbumNameFieldNumber = 2;
    private string rockstarAlbumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarAlbumName {
      get { return rockstarAlbumName_; }
      set {
        rockstarAlbumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryJoinedRockstarAlbumsCustomSelectResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryJoinedRockstarAlbumsCustomSelectResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      if (RockstarAlbumName != other.RockstarAlbumName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (RockstarAlbumName.Length != 0) hash ^= RockstarAlbumName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RockstarAlbumName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarAlbumName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryJoinedRockstarAlbumsCustomSelectResponse other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.RockstarAlbumName.Length != 0) {
        RockstarAlbumName = other.RockstarAlbumName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
          case 18: {
            RockstarAlbumName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryMovies : pb::IMessage<QueryMovies> {
    private static readonly pb::MessageParser<QueryMovies> _parser = new pb::MessageParser<QueryMovies>(() => new QueryMovies());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryMovies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[78]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMovies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMovies(QueryMovies other) : this() {
      ids_ = other.ids_.Clone();
      imdbIds_ = other.imdbIds_.Clone();
      ratings_ = other.ratings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMovies Clone() {
      return new QueryMovies(this);
    }

    /// <summary>Field number for the "Ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_ids_codec
        = pb::FieldCodec.ForInt32(8);
    private readonly pbc::RepeatedField<int> ids_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "ImdbIds" field.</summary>
    public const int ImdbIdsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_imdbIds_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> imdbIds_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ImdbIds {
      get { return imdbIds_; }
    }

    /// <summary>Field number for the "Ratings" field.</summary>
    public const int RatingsFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_ratings_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> ratings_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ratings {
      get { return ratings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryMovies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryMovies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      if(!imdbIds_.Equals(other.imdbIds_)) return false;
      if(!ratings_.Equals(other.ratings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      hash ^= imdbIds_.GetHashCode();
      hash ^= ratings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      imdbIds_.WriteTo(output, _repeated_imdbIds_codec);
      ratings_.WriteTo(output, _repeated_ratings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      size += imdbIds_.CalculateSize(_repeated_imdbIds_codec);
      size += ratings_.CalculateSize(_repeated_ratings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryMovies other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      imdbIds_.Add(other.imdbIds_);
      ratings_.Add(other.ratings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 18: {
            imdbIds_.AddEntriesFrom(input, _repeated_imdbIds_codec);
            break;
          }
          case 26: {
            ratings_.AddEntriesFrom(input, _repeated_ratings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryMultiJoinRockstar : pb::IMessage<QueryMultiJoinRockstar> {
    private static readonly pb::MessageParser<QueryMultiJoinRockstar> _parser = new pb::MessageParser<QueryMultiJoinRockstar>(() => new QueryMultiJoinRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryMultiJoinRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[79]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMultiJoinRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMultiJoinRockstar(QueryMultiJoinRockstar other) : this() {
      age_ = other.age_;
      rockstarAlbumName_ = other.rockstarAlbumName_;
      rockstarGenreName_ = other.rockstarGenreName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryMultiJoinRockstar Clone() {
      return new QueryMultiJoinRockstar(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "RockstarAlbumName" field.</summary>
    public const int RockstarAlbumNameFieldNumber = 2;
    private string rockstarAlbumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarAlbumName {
      get { return rockstarAlbumName_; }
      set {
        rockstarAlbumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RockstarGenreName" field.</summary>
    public const int RockstarGenreNameFieldNumber = 3;
    private string rockstarGenreName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarGenreName {
      get { return rockstarGenreName_; }
      set {
        rockstarGenreName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryMultiJoinRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryMultiJoinRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      if (RockstarAlbumName != other.RockstarAlbumName) return false;
      if (RockstarGenreName != other.RockstarGenreName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (RockstarAlbumName.Length != 0) hash ^= RockstarAlbumName.GetHashCode();
      if (RockstarGenreName.Length != 0) hash ^= RockstarGenreName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RockstarAlbumName);
      }
      if (RockstarGenreName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(RockstarGenreName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarAlbumName);
      }
      if (RockstarGenreName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarGenreName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryMultiJoinRockstar other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.RockstarAlbumName.Length != 0) {
        RockstarAlbumName = other.RockstarAlbumName;
      }
      if (other.RockstarGenreName.Length != 0) {
        RockstarGenreName = other.RockstarGenreName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
          case 18: {
            RockstarAlbumName = input.ReadString();
            break;
          }
          case 26: {
            RockstarGenreName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryNamedRockstars : pb::IMessage<QueryNamedRockstars> {
    private static readonly pb::MessageParser<QueryNamedRockstars> _parser = new pb::MessageParser<QueryNamedRockstars>(() => new QueryNamedRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryNamedRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[80]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryNamedRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryNamedRockstars(QueryNamedRockstars other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryNamedRockstars Clone() {
      return new QueryNamedRockstars(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryNamedRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryNamedRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryNamedRockstars other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryOrRockstars : pb::IMessage<QueryOrRockstars> {
    private static readonly pb::MessageParser<QueryOrRockstars> _parser = new pb::MessageParser<QueryOrRockstars>(() => new QueryOrRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOrRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[81]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrRockstars(QueryOrRockstars other) : this() {
      age_ = other.age_;
      firstName_ = other.firstName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrRockstars Clone() {
      return new QueryOrRockstars(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOrRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOrRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      if (FirstName != other.FirstName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOrRockstars other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryOrRockstarsFields : pb::IMessage<QueryOrRockstarsFields> {
    private static readonly pb::MessageParser<QueryOrRockstarsFields> _parser = new pb::MessageParser<QueryOrRockstarsFields>(() => new QueryOrRockstarsFields());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOrRockstarsFields> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[82]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrRockstarsFields() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrRockstarsFields(QueryOrRockstarsFields other) : this() {
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOrRockstarsFields Clone() {
      return new QueryOrRockstarsFields(this);
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 1;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 2;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOrRockstarsFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOrRockstarsFields other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FirstName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LastName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOrRockstarsFields other) {
      if (other == null) {
        return;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FirstName = input.ReadString();
            break;
          }
          case 18: {
            LastName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryOverridedCustomRockstars : pb::IMessage<QueryOverridedCustomRockstars> {
    private static readonly pb::MessageParser<QueryOverridedCustomRockstars> _parser = new pb::MessageParser<QueryOverridedCustomRockstars>(() => new QueryOverridedCustomRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOverridedCustomRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[83]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedCustomRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedCustomRockstars(QueryOverridedCustomRockstars other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedCustomRockstars Clone() {
      return new QueryOverridedCustomRockstars(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOverridedCustomRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOverridedCustomRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOverridedCustomRockstars other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryOverridedRockstars : pb::IMessage<QueryOverridedRockstars> {
    private static readonly pb::MessageParser<QueryOverridedRockstars> _parser = new pb::MessageParser<QueryOverridedRockstars>(() => new QueryOverridedRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryOverridedRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[84]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedRockstars(QueryOverridedRockstars other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryOverridedRockstars Clone() {
      return new QueryOverridedRockstars(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryOverridedRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryOverridedRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryOverridedRockstars other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryPagingTest : pb::IMessage<QueryPagingTest> {
    private static readonly pb::MessageParser<QueryPagingTest> _parser = new pb::MessageParser<QueryPagingTest>(() => new QueryPagingTest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryPagingTest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[85]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPagingTest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPagingTest(QueryPagingTest other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      value_ = other.value_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryPagingTest Clone() {
      return new QueryPagingTest(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Value" field.</summary>
    public const int ValueFieldNumber = 3;
    private int value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryPagingTest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryPagingTest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (Value != other.Value) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Value != 0) hash ^= Value.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Value != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Value);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Value != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Value);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryPagingTest other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Value != 0) {
        Value = other.Value;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Value = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_Adhoc : pb::IMessage<QueryResponse_Adhoc> {
    private static readonly pb::MessageParser<QueryResponse_Adhoc> _parser = new pb::MessageParser<QueryResponse_Adhoc>(() => new QueryResponse_Adhoc());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_Adhoc> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[86]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Adhoc() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Adhoc(QueryResponse_Adhoc other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Adhoc Clone() {
      return new QueryResponse_Adhoc(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.Adhoc> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.Adhoc.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Adhoc> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Adhoc>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Adhoc> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_Adhoc);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_Adhoc other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_Adhoc other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_AllFields : pb::IMessage<QueryResponse_AllFields> {
    private static readonly pb::MessageParser<QueryResponse_AllFields> _parser = new pb::MessageParser<QueryResponse_AllFields>(() => new QueryResponse_AllFields());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_AllFields> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[87]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_AllFields() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_AllFields(QueryResponse_AllFields other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_AllFields Clone() {
      return new QueryResponse_AllFields(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.AllFields> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.AllFields.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.AllFields> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.AllFields>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.AllFields> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_AllFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_AllFields other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_AllFields other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_CustomRockstar : pb::IMessage<QueryResponse_CustomRockstar> {
    private static readonly pb::MessageParser<QueryResponse_CustomRockstar> _parser = new pb::MessageParser<QueryResponse_CustomRockstar>(() => new QueryResponse_CustomRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_CustomRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[88]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomRockstar(QueryResponse_CustomRockstar other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomRockstar Clone() {
      return new QueryResponse_CustomRockstar(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstar> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_CustomRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_CustomRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_CustomRockstar other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_CustomRockstarSchema : pb::IMessage<QueryResponse_CustomRockstarSchema> {
    private static readonly pb::MessageParser<QueryResponse_CustomRockstarSchema> _parser = new pb::MessageParser<QueryResponse_CustomRockstarSchema>(() => new QueryResponse_CustomRockstarSchema());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_CustomRockstarSchema> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[89]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomRockstarSchema() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomRockstarSchema(QueryResponse_CustomRockstarSchema other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomRockstarSchema Clone() {
      return new QueryResponse_CustomRockstarSchema(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstarSchema> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.CustomRockstarSchema.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstarSchema> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstarSchema>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomRockstarSchema> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_CustomRockstarSchema);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_CustomRockstarSchema other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_CustomRockstarSchema other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_CustomSelectRockstar : pb::IMessage<QueryResponse_CustomSelectRockstar> {
    private static readonly pb::MessageParser<QueryResponse_CustomSelectRockstar> _parser = new pb::MessageParser<QueryResponse_CustomSelectRockstar>(() => new QueryResponse_CustomSelectRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_CustomSelectRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[90]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomSelectRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomSelectRockstar(QueryResponse_CustomSelectRockstar other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomSelectRockstar Clone() {
      return new QueryResponse_CustomSelectRockstar(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstar> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstar.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstar> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstar> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_CustomSelectRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_CustomSelectRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_CustomSelectRockstar other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_CustomSelectRockstarResponse : pb::IMessage<QueryResponse_CustomSelectRockstarResponse> {
    private static readonly pb::MessageParser<QueryResponse_CustomSelectRockstarResponse> _parser = new pb::MessageParser<QueryResponse_CustomSelectRockstarResponse>(() => new QueryResponse_CustomSelectRockstarResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_CustomSelectRockstarResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[91]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomSelectRockstarResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomSelectRockstarResponse(QueryResponse_CustomSelectRockstarResponse other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_CustomSelectRockstarResponse Clone() {
      return new QueryResponse_CustomSelectRockstarResponse(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstarResponse> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstarResponse.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstarResponse> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstarResponse>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.CustomSelectRockstarResponse> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_CustomSelectRockstarResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_CustomSelectRockstarResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_CustomSelectRockstarResponse other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_Movie : pb::IMessage<QueryResponse_Movie> {
    private static readonly pb::MessageParser<QueryResponse_Movie> _parser = new pb::MessageParser<QueryResponse_Movie>(() => new QueryResponse_Movie());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_Movie> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[92]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Movie() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Movie(QueryResponse_Movie other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Movie Clone() {
      return new QueryResponse_Movie(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.Movie> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.Movie.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Movie> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Movie>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Movie> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_Movie);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_Movie other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_Movie other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_NamedRockstar : pb::IMessage<QueryResponse_NamedRockstar> {
    private static readonly pb::MessageParser<QueryResponse_NamedRockstar> _parser = new pb::MessageParser<QueryResponse_NamedRockstar>(() => new QueryResponse_NamedRockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_NamedRockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[93]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_NamedRockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_NamedRockstar(QueryResponse_NamedRockstar other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_NamedRockstar Clone() {
      return new QueryResponse_NamedRockstar(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.Rockstar.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_NamedRockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_NamedRockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_NamedRockstar other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_PagingTest : pb::IMessage<QueryResponse_PagingTest> {
    private static readonly pb::MessageParser<QueryResponse_PagingTest> _parser = new pb::MessageParser<QueryResponse_PagingTest>(() => new QueryResponse_PagingTest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_PagingTest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[94]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_PagingTest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_PagingTest(QueryResponse_PagingTest other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_PagingTest Clone() {
      return new QueryResponse_PagingTest(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.PagingTest> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.PagingTest.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.PagingTest> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.PagingTest>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.PagingTest> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_PagingTest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_PagingTest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_PagingTest other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_Rockstar : pb::IMessage<QueryResponse_Rockstar> {
    private static readonly pb::MessageParser<QueryResponse_Rockstar> _parser = new pb::MessageParser<QueryResponse_Rockstar>(() => new QueryResponse_Rockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_Rockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[95]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Rockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Rockstar(QueryResponse_Rockstar other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_Rockstar Clone() {
      return new QueryResponse_Rockstar(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.Rockstar.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.Rockstar> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_Rockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_Rockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_Rockstar other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_RockstarAlbum : pb::IMessage<QueryResponse_RockstarAlbum> {
    private static readonly pb::MessageParser<QueryResponse_RockstarAlbum> _parser = new pb::MessageParser<QueryResponse_RockstarAlbum>(() => new QueryResponse_RockstarAlbum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_RockstarAlbum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[96]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarAlbum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarAlbum(QueryResponse_RockstarAlbum other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarAlbum Clone() {
      return new QueryResponse_RockstarAlbum(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_RockstarAlbum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_RockstarAlbum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_RockstarAlbum other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_RockstarAlias : pb::IMessage<QueryResponse_RockstarAlias> {
    private static readonly pb::MessageParser<QueryResponse_RockstarAlias> _parser = new pb::MessageParser<QueryResponse_RockstarAlias>(() => new QueryResponse_RockstarAlias());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_RockstarAlias> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[97]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarAlias() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarAlias(QueryResponse_RockstarAlias other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarAlias Clone() {
      return new QueryResponse_RockstarAlias(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlias> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.RockstarAlias.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlias> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlias>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlias> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_RockstarAlias);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_RockstarAlias other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_RockstarAlias other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_RockstarReference : pb::IMessage<QueryResponse_RockstarReference> {
    private static readonly pb::MessageParser<QueryResponse_RockstarReference> _parser = new pb::MessageParser<QueryResponse_RockstarReference>(() => new QueryResponse_RockstarReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_RockstarReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[98]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarReference(QueryResponse_RockstarReference other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_RockstarReference Clone() {
      return new QueryResponse_RockstarReference(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.RockstarReference> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.RockstarReference.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarReference> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarReference>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarReference> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_RockstarReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_RockstarReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_RockstarReference other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryResponse_TypeWithEnum : pb::IMessage<QueryResponse_TypeWithEnum> {
    private static readonly pb::MessageParser<QueryResponse_TypeWithEnum> _parser = new pb::MessageParser<QueryResponse_TypeWithEnum>(() => new QueryResponse_TypeWithEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryResponse_TypeWithEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[99]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_TypeWithEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_TypeWithEnum(QueryResponse_TypeWithEnum other) : this() {
      offset_ = other.offset_;
      total_ = other.total_;
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryResponse_TypeWithEnum Clone() {
      return new QueryResponse_TypeWithEnum(this);
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 1;
    private int offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "Total" field.</summary>
    public const int TotalFieldNumber = 2;
    private int total_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Total {
      get { return total_; }
      set {
        total_ = value;
      }
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.TypeWithEnum> _repeated_results_codec
        = pb::FieldCodec.ForMessage(26, global::ServiceStack.Extensions.Tests.Protoc.TypeWithEnum.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.TypeWithEnum> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.TypeWithEnum>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.TypeWithEnum> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryResponse_TypeWithEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryResponse_TypeWithEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Offset != other.Offset) return false;
      if (Total != other.Total) return false;
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Offset != 0) hash ^= Offset.GetHashCode();
      if (Total != 0) hash ^= Total.GetHashCode();
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Offset != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Offset);
      }
      if (Total != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Total);
      }
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Offset != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Offset);
      }
      if (Total != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Total);
      }
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryResponse_TypeWithEnum other) {
      if (other == null) {
        return;
      }
      if (other.Offset != 0) {
        Offset = other.Offset;
      }
      if (other.Total != 0) {
        Total = other.Total;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Offset = input.ReadInt32();
            break;
          }
          case 16: {
            Total = input.ReadInt32();
            break;
          }
          case 26: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 42: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRockstarAlbums : pb::IMessage<QueryRockstarAlbums> {
    private static readonly pb::MessageParser<QueryRockstarAlbums> _parser = new pb::MessageParser<QueryRockstarAlbums>(() => new QueryRockstarAlbums());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarAlbums> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[100]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbums() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbums(QueryRockstarAlbums other) : this() {
      id_ = other.id_;
      rockstarId_ = other.rockstarId_;
      name_ = other.name_;
      genre_ = other.genre_;
      idBetween_ = other.idBetween_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbums Clone() {
      return new QueryRockstarAlbums(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "RockstarId" field.</summary>
    public const int RockstarIdFieldNumber = 2;
    private int rockstarId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RockstarId {
      get { return rockstarId_; }
      set {
        rockstarId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Genre" field.</summary>
    public const int GenreFieldNumber = 4;
    private string genre_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Genre {
      get { return genre_; }
      set {
        genre_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IdBetween" field.</summary>
    public const int IdBetweenFieldNumber = 5;
    private static readonly pb::FieldCodec<int> _repeated_idBetween_codec
        = pb::FieldCodec.ForInt32(40);
    private readonly pbc::RepeatedField<int> idBetween_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IdBetween {
      get { return idBetween_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarAlbums);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarAlbums other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RockstarId != other.RockstarId) return false;
      if (Name != other.Name) return false;
      if (Genre != other.Genre) return false;
      if(!idBetween_.Equals(other.idBetween_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RockstarId != 0) hash ^= RockstarId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Genre.Length != 0) hash ^= Genre.GetHashCode();
      hash ^= idBetween_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RockstarId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RockstarId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Genre.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Genre);
      }
      idBetween_.WriteTo(output, _repeated_idBetween_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RockstarId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RockstarId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Genre.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Genre);
      }
      size += idBetween_.CalculateSize(_repeated_idBetween_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarAlbums other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RockstarId != 0) {
        RockstarId = other.RockstarId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Genre.Length != 0) {
        Genre = other.Genre;
      }
      idBetween_.Add(other.idBetween_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RockstarId = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Genre = input.ReadString();
            break;
          }
          case 42:
          case 40: {
            idBetween_.AddEntriesFrom(input, _repeated_idBetween_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRockstarAlbumsCustomLeftJoin : pb::IMessage<QueryRockstarAlbumsCustomLeftJoin> {
    private static readonly pb::MessageParser<QueryRockstarAlbumsCustomLeftJoin> _parser = new pb::MessageParser<QueryRockstarAlbumsCustomLeftJoin>(() => new QueryRockstarAlbumsCustomLeftJoin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarAlbumsCustomLeftJoin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[101]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsCustomLeftJoin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsCustomLeftJoin(QueryRockstarAlbumsCustomLeftJoin other) : this() {
      age_ = other.age_;
      albumName_ = other.albumName_;
      idNotEqualTo_ = other.idNotEqualTo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsCustomLeftJoin Clone() {
      return new QueryRockstarAlbumsCustomLeftJoin(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "AlbumName" field.</summary>
    public const int AlbumNameFieldNumber = 2;
    private string albumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlbumName {
      get { return albumName_; }
      set {
        albumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IdNotEqualTo" field.</summary>
    public const int IdNotEqualToFieldNumber = 3;
    private int idNotEqualTo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdNotEqualTo {
      get { return idNotEqualTo_; }
      set {
        idNotEqualTo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarAlbumsCustomLeftJoin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarAlbumsCustomLeftJoin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      if (AlbumName != other.AlbumName) return false;
      if (IdNotEqualTo != other.IdNotEqualTo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (AlbumName.Length != 0) hash ^= AlbumName.GetHashCode();
      if (IdNotEqualTo != 0) hash ^= IdNotEqualTo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (AlbumName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AlbumName);
      }
      if (IdNotEqualTo != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(IdNotEqualTo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (AlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlbumName);
      }
      if (IdNotEqualTo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdNotEqualTo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarAlbumsCustomLeftJoin other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.AlbumName.Length != 0) {
        AlbumName = other.AlbumName;
      }
      if (other.IdNotEqualTo != 0) {
        IdNotEqualTo = other.IdNotEqualTo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
          case 18: {
            AlbumName = input.ReadString();
            break;
          }
          case 24: {
            IdNotEqualTo = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRockstarAlbumsImplicit : pb::IMessage<QueryRockstarAlbumsImplicit> {
    private static readonly pb::MessageParser<QueryRockstarAlbumsImplicit> _parser = new pb::MessageParser<QueryRockstarAlbumsImplicit>(() => new QueryRockstarAlbumsImplicit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarAlbumsImplicit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[102]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsImplicit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsImplicit(QueryRockstarAlbumsImplicit other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsImplicit Clone() {
      return new QueryRockstarAlbumsImplicit(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarAlbumsImplicit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarAlbumsImplicit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarAlbumsImplicit other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class QueryRockstarAlbumsLeftJoin : pb::IMessage<QueryRockstarAlbumsLeftJoin> {
    private static readonly pb::MessageParser<QueryRockstarAlbumsLeftJoin> _parser = new pb::MessageParser<QueryRockstarAlbumsLeftJoin>(() => new QueryRockstarAlbumsLeftJoin());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarAlbumsLeftJoin> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[103]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsLeftJoin() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsLeftJoin(QueryRockstarAlbumsLeftJoin other) : this() {
      age_ = other.age_;
      albumName_ = other.albumName_;
      idNotEqualTo_ = other.idNotEqualTo_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlbumsLeftJoin Clone() {
      return new QueryRockstarAlbumsLeftJoin(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "AlbumName" field.</summary>
    public const int AlbumNameFieldNumber = 2;
    private string albumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AlbumName {
      get { return albumName_; }
      set {
        albumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IdNotEqualTo" field.</summary>
    public const int IdNotEqualToFieldNumber = 3;
    private int idNotEqualTo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int IdNotEqualTo {
      get { return idNotEqualTo_; }
      set {
        idNotEqualTo_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarAlbumsLeftJoin);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarAlbumsLeftJoin other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      if (AlbumName != other.AlbumName) return false;
      if (IdNotEqualTo != other.IdNotEqualTo) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (AlbumName.Length != 0) hash ^= AlbumName.GetHashCode();
      if (IdNotEqualTo != 0) hash ^= IdNotEqualTo.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (AlbumName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AlbumName);
      }
      if (IdNotEqualTo != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(IdNotEqualTo);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (AlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AlbumName);
      }
      if (IdNotEqualTo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(IdNotEqualTo);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarAlbumsLeftJoin other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.AlbumName.Length != 0) {
        AlbumName = other.AlbumName;
      }
      if (other.IdNotEqualTo != 0) {
        IdNotEqualTo = other.IdNotEqualTo;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
          case 18: {
            AlbumName = input.ReadString();
            break;
          }
          case 24: {
            IdNotEqualTo = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRockstarAlias : pb::IMessage<QueryRockstarAlias> {
    private static readonly pb::MessageParser<QueryRockstarAlias> _parser = new pb::MessageParser<QueryRockstarAlias>(() => new QueryRockstarAlias());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarAlias> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[104]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlias() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlias(QueryRockstarAlias other) : this() {
      age_ = other.age_;
      rockstarAlbumName_ = other.rockstarAlbumName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarAlias Clone() {
      return new QueryRockstarAlias(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "RockstarAlbumName" field.</summary>
    public const int RockstarAlbumNameFieldNumber = 2;
    private string rockstarAlbumName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarAlbumName {
      get { return rockstarAlbumName_; }
      set {
        rockstarAlbumName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarAlias);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarAlias other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      if (RockstarAlbumName != other.RockstarAlbumName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (RockstarAlbumName.Length != 0) hash ^= RockstarAlbumName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(RockstarAlbumName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (RockstarAlbumName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarAlbumName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarAlias other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.RockstarAlbumName.Length != 0) {
        RockstarAlbumName = other.RockstarAlbumName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
          case 18: {
            RockstarAlbumName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRockstarFilters : pb::IMessage<QueryRockstarFilters> {
    private static readonly pb::MessageParser<QueryRockstarFilters> _parser = new pb::MessageParser<QueryRockstarFilters>(() => new QueryRockstarFilters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarFilters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[105]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarFilters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarFilters(QueryRockstarFilters other) : this() {
      ids_ = other.ids_.Clone();
      ages_ = other.ages_.Clone();
      firstNames_ = other.firstNames_.Clone();
      idsBetween_ = other.idsBetween_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarFilters Clone() {
      return new QueryRockstarFilters(this);
    }

    /// <summary>Field number for the "Ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<int> _repeated_ids_codec
        = pb::FieldCodec.ForInt32(8);
    private readonly pbc::RepeatedField<int> ids_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "Ages" field.</summary>
    public const int AgesFieldNumber = 2;
    private static readonly pb::FieldCodec<int> _repeated_ages_codec
        = pb::FieldCodec.ForInt32(16);
    private readonly pbc::RepeatedField<int> ages_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ages {
      get { return ages_; }
    }

    /// <summary>Field number for the "FirstNames" field.</summary>
    public const int FirstNamesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_firstNames_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> firstNames_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> FirstNames {
      get { return firstNames_; }
    }

    /// <summary>Field number for the "IdsBetween" field.</summary>
    public const int IdsBetweenFieldNumber = 4;
    private static readonly pb::FieldCodec<int> _repeated_idsBetween_codec
        = pb::FieldCodec.ForInt32(32);
    private readonly pbc::RepeatedField<int> idsBetween_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> IdsBetween {
      get { return idsBetween_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarFilters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarFilters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      if(!ages_.Equals(other.ages_)) return false;
      if(!firstNames_.Equals(other.firstNames_)) return false;
      if(!idsBetween_.Equals(other.idsBetween_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      hash ^= ages_.GetHashCode();
      hash ^= firstNames_.GetHashCode();
      hash ^= idsBetween_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      ages_.WriteTo(output, _repeated_ages_codec);
      firstNames_.WriteTo(output, _repeated_firstNames_codec);
      idsBetween_.WriteTo(output, _repeated_idsBetween_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      size += ages_.CalculateSize(_repeated_ages_codec);
      size += firstNames_.CalculateSize(_repeated_firstNames_codec);
      size += idsBetween_.CalculateSize(_repeated_idsBetween_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarFilters other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      ages_.Add(other.ages_);
      firstNames_.Add(other.firstNames_);
      idsBetween_.Add(other.idsBetween_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 18:
          case 16: {
            ages_.AddEntriesFrom(input, _repeated_ages_codec);
            break;
          }
          case 26: {
            firstNames_.AddEntriesFrom(input, _repeated_firstNames_codec);
            break;
          }
          case 34:
          case 32: {
            idsBetween_.AddEntriesFrom(input, _repeated_idsBetween_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRockstars : pb::IMessage<QueryRockstars> {
    private static readonly pb::MessageParser<QueryRockstars> _parser = new pb::MessageParser<QueryRockstars>(() => new QueryRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[106]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstars(QueryRockstars other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstars Clone() {
      return new QueryRockstars(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstars other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRockstarsConventions : pb::IMessage<QueryRockstarsConventions> {
    private static readonly pb::MessageParser<QueryRockstarsConventions> _parser = new pb::MessageParser<QueryRockstarsConventions>(() => new QueryRockstarsConventions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarsConventions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[107]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsConventions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsConventions(QueryRockstarsConventions other) : this() {
      dateOfBirthGreaterThan_ = other.dateOfBirthGreaterThan_ != null ? other.dateOfBirthGreaterThan_.Clone() : null;
      dateDiedLessThan_ = other.dateDiedLessThan_ != null ? other.dateDiedLessThan_.Clone() : null;
      ids_ = other.ids_.Clone();
      ageOlderThan_ = other.ageOlderThan_;
      ageGreaterThanOrEqualTo_ = other.ageGreaterThanOrEqualTo_;
      ageGreaterThan_ = other.ageGreaterThan_;
      greaterThanAge_ = other.greaterThanAge_;
      firstNameStartsWith_ = other.firstNameStartsWith_;
      lastNameEndsWith_ = other.lastNameEndsWith_;
      lastNameContains_ = other.lastNameContains_;
      rockstarAlbumNameContains_ = other.rockstarAlbumNameContains_;
      rockstarIdAfter_ = other.rockstarIdAfter_;
      rockstarIdOnOrAfter_ = other.rockstarIdOnOrAfter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsConventions Clone() {
      return new QueryRockstarsConventions(this);
    }

    /// <summary>Field number for the "DateOfBirthGreaterThan" field.</summary>
    public const int DateOfBirthGreaterThanFieldNumber = 1;
    private global::ProtoBuf.Bcl.DateTime dateOfBirthGreaterThan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime DateOfBirthGreaterThan {
      get { return dateOfBirthGreaterThan_; }
      set {
        dateOfBirthGreaterThan_ = value;
      }
    }

    /// <summary>Field number for the "DateDiedLessThan" field.</summary>
    public const int DateDiedLessThanFieldNumber = 2;
    private global::ProtoBuf.Bcl.DateTime dateDiedLessThan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime DateDiedLessThan {
      get { return dateDiedLessThan_; }
      set {
        dateDiedLessThan_ = value;
      }
    }

    /// <summary>Field number for the "Ids" field.</summary>
    public const int IdsFieldNumber = 3;
    private static readonly pb::FieldCodec<int> _repeated_ids_codec
        = pb::FieldCodec.ForInt32(24);
    private readonly pbc::RepeatedField<int> ids_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "AgeOlderThan" field.</summary>
    public const int AgeOlderThanFieldNumber = 4;
    private int ageOlderThan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AgeOlderThan {
      get { return ageOlderThan_; }
      set {
        ageOlderThan_ = value;
      }
    }

    /// <summary>Field number for the "AgeGreaterThanOrEqualTo" field.</summary>
    public const int AgeGreaterThanOrEqualToFieldNumber = 5;
    private int ageGreaterThanOrEqualTo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AgeGreaterThanOrEqualTo {
      get { return ageGreaterThanOrEqualTo_; }
      set {
        ageGreaterThanOrEqualTo_ = value;
      }
    }

    /// <summary>Field number for the "AgeGreaterThan" field.</summary>
    public const int AgeGreaterThanFieldNumber = 6;
    private int ageGreaterThan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int AgeGreaterThan {
      get { return ageGreaterThan_; }
      set {
        ageGreaterThan_ = value;
      }
    }

    /// <summary>Field number for the "GreaterThanAge" field.</summary>
    public const int GreaterThanAgeFieldNumber = 7;
    private int greaterThanAge_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GreaterThanAge {
      get { return greaterThanAge_; }
      set {
        greaterThanAge_ = value;
      }
    }

    /// <summary>Field number for the "FirstNameStartsWith" field.</summary>
    public const int FirstNameStartsWithFieldNumber = 8;
    private string firstNameStartsWith_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstNameStartsWith {
      get { return firstNameStartsWith_; }
      set {
        firstNameStartsWith_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastNameEndsWith" field.</summary>
    public const int LastNameEndsWithFieldNumber = 9;
    private string lastNameEndsWith_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastNameEndsWith {
      get { return lastNameEndsWith_; }
      set {
        lastNameEndsWith_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastNameContains" field.</summary>
    public const int LastNameContainsFieldNumber = 10;
    private string lastNameContains_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastNameContains {
      get { return lastNameContains_; }
      set {
        lastNameContains_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RockstarAlbumNameContains" field.</summary>
    public const int RockstarAlbumNameContainsFieldNumber = 11;
    private string rockstarAlbumNameContains_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RockstarAlbumNameContains {
      get { return rockstarAlbumNameContains_; }
      set {
        rockstarAlbumNameContains_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RockstarIdAfter" field.</summary>
    public const int RockstarIdAfterFieldNumber = 12;
    private int rockstarIdAfter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RockstarIdAfter {
      get { return rockstarIdAfter_; }
      set {
        rockstarIdAfter_ = value;
      }
    }

    /// <summary>Field number for the "RockstarIdOnOrAfter" field.</summary>
    public const int RockstarIdOnOrAfterFieldNumber = 13;
    private int rockstarIdOnOrAfter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RockstarIdOnOrAfter {
      get { return rockstarIdOnOrAfter_; }
      set {
        rockstarIdOnOrAfter_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarsConventions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarsConventions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(DateOfBirthGreaterThan, other.DateOfBirthGreaterThan)) return false;
      if (!object.Equals(DateDiedLessThan, other.DateDiedLessThan)) return false;
      if(!ids_.Equals(other.ids_)) return false;
      if (AgeOlderThan != other.AgeOlderThan) return false;
      if (AgeGreaterThanOrEqualTo != other.AgeGreaterThanOrEqualTo) return false;
      if (AgeGreaterThan != other.AgeGreaterThan) return false;
      if (GreaterThanAge != other.GreaterThanAge) return false;
      if (FirstNameStartsWith != other.FirstNameStartsWith) return false;
      if (LastNameEndsWith != other.LastNameEndsWith) return false;
      if (LastNameContains != other.LastNameContains) return false;
      if (RockstarAlbumNameContains != other.RockstarAlbumNameContains) return false;
      if (RockstarIdAfter != other.RockstarIdAfter) return false;
      if (RockstarIdOnOrAfter != other.RockstarIdOnOrAfter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (dateOfBirthGreaterThan_ != null) hash ^= DateOfBirthGreaterThan.GetHashCode();
      if (dateDiedLessThan_ != null) hash ^= DateDiedLessThan.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (AgeOlderThan != 0) hash ^= AgeOlderThan.GetHashCode();
      if (AgeGreaterThanOrEqualTo != 0) hash ^= AgeGreaterThanOrEqualTo.GetHashCode();
      if (AgeGreaterThan != 0) hash ^= AgeGreaterThan.GetHashCode();
      if (GreaterThanAge != 0) hash ^= GreaterThanAge.GetHashCode();
      if (FirstNameStartsWith.Length != 0) hash ^= FirstNameStartsWith.GetHashCode();
      if (LastNameEndsWith.Length != 0) hash ^= LastNameEndsWith.GetHashCode();
      if (LastNameContains.Length != 0) hash ^= LastNameContains.GetHashCode();
      if (RockstarAlbumNameContains.Length != 0) hash ^= RockstarAlbumNameContains.GetHashCode();
      if (RockstarIdAfter != 0) hash ^= RockstarIdAfter.GetHashCode();
      if (RockstarIdOnOrAfter != 0) hash ^= RockstarIdOnOrAfter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (dateOfBirthGreaterThan_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(DateOfBirthGreaterThan);
      }
      if (dateDiedLessThan_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(DateDiedLessThan);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (AgeOlderThan != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(AgeOlderThan);
      }
      if (AgeGreaterThanOrEqualTo != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(AgeGreaterThanOrEqualTo);
      }
      if (AgeGreaterThan != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(AgeGreaterThan);
      }
      if (GreaterThanAge != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(GreaterThanAge);
      }
      if (FirstNameStartsWith.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(FirstNameStartsWith);
      }
      if (LastNameEndsWith.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(LastNameEndsWith);
      }
      if (LastNameContains.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(LastNameContains);
      }
      if (RockstarAlbumNameContains.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(RockstarAlbumNameContains);
      }
      if (RockstarIdAfter != 0) {
        output.WriteRawTag(96);
        output.WriteInt32(RockstarIdAfter);
      }
      if (RockstarIdOnOrAfter != 0) {
        output.WriteRawTag(104);
        output.WriteInt32(RockstarIdOnOrAfter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (dateOfBirthGreaterThan_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateOfBirthGreaterThan);
      }
      if (dateDiedLessThan_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateDiedLessThan);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (AgeOlderThan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgeOlderThan);
      }
      if (AgeGreaterThanOrEqualTo != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgeGreaterThanOrEqualTo);
      }
      if (AgeGreaterThan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(AgeGreaterThan);
      }
      if (GreaterThanAge != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GreaterThanAge);
      }
      if (FirstNameStartsWith.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstNameStartsWith);
      }
      if (LastNameEndsWith.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastNameEndsWith);
      }
      if (LastNameContains.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastNameContains);
      }
      if (RockstarAlbumNameContains.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RockstarAlbumNameContains);
      }
      if (RockstarIdAfter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RockstarIdAfter);
      }
      if (RockstarIdOnOrAfter != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RockstarIdOnOrAfter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarsConventions other) {
      if (other == null) {
        return;
      }
      if (other.dateOfBirthGreaterThan_ != null) {
        if (dateOfBirthGreaterThan_ == null) {
          DateOfBirthGreaterThan = new global::ProtoBuf.Bcl.DateTime();
        }
        DateOfBirthGreaterThan.MergeFrom(other.DateOfBirthGreaterThan);
      }
      if (other.dateDiedLessThan_ != null) {
        if (dateDiedLessThan_ == null) {
          DateDiedLessThan = new global::ProtoBuf.Bcl.DateTime();
        }
        DateDiedLessThan.MergeFrom(other.DateDiedLessThan);
      }
      ids_.Add(other.ids_);
      if (other.AgeOlderThan != 0) {
        AgeOlderThan = other.AgeOlderThan;
      }
      if (other.AgeGreaterThanOrEqualTo != 0) {
        AgeGreaterThanOrEqualTo = other.AgeGreaterThanOrEqualTo;
      }
      if (other.AgeGreaterThan != 0) {
        AgeGreaterThan = other.AgeGreaterThan;
      }
      if (other.GreaterThanAge != 0) {
        GreaterThanAge = other.GreaterThanAge;
      }
      if (other.FirstNameStartsWith.Length != 0) {
        FirstNameStartsWith = other.FirstNameStartsWith;
      }
      if (other.LastNameEndsWith.Length != 0) {
        LastNameEndsWith = other.LastNameEndsWith;
      }
      if (other.LastNameContains.Length != 0) {
        LastNameContains = other.LastNameContains;
      }
      if (other.RockstarAlbumNameContains.Length != 0) {
        RockstarAlbumNameContains = other.RockstarAlbumNameContains;
      }
      if (other.RockstarIdAfter != 0) {
        RockstarIdAfter = other.RockstarIdAfter;
      }
      if (other.RockstarIdOnOrAfter != 0) {
        RockstarIdOnOrAfter = other.RockstarIdOnOrAfter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (dateOfBirthGreaterThan_ == null) {
              DateOfBirthGreaterThan = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(DateOfBirthGreaterThan);
            break;
          }
          case 18: {
            if (dateDiedLessThan_ == null) {
              DateDiedLessThan = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(DateDiedLessThan);
            break;
          }
          case 26:
          case 24: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 32: {
            AgeOlderThan = input.ReadInt32();
            break;
          }
          case 40: {
            AgeGreaterThanOrEqualTo = input.ReadInt32();
            break;
          }
          case 48: {
            AgeGreaterThan = input.ReadInt32();
            break;
          }
          case 56: {
            GreaterThanAge = input.ReadInt32();
            break;
          }
          case 66: {
            FirstNameStartsWith = input.ReadString();
            break;
          }
          case 74: {
            LastNameEndsWith = input.ReadString();
            break;
          }
          case 82: {
            LastNameContains = input.ReadString();
            break;
          }
          case 90: {
            RockstarAlbumNameContains = input.ReadString();
            break;
          }
          case 96: {
            RockstarIdAfter = input.ReadInt32();
            break;
          }
          case 104: {
            RockstarIdOnOrAfter = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRockstarsFilter : pb::IMessage<QueryRockstarsFilter> {
    private static readonly pb::MessageParser<QueryRockstarsFilter> _parser = new pb::MessageParser<QueryRockstarsFilter>(() => new QueryRockstarsFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarsFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[108]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsFilter(QueryRockstarsFilter other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsFilter Clone() {
      return new QueryRockstarsFilter(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarsFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarsFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarsFilter other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRockstarsIFilter : pb::IMessage<QueryRockstarsIFilter> {
    private static readonly pb::MessageParser<QueryRockstarsIFilter> _parser = new pb::MessageParser<QueryRockstarsIFilter>(() => new QueryRockstarsIFilter());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarsIFilter> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[109]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsIFilter() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsIFilter(QueryRockstarsIFilter other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsIFilter Clone() {
      return new QueryRockstarsIFilter(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarsIFilter);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarsIFilter other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarsIFilter other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryRockstarsImplicit : pb::IMessage<QueryRockstarsImplicit> {
    private static readonly pb::MessageParser<QueryRockstarsImplicit> _parser = new pb::MessageParser<QueryRockstarsImplicit>(() => new QueryRockstarsImplicit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarsImplicit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[110]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsImplicit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsImplicit(QueryRockstarsImplicit other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsImplicit Clone() {
      return new QueryRockstarsImplicit(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarsImplicit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarsImplicit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarsImplicit other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class QueryRockstarsWithReferences : pb::IMessage<QueryRockstarsWithReferences> {
    private static readonly pb::MessageParser<QueryRockstarsWithReferences> _parser = new pb::MessageParser<QueryRockstarsWithReferences>(() => new QueryRockstarsWithReferences());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryRockstarsWithReferences> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[111]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsWithReferences() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsWithReferences(QueryRockstarsWithReferences other) : this() {
      age_ = other.age_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryRockstarsWithReferences Clone() {
      return new QueryRockstarsWithReferences(this);
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 1;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryRockstarsWithReferences);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryRockstarsWithReferences other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Age != other.Age) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Age != 0) hash ^= Age.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Age != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Age);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryRockstarsWithReferences other) {
      if (other == null) {
        return;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Age = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class QueryTypeWithEnums : pb::IMessage<QueryTypeWithEnums> {
    private static readonly pb::MessageParser<QueryTypeWithEnums> _parser = new pb::MessageParser<QueryTypeWithEnums>(() => new QueryTypeWithEnums());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryTypeWithEnums> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[112]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryTypeWithEnums() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryTypeWithEnums(QueryTypeWithEnums other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryTypeWithEnums Clone() {
      return new QueryTypeWithEnums(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryTypeWithEnums);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryTypeWithEnums other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryTypeWithEnums other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class QueryUnknownRockstars : pb::IMessage<QueryUnknownRockstars> {
    private static readonly pb::MessageParser<QueryUnknownRockstars> _parser = new pb::MessageParser<QueryUnknownRockstars>(() => new QueryUnknownRockstars());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<QueryUnknownRockstars> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[113]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryUnknownRockstars() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryUnknownRockstars(QueryUnknownRockstars other) : this() {
      unknownInt_ = other.unknownInt_;
      unknownProperty_ = other.unknownProperty_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public QueryUnknownRockstars Clone() {
      return new QueryUnknownRockstars(this);
    }

    /// <summary>Field number for the "UnknownInt" field.</summary>
    public const int UnknownIntFieldNumber = 1;
    private int unknownInt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int UnknownInt {
      get { return unknownInt_; }
      set {
        unknownInt_ = value;
      }
    }

    /// <summary>Field number for the "UnknownProperty" field.</summary>
    public const int UnknownPropertyFieldNumber = 2;
    private string unknownProperty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnknownProperty {
      get { return unknownProperty_; }
      set {
        unknownProperty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as QueryUnknownRockstars);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(QueryUnknownRockstars other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UnknownInt != other.UnknownInt) return false;
      if (UnknownProperty != other.UnknownProperty) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UnknownInt != 0) hash ^= UnknownInt.GetHashCode();
      if (UnknownProperty.Length != 0) hash ^= UnknownProperty.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UnknownInt != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(UnknownInt);
      }
      if (UnknownProperty.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(UnknownProperty);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UnknownInt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(UnknownInt);
      }
      if (UnknownProperty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UnknownProperty);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(QueryUnknownRockstars other) {
      if (other == null) {
        return;
      }
      if (other.UnknownInt != 0) {
        UnknownInt = other.UnknownInt;
      }
      if (other.UnknownProperty.Length != 0) {
        UnknownProperty = other.UnknownProperty;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            UnknownInt = input.ReadInt32();
            break;
          }
          case 18: {
            UnknownProperty = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegenerateApiKeys : pb::IMessage<RegenerateApiKeys> {
    private static readonly pb::MessageParser<RegenerateApiKeys> _parser = new pb::MessageParser<RegenerateApiKeys>(() => new RegenerateApiKeys());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegenerateApiKeys> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[114]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeys() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeys(RegenerateApiKeys other) : this() {
      environment_ = other.environment_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeys Clone() {
      return new RegenerateApiKeys(this);
    }

    /// <summary>Field number for the "Environment" field.</summary>
    public const int EnvironmentFieldNumber = 1;
    private string environment_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Environment {
      get { return environment_; }
      set {
        environment_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegenerateApiKeys);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegenerateApiKeys other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Environment != other.Environment) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Environment.Length != 0) hash ^= Environment.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Environment.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Environment);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Environment.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Environment);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegenerateApiKeys other) {
      if (other == null) {
        return;
      }
      if (other.Environment.Length != 0) {
        Environment = other.Environment;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Environment = input.ReadString();
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegenerateApiKeysResponse : pb::IMessage<RegenerateApiKeysResponse> {
    private static readonly pb::MessageParser<RegenerateApiKeysResponse> _parser = new pb::MessageParser<RegenerateApiKeysResponse>(() => new RegenerateApiKeysResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegenerateApiKeysResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[115]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeysResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeysResponse(RegenerateApiKeysResponse other) : this() {
      results_ = other.results_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegenerateApiKeysResponse Clone() {
      return new RegenerateApiKeysResponse(this);
    }

    /// <summary>Field number for the "Results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::ServiceStack.Extensions.Tests.Protoc.UserApiKey.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> results_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.UserApiKey> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 3;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegenerateApiKeysResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegenerateApiKeysResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegenerateApiKeysResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
          case 18: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 26: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Register : pb::IMessage<Register> {
    private static readonly pb::MessageParser<Register> _parser = new pb::MessageParser<Register>(() => new Register());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Register> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[116]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Register() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Register(Register other) : this() {
      userName_ = other.userName_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      displayName_ = other.displayName_;
      email_ = other.email_;
      password_ = other.password_;
      confirmPassword_ = other.confirmPassword_;
      autoLogin_ = other.autoLogin_;
      continue_ = other.continue_;
      errorView_ = other.errorView_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Register Clone() {
      return new Register(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 4;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 5;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Password" field.</summary>
    public const int PasswordFieldNumber = 6;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ConfirmPassword" field.</summary>
    public const int ConfirmPasswordFieldNumber = 7;
    private string confirmPassword_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ConfirmPassword {
      get { return confirmPassword_; }
      set {
        confirmPassword_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "AutoLogin" field.</summary>
    public const int AutoLoginFieldNumber = 8;
    private bool autoLogin_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoLogin {
      get { return autoLogin_; }
      set {
        autoLogin_ = value;
      }
    }

    /// <summary>Field number for the "Continue" field.</summary>
    public const int ContinueFieldNumber = 9;
    private string continue_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Continue {
      get { return continue_; }
      set {
        continue_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ErrorView" field.</summary>
    public const int ErrorViewFieldNumber = 10;
    private string errorView_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorView {
      get { return errorView_; }
      set {
        errorView_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 11;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 90);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Register);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Register other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (DisplayName != other.DisplayName) return false;
      if (Email != other.Email) return false;
      if (Password != other.Password) return false;
      if (ConfirmPassword != other.ConfirmPassword) return false;
      if (AutoLogin != other.AutoLogin) return false;
      if (Continue != other.Continue) return false;
      if (ErrorView != other.ErrorView) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (ConfirmPassword.Length != 0) hash ^= ConfirmPassword.GetHashCode();
      if (AutoLogin != false) hash ^= AutoLogin.GetHashCode();
      if (Continue.Length != 0) hash ^= Continue.GetHashCode();
      if (ErrorView.Length != 0) hash ^= ErrorView.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DisplayName);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Email);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Password);
      }
      if (ConfirmPassword.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ConfirmPassword);
      }
      if (AutoLogin != false) {
        output.WriteRawTag(64);
        output.WriteBool(AutoLogin);
      }
      if (Continue.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Continue);
      }
      if (ErrorView.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(ErrorView);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (ConfirmPassword.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ConfirmPassword);
      }
      if (AutoLogin != false) {
        size += 1 + 1;
      }
      if (Continue.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Continue);
      }
      if (ErrorView.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorView);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Register other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      if (other.ConfirmPassword.Length != 0) {
        ConfirmPassword = other.ConfirmPassword;
      }
      if (other.AutoLogin != false) {
        AutoLogin = other.AutoLogin;
      }
      if (other.Continue.Length != 0) {
        Continue = other.Continue;
      }
      if (other.ErrorView.Length != 0) {
        ErrorView = other.ErrorView;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 34: {
            DisplayName = input.ReadString();
            break;
          }
          case 42: {
            Email = input.ReadString();
            break;
          }
          case 50: {
            Password = input.ReadString();
            break;
          }
          case 58: {
            ConfirmPassword = input.ReadString();
            break;
          }
          case 64: {
            AutoLogin = input.ReadBool();
            break;
          }
          case 74: {
            Continue = input.ReadString();
            break;
          }
          case 82: {
            ErrorView = input.ReadString();
            break;
          }
          case 90: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RegisterResponse : pb::IMessage<RegisterResponse> {
    private static readonly pb::MessageParser<RegisterResponse> _parser = new pb::MessageParser<RegisterResponse>(() => new RegisterResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RegisterResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[117]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse(RegisterResponse other) : this() {
      userId_ = other.userId_;
      sessionId_ = other.sessionId_;
      userName_ = other.userName_;
      referrerUrl_ = other.referrerUrl_;
      bearerToken_ = other.bearerToken_;
      refreshToken_ = other.refreshToken_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RegisterResponse Clone() {
      return new RegisterResponse(this);
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 1;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SessionId" field.</summary>
    public const int SessionIdFieldNumber = 2;
    private string sessionId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SessionId {
      get { return sessionId_; }
      set {
        sessionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 3;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ReferrerUrl" field.</summary>
    public const int ReferrerUrlFieldNumber = 4;
    private string referrerUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReferrerUrl {
      get { return referrerUrl_; }
      set {
        referrerUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BearerToken" field.</summary>
    public const int BearerTokenFieldNumber = 5;
    private string bearerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BearerToken {
      get { return bearerToken_; }
      set {
        bearerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RefreshToken" field.</summary>
    public const int RefreshTokenFieldNumber = 6;
    private string refreshToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RefreshToken {
      get { return refreshToken_; }
      set {
        refreshToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 7;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 8;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 66);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RegisterResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RegisterResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserId != other.UserId) return false;
      if (SessionId != other.SessionId) return false;
      if (UserName != other.UserName) return false;
      if (ReferrerUrl != other.ReferrerUrl) return false;
      if (BearerToken != other.BearerToken) return false;
      if (RefreshToken != other.RefreshToken) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (SessionId.Length != 0) hash ^= SessionId.GetHashCode();
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      if (ReferrerUrl.Length != 0) hash ^= ReferrerUrl.GetHashCode();
      if (BearerToken.Length != 0) hash ^= BearerToken.GetHashCode();
      if (RefreshToken.Length != 0) hash ^= RefreshToken.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserId);
      }
      if (SessionId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SessionId);
      }
      if (UserName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UserName);
      }
      if (ReferrerUrl.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(RefreshToken);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(ResponseStatus);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (SessionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SessionId);
      }
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      if (ReferrerUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReferrerUrl);
      }
      if (BearerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BearerToken);
      }
      if (RefreshToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RefreshToken);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RegisterResponse other) {
      if (other == null) {
        return;
      }
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.SessionId.Length != 0) {
        SessionId = other.SessionId;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      if (other.ReferrerUrl.Length != 0) {
        ReferrerUrl = other.ReferrerUrl;
      }
      if (other.BearerToken.Length != 0) {
        BearerToken = other.BearerToken;
      }
      if (other.RefreshToken.Length != 0) {
        RefreshToken = other.RefreshToken;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserId = input.ReadString();
            break;
          }
          case 18: {
            SessionId = input.ReadString();
            break;
          }
          case 26: {
            UserName = input.ReadString();
            break;
          }
          case 34: {
            ReferrerUrl = input.ReadString();
            break;
          }
          case 42: {
            BearerToken = input.ReadString();
            break;
          }
          case 50: {
            RefreshToken = input.ReadString();
            break;
          }
          case 58: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
          case 66: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class RequiresAuth : pb::IMessage<RequiresAuth> {
    private static readonly pb::MessageParser<RequiresAuth> _parser = new pb::MessageParser<RequiresAuth>(() => new RequiresAuth());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RequiresAuth> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[118]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequiresAuth() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequiresAuth(RequiresAuth other) : this() {
      name_ = other.name_;
      bearerToken_ = other.bearerToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RequiresAuth Clone() {
      return new RequiresAuth(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "BearerToken" field.</summary>
    public const int BearerTokenFieldNumber = 2;
    private string bearerToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BearerToken {
      get { return bearerToken_; }
      set {
        bearerToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RequiresAuth);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RequiresAuth other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (BearerToken != other.BearerToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (BearerToken.Length != 0) hash ^= BearerToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (BearerToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BearerToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (BearerToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BearerToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RequiresAuth other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.BearerToken.Length != 0) {
        BearerToken = other.BearerToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            BearerToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResetTodos : pb::IMessage<ResetTodos> {
    private static readonly pb::MessageParser<ResetTodos> _parser = new pb::MessageParser<ResetTodos>(() => new ResetTodos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResetTodos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[119]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetTodos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetTodos(ResetTodos other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResetTodos Clone() {
      return new ResetTodos(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResetTodos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResetTodos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResetTodos other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ResponseError : pb::IMessage<ResponseError> {
    private static readonly pb::MessageParser<ResponseError> _parser = new pb::MessageParser<ResponseError>(() => new ResponseError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[120]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseError(ResponseError other) : this() {
      errorCode_ = other.errorCode_;
      fieldName_ = other.fieldName_;
      message_ = other.message_;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseError Clone() {
      return new ResponseError(this);
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private string errorCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "FieldName" field.</summary>
    public const int FieldNameFieldNumber = 2;
    private string fieldName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FieldName {
      get { return fieldName_; }
      set {
        fieldName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 3;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (FieldName != other.FieldName) return false;
      if (Message != other.Message) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode.Length != 0) hash ^= ErrorCode.GetHashCode();
      if (FieldName.Length != 0) hash ^= FieldName.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ErrorCode);
      }
      if (FieldName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FieldName);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Message);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (FieldName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FieldName);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseError other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode.Length != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.FieldName.Length != 0) {
        FieldName = other.FieldName;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ErrorCode = input.ReadString();
            break;
          }
          case 18: {
            FieldName = input.ReadString();
            break;
          }
          case 26: {
            Message = input.ReadString();
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResponseStatus : pb::IMessage<ResponseStatus> {
    private static readonly pb::MessageParser<ResponseStatus> _parser = new pb::MessageParser<ResponseStatus>(() => new ResponseStatus());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResponseStatus> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[121]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus(ResponseStatus other) : this() {
      errorCode_ = other.errorCode_;
      message_ = other.message_;
      stackTrace_ = other.stackTrace_;
      errors_ = other.errors_.Clone();
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResponseStatus Clone() {
      return new ResponseStatus(this);
    }

    /// <summary>Field number for the "ErrorCode" field.</summary>
    public const int ErrorCodeFieldNumber = 1;
    private string errorCode_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ErrorCode {
      get { return errorCode_; }
      set {
        errorCode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 2;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "StackTrace" field.</summary>
    public const int StackTraceFieldNumber = 3;
    private string stackTrace_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string StackTrace {
      get { return stackTrace_; }
      set {
        stackTrace_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Errors" field.</summary>
    public const int ErrorsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.ResponseError> _repeated_errors_codec
        = pb::FieldCodec.ForMessage(34, global::ServiceStack.Extensions.Tests.Protoc.ResponseError.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.ResponseError> errors_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.ResponseError>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.ResponseError> Errors {
      get { return errors_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 42);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResponseStatus);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResponseStatus other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ErrorCode != other.ErrorCode) return false;
      if (Message != other.Message) return false;
      if (StackTrace != other.StackTrace) return false;
      if(!errors_.Equals(other.errors_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ErrorCode.Length != 0) hash ^= ErrorCode.GetHashCode();
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (StackTrace.Length != 0) hash ^= StackTrace.GetHashCode();
      hash ^= errors_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ErrorCode.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ErrorCode);
      }
      if (Message.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Message);
      }
      if (StackTrace.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(StackTrace);
      }
      errors_.WriteTo(output, _repeated_errors_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ErrorCode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ErrorCode);
      }
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (StackTrace.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(StackTrace);
      }
      size += errors_.CalculateSize(_repeated_errors_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResponseStatus other) {
      if (other == null) {
        return;
      }
      if (other.ErrorCode.Length != 0) {
        ErrorCode = other.ErrorCode;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      if (other.StackTrace.Length != 0) {
        StackTrace = other.StackTrace;
      }
      errors_.Add(other.errors_);
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ErrorCode = input.ReadString();
            break;
          }
          case 18: {
            Message = input.ReadString();
            break;
          }
          case 26: {
            StackTrace = input.ReadString();
            break;
          }
          case 34: {
            errors_.AddEntriesFrom(input, _repeated_errors_codec);
            break;
          }
          case 42: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Rockstar : pb::IMessage<Rockstar> {
    private static readonly pb::MessageParser<Rockstar> _parser = new pb::MessageParser<Rockstar>(() => new Rockstar());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Rockstar> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[122]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rockstar() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rockstar(Rockstar other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      age_ = other.age_;
      dateOfBirth_ = other.dateOfBirth_ != null ? other.dateOfBirth_.Clone() : null;
      dateDied_ = other.dateDied_ != null ? other.dateDied_.Clone() : null;
      livingStatus_ = other.livingStatus_;
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.NamedRockstar:
          NamedRockstar = other.NamedRockstar.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Rockstar Clone() {
      return new Rockstar(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 4;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "DateOfBirth" field.</summary>
    public const int DateOfBirthFieldNumber = 5;
    private global::ProtoBuf.Bcl.DateTime dateOfBirth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime DateOfBirth {
      get { return dateOfBirth_; }
      set {
        dateOfBirth_ = value;
      }
    }

    /// <summary>Field number for the "DateDied" field.</summary>
    public const int DateDiedFieldNumber = 6;
    private global::ProtoBuf.Bcl.DateTime dateDied_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime DateDied {
      get { return dateDied_; }
      set {
        dateDied_ = value;
      }
    }

    /// <summary>Field number for the "LivingStatus" field.</summary>
    public const int LivingStatusFieldNumber = 7;
    private global::ServiceStack.Extensions.Tests.Protoc.LivingStatus livingStatus_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.LivingStatus LivingStatus {
      get { return livingStatus_; }
      set {
        livingStatus_ = value;
      }
    }

    /// <summary>Field number for the "NamedRockstar" field.</summary>
    public const int NamedRockstarFieldNumber = 345091624;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.NamedRockstar NamedRockstar {
      get { return subtypeCase_ == SubtypeOneofCase.NamedRockstar ? (global::ServiceStack.Extensions.Tests.Protoc.NamedRockstar) subtype_ : null; }
      set {
        subtype_ = value;
        subtypeCase_ = value == null ? SubtypeOneofCase.None : SubtypeOneofCase.NamedRockstar;
      }
    }

    private object subtype_;
    /// <summary>Enum of possible cases for the "subtype" oneof.</summary>
    public enum SubtypeOneofCase {
      None = 0,
      NamedRockstar = 345091624,
    }
    private SubtypeOneofCase subtypeCase_ = SubtypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SubtypeOneofCase SubtypeCase {
      get { return subtypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSubtype() {
      subtypeCase_ = SubtypeOneofCase.None;
      subtype_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Rockstar);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Rockstar other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Age != other.Age) return false;
      if (!object.Equals(DateOfBirth, other.DateOfBirth)) return false;
      if (!object.Equals(DateDied, other.DateDied)) return false;
      if (LivingStatus != other.LivingStatus) return false;
      if (!object.Equals(NamedRockstar, other.NamedRockstar)) return false;
      if (SubtypeCase != other.SubtypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      if (dateOfBirth_ != null) hash ^= DateOfBirth.GetHashCode();
      if (dateDied_ != null) hash ^= DateDied.GetHashCode();
      if (LivingStatus != 0) hash ^= LivingStatus.GetHashCode();
      if (subtypeCase_ == SubtypeOneofCase.NamedRockstar) hash ^= NamedRockstar.GetHashCode();
      hash ^= (int) subtypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (Age != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Age);
      }
      if (dateOfBirth_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(DateOfBirth);
      }
      if (dateDied_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(DateDied);
      }
      if (LivingStatus != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) LivingStatus);
      }
      if (subtypeCase_ == SubtypeOneofCase.NamedRockstar) {
        output.WriteRawTag(194, 226, 181, 164, 10);
        output.WriteMessage(NamedRockstar);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      if (dateOfBirth_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateOfBirth);
      }
      if (dateDied_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(DateDied);
      }
      if (LivingStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LivingStatus);
      }
      if (subtypeCase_ == SubtypeOneofCase.NamedRockstar) {
        size += 5 + pb::CodedOutputStream.ComputeMessageSize(NamedRockstar);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Rockstar other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      if (other.dateOfBirth_ != null) {
        if (dateOfBirth_ == null) {
          DateOfBirth = new global::ProtoBuf.Bcl.DateTime();
        }
        DateOfBirth.MergeFrom(other.DateOfBirth);
      }
      if (other.dateDied_ != null) {
        if (dateDied_ == null) {
          DateDied = new global::ProtoBuf.Bcl.DateTime();
        }
        DateDied.MergeFrom(other.DateDied);
      }
      if (other.LivingStatus != 0) {
        LivingStatus = other.LivingStatus;
      }
      switch (other.SubtypeCase) {
        case SubtypeOneofCase.NamedRockstar:
          if (NamedRockstar == null) {
            NamedRockstar = new global::ServiceStack.Extensions.Tests.Protoc.NamedRockstar();
          }
          NamedRockstar.MergeFrom(other.NamedRockstar);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 32: {
            Age = input.ReadInt32();
            break;
          }
          case 42: {
            if (dateOfBirth_ == null) {
              DateOfBirth = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(DateOfBirth);
            break;
          }
          case 50: {
            if (dateDied_ == null) {
              DateDied = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(DateDied);
            break;
          }
          case 56: {
            LivingStatus = (global::ServiceStack.Extensions.Tests.Protoc.LivingStatus) input.ReadEnum();
            break;
          }
          case 2760732994: {
            global::ServiceStack.Extensions.Tests.Protoc.NamedRockstar subBuilder = new global::ServiceStack.Extensions.Tests.Protoc.NamedRockstar();
            if (subtypeCase_ == SubtypeOneofCase.NamedRockstar) {
              subBuilder.MergeFrom(NamedRockstar);
            }
            input.ReadMessage(subBuilder);
            NamedRockstar = subBuilder;
            break;
          }
        }
      }
    }

  }

  public sealed partial class RockstarAlbum : pb::IMessage<RockstarAlbum> {
    private static readonly pb::MessageParser<RockstarAlbum> _parser = new pb::MessageParser<RockstarAlbum>(() => new RockstarAlbum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RockstarAlbum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[123]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarAlbum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarAlbum(RockstarAlbum other) : this() {
      id_ = other.id_;
      rockstarId_ = other.rockstarId_;
      name_ = other.name_;
      genre_ = other.genre_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarAlbum Clone() {
      return new RockstarAlbum(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "RockstarId" field.</summary>
    public const int RockstarIdFieldNumber = 2;
    private int rockstarId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RockstarId {
      get { return rockstarId_; }
      set {
        rockstarId_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Genre" field.</summary>
    public const int GenreFieldNumber = 4;
    private string genre_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Genre {
      get { return genre_; }
      set {
        genre_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RockstarAlbum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RockstarAlbum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (RockstarId != other.RockstarId) return false;
      if (Name != other.Name) return false;
      if (Genre != other.Genre) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (RockstarId != 0) hash ^= RockstarId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Genre.Length != 0) hash ^= Genre.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (RockstarId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(RockstarId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Genre.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Genre);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (RockstarId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RockstarId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Genre.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Genre);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RockstarAlbum other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.RockstarId != 0) {
        RockstarId = other.RockstarId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Genre.Length != 0) {
        Genre = other.Genre;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            RockstarId = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Genre = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RockstarAlias : pb::IMessage<RockstarAlias> {
    private static readonly pb::MessageParser<RockstarAlias> _parser = new pb::MessageParser<RockstarAlias>(() => new RockstarAlias());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RockstarAlias> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[124]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarAlias() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarAlias(RockstarAlias other) : this() {
      rockstarId_ = other.rockstarId_;
      firstName_ = other.firstName_;
      surname_ = other.surname_;
      album_ = other.album_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarAlias Clone() {
      return new RockstarAlias(this);
    }

    /// <summary>Field number for the "RockstarId" field.</summary>
    public const int RockstarIdFieldNumber = 1;
    private int rockstarId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int RockstarId {
      get { return rockstarId_; }
      set {
        rockstarId_ = value;
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Surname" field.</summary>
    public const int SurnameFieldNumber = 3;
    private string surname_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Surname {
      get { return surname_; }
      set {
        surname_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "album" field.</summary>
    public const int AlbumFieldNumber = 4;
    private string album_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Album {
      get { return album_; }
      set {
        album_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RockstarAlias);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RockstarAlias other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RockstarId != other.RockstarId) return false;
      if (FirstName != other.FirstName) return false;
      if (Surname != other.Surname) return false;
      if (Album != other.Album) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RockstarId != 0) hash ^= RockstarId.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (Surname.Length != 0) hash ^= Surname.GetHashCode();
      if (Album.Length != 0) hash ^= Album.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RockstarId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(RockstarId);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (Surname.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Surname);
      }
      if (Album.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Album);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RockstarId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(RockstarId);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (Surname.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Surname);
      }
      if (Album.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Album);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RockstarAlias other) {
      if (other == null) {
        return;
      }
      if (other.RockstarId != 0) {
        RockstarId = other.RockstarId;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.Surname.Length != 0) {
        Surname = other.Surname;
      }
      if (other.Album.Length != 0) {
        Album = other.Album;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            RockstarId = input.ReadInt32();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            Surname = input.ReadString();
            break;
          }
          case 34: {
            Album = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class RockstarReference : pb::IMessage<RockstarReference> {
    private static readonly pb::MessageParser<RockstarReference> _parser = new pb::MessageParser<RockstarReference>(() => new RockstarReference());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RockstarReference> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[125]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarReference() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarReference(RockstarReference other) : this() {
      id_ = other.id_;
      firstName_ = other.firstName_;
      lastName_ = other.lastName_;
      age_ = other.age_;
      albums_ = other.albums_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RockstarReference Clone() {
      return new RockstarReference(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "FirstName" field.</summary>
    public const int FirstNameFieldNumber = 2;
    private string firstName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FirstName {
      get { return firstName_; }
      set {
        firstName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LastName" field.</summary>
    public const int LastNameFieldNumber = 3;
    private string lastName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LastName {
      get { return lastName_; }
      set {
        lastName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Age" field.</summary>
    public const int AgeFieldNumber = 4;
    private int age_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Age {
      get { return age_; }
      set {
        age_ = value;
      }
    }

    /// <summary>Field number for the "Albums" field.</summary>
    public const int AlbumsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum> _repeated_albums_codec
        = pb::FieldCodec.ForMessage(42, global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum.Parser);
    private readonly pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum> albums_ = new pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ServiceStack.Extensions.Tests.Protoc.RockstarAlbum> Albums {
      get { return albums_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RockstarReference);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RockstarReference other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FirstName != other.FirstName) return false;
      if (LastName != other.LastName) return false;
      if (Age != other.Age) return false;
      if(!albums_.Equals(other.albums_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (FirstName.Length != 0) hash ^= FirstName.GetHashCode();
      if (LastName.Length != 0) hash ^= LastName.GetHashCode();
      if (Age != 0) hash ^= Age.GetHashCode();
      hash ^= albums_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (FirstName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FirstName);
      }
      if (LastName.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LastName);
      }
      if (Age != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(Age);
      }
      albums_.WriteTo(output, _repeated_albums_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (FirstName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FirstName);
      }
      if (LastName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LastName);
      }
      if (Age != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Age);
      }
      size += albums_.CalculateSize(_repeated_albums_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RockstarReference other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.FirstName.Length != 0) {
        FirstName = other.FirstName;
      }
      if (other.LastName.Length != 0) {
        LastName = other.LastName;
      }
      if (other.Age != 0) {
        Age = other.Age;
      }
      albums_.Add(other.albums_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            FirstName = input.ReadString();
            break;
          }
          case 26: {
            LastName = input.ReadString();
            break;
          }
          case 32: {
            Age = input.ReadInt32();
            break;
          }
          case 42: {
            albums_.AddEntriesFrom(input, _repeated_albums_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SearchMovies : pb::IMessage<SearchMovies> {
    private static readonly pb::MessageParser<SearchMovies> _parser = new pb::MessageParser<SearchMovies>(() => new SearchMovies());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SearchMovies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[126]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchMovies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchMovies(SearchMovies other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SearchMovies Clone() {
      return new SearchMovies(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SearchMovies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SearchMovies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SearchMovies other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class Secured : pb::IMessage<Secured> {
    private static readonly pb::MessageParser<Secured> _parser = new pb::MessageParser<Secured>(() => new Secured());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Secured> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[127]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secured() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secured(Secured other) : this() {
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Secured Clone() {
      return new Secured(this);
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Secured);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Secured other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Secured other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SecuredResponse : pb::IMessage<SecuredResponse> {
    private static readonly pb::MessageParser<SecuredResponse> _parser = new pb::MessageParser<SecuredResponse>(() => new SecuredResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SecuredResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[128]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecuredResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecuredResponse(SecuredResponse other) : this() {
      result_ = other.result_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SecuredResponse Clone() {
      return new SecuredResponse(this);
    }

    /// <summary>Field number for the "Result" field.</summary>
    public const int ResultFieldNumber = 1;
    private string result_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Result {
      get { return result_; }
      set {
        result_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 2;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SecuredResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SecuredResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Result != other.Result) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Result.Length != 0) hash ^= Result.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Result.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Result);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Result.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Result);
      }
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SecuredResponse other) {
      if (other == null) {
        return;
      }
      if (other.Result.Length != 0) {
        Result = other.Result;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Result = input.ReadString();
            break;
          }
          case 18: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamFiles : pb::IMessage<StreamFiles> {
    private static readonly pb::MessageParser<StreamFiles> _parser = new pb::MessageParser<StreamFiles>(() => new StreamFiles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamFiles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[129]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFiles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFiles(StreamFiles other) : this() {
      paths_ = other.paths_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamFiles Clone() {
      return new StreamFiles(this);
    }

    /// <summary>Field number for the "Paths" field.</summary>
    public const int PathsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_paths_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> paths_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Paths {
      get { return paths_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamFiles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamFiles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!paths_.Equals(other.paths_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= paths_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      paths_.WriteTo(output, _repeated_paths_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += paths_.CalculateSize(_repeated_paths_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamFiles other) {
      if (other == null) {
        return;
      }
      paths_.Add(other.paths_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            paths_.AddEntriesFrom(input, _repeated_paths_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamMovies : pb::IMessage<StreamMovies> {
    private static readonly pb::MessageParser<StreamMovies> _parser = new pb::MessageParser<StreamMovies>(() => new StreamMovies());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamMovies> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[130]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMovies() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMovies(StreamMovies other) : this() {
      ratings_ = other.ratings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamMovies Clone() {
      return new StreamMovies(this);
    }

    /// <summary>Field number for the "Ratings" field.</summary>
    public const int RatingsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_ratings_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> ratings_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Ratings {
      get { return ratings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamMovies);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamMovies other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ratings_.Equals(other.ratings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ratings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ratings_.WriteTo(output, _repeated_ratings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ratings_.CalculateSize(_repeated_ratings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamMovies other) {
      if (other == null) {
        return;
      }
      ratings_.Add(other.ratings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ratings_.AddEntriesFrom(input, _repeated_ratings_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamServerEvents : pb::IMessage<StreamServerEvents> {
    private static readonly pb::MessageParser<StreamServerEvents> _parser = new pb::MessageParser<StreamServerEvents>(() => new StreamServerEvents());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamServerEvents> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[131]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEvents() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEvents(StreamServerEvents other) : this() {
      channels_ = other.channels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEvents Clone() {
      return new StreamServerEvents(this);
    }

    /// <summary>Field number for the "Channels" field.</summary>
    public const int ChannelsFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_channels_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> channels_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Channels {
      get { return channels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamServerEvents);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamServerEvents other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!channels_.Equals(other.channels_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= channels_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      channels_.WriteTo(output, _repeated_channels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += channels_.CalculateSize(_repeated_channels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamServerEvents other) {
      if (other == null) {
        return;
      }
      channels_.Add(other.channels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            channels_.AddEntriesFrom(input, _repeated_channels_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class StreamServerEventsResponse : pb::IMessage<StreamServerEventsResponse> {
    private static readonly pb::MessageParser<StreamServerEventsResponse> _parser = new pb::MessageParser<StreamServerEventsResponse>(() => new StreamServerEventsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamServerEventsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[132]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse(StreamServerEventsResponse other) : this() {
      eventId_ = other.eventId_;
      channel_ = other.channel_;
      selector_ = other.selector_;
      json_ = other.json_;
      op_ = other.op_;
      target_ = other.target_;
      cssSelector_ = other.cssSelector_;
      meta_ = other.meta_.Clone();
      userId_ = other.userId_;
      displayName_ = other.displayName_;
      profileUrl_ = other.profileUrl_;
      isAuthenticated_ = other.isAuthenticated_;
      channels_ = other.channels_.Clone();
      createdAt_ = other.createdAt_;
      id_ = other.id_;
      unRegisterUrl_ = other.unRegisterUrl_;
      updateSubscriberUrl_ = other.updateSubscriberUrl_;
      heartbeatUrl_ = other.heartbeatUrl_;
      heartbeatIntervalMs_ = other.heartbeatIntervalMs_;
      idleTimeoutMs_ = other.idleTimeoutMs_;
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamServerEventsResponse Clone() {
      return new StreamServerEventsResponse(this);
    }

    /// <summary>Field number for the "EventId" field.</summary>
    public const int EventIdFieldNumber = 1;
    private long eventId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long EventId {
      get { return eventId_; }
      set {
        eventId_ = value;
      }
    }

    /// <summary>Field number for the "Channel" field.</summary>
    public const int ChannelFieldNumber = 2;
    private string channel_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Channel {
      get { return channel_; }
      set {
        channel_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Selector" field.</summary>
    public const int SelectorFieldNumber = 4;
    private string selector_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Selector {
      get { return selector_; }
      set {
        selector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Json" field.</summary>
    public const int JsonFieldNumber = 5;
    private string json_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Json {
      get { return json_; }
      set {
        json_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Op" field.</summary>
    public const int OpFieldNumber = 6;
    private string op_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Op {
      get { return op_; }
      set {
        op_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Target" field.</summary>
    public const int TargetFieldNumber = 7;
    private string target_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Target {
      get { return target_; }
      set {
        target_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CssSelector" field.</summary>
    public const int CssSelectorFieldNumber = 8;
    private string cssSelector_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CssSelector {
      get { return cssSelector_; }
      set {
        cssSelector_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 9;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 74);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "UserId" field.</summary>
    public const int UserIdFieldNumber = 10;
    private string userId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserId {
      get { return userId_; }
      set {
        userId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DisplayName" field.</summary>
    public const int DisplayNameFieldNumber = 11;
    private string displayName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DisplayName {
      get { return displayName_; }
      set {
        displayName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ProfileUrl" field.</summary>
    public const int ProfileUrlFieldNumber = 12;
    private string profileUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ProfileUrl {
      get { return profileUrl_; }
      set {
        profileUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "IsAuthenticated" field.</summary>
    public const int IsAuthenticatedFieldNumber = 13;
    private bool isAuthenticated_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsAuthenticated {
      get { return isAuthenticated_; }
      set {
        isAuthenticated_ = value;
      }
    }

    /// <summary>Field number for the "Channels" field.</summary>
    public const int ChannelsFieldNumber = 14;
    private static readonly pb::FieldCodec<string> _repeated_channels_codec
        = pb::FieldCodec.ForString(114);
    private readonly pbc::RepeatedField<string> channels_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Channels {
      get { return channels_; }
    }

    /// <summary>Field number for the "CreatedAt" field.</summary>
    public const int CreatedAtFieldNumber = 15;
    private long createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 21;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UnRegisterUrl" field.</summary>
    public const int UnRegisterUrlFieldNumber = 22;
    private string unRegisterUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UnRegisterUrl {
      get { return unRegisterUrl_; }
      set {
        unRegisterUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "UpdateSubscriberUrl" field.</summary>
    public const int UpdateSubscriberUrlFieldNumber = 23;
    private string updateSubscriberUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UpdateSubscriberUrl {
      get { return updateSubscriberUrl_; }
      set {
        updateSubscriberUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HeartbeatUrl" field.</summary>
    public const int HeartbeatUrlFieldNumber = 24;
    private string heartbeatUrl_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HeartbeatUrl {
      get { return heartbeatUrl_; }
      set {
        heartbeatUrl_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "HeartbeatIntervalMs" field.</summary>
    public const int HeartbeatIntervalMsFieldNumber = 25;
    private long heartbeatIntervalMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HeartbeatIntervalMs {
      get { return heartbeatIntervalMs_; }
      set {
        heartbeatIntervalMs_ = value;
      }
    }

    /// <summary>Field number for the "IdleTimeoutMs" field.</summary>
    public const int IdleTimeoutMsFieldNumber = 26;
    private long idleTimeoutMs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long IdleTimeoutMs {
      get { return idleTimeoutMs_; }
      set {
        idleTimeoutMs_ = value;
      }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 30;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamServerEventsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamServerEventsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventId != other.EventId) return false;
      if (Channel != other.Channel) return false;
      if (Selector != other.Selector) return false;
      if (Json != other.Json) return false;
      if (Op != other.Op) return false;
      if (Target != other.Target) return false;
      if (CssSelector != other.CssSelector) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (UserId != other.UserId) return false;
      if (DisplayName != other.DisplayName) return false;
      if (ProfileUrl != other.ProfileUrl) return false;
      if (IsAuthenticated != other.IsAuthenticated) return false;
      if(!channels_.Equals(other.channels_)) return false;
      if (CreatedAt != other.CreatedAt) return false;
      if (Id != other.Id) return false;
      if (UnRegisterUrl != other.UnRegisterUrl) return false;
      if (UpdateSubscriberUrl != other.UpdateSubscriberUrl) return false;
      if (HeartbeatUrl != other.HeartbeatUrl) return false;
      if (HeartbeatIntervalMs != other.HeartbeatIntervalMs) return false;
      if (IdleTimeoutMs != other.IdleTimeoutMs) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventId != 0L) hash ^= EventId.GetHashCode();
      if (Channel.Length != 0) hash ^= Channel.GetHashCode();
      if (Selector.Length != 0) hash ^= Selector.GetHashCode();
      if (Json.Length != 0) hash ^= Json.GetHashCode();
      if (Op.Length != 0) hash ^= Op.GetHashCode();
      if (Target.Length != 0) hash ^= Target.GetHashCode();
      if (CssSelector.Length != 0) hash ^= CssSelector.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (UserId.Length != 0) hash ^= UserId.GetHashCode();
      if (DisplayName.Length != 0) hash ^= DisplayName.GetHashCode();
      if (ProfileUrl.Length != 0) hash ^= ProfileUrl.GetHashCode();
      if (IsAuthenticated != false) hash ^= IsAuthenticated.GetHashCode();
      hash ^= channels_.GetHashCode();
      if (CreatedAt != 0L) hash ^= CreatedAt.GetHashCode();
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (UnRegisterUrl.Length != 0) hash ^= UnRegisterUrl.GetHashCode();
      if (UpdateSubscriberUrl.Length != 0) hash ^= UpdateSubscriberUrl.GetHashCode();
      if (HeartbeatUrl.Length != 0) hash ^= HeartbeatUrl.GetHashCode();
      if (HeartbeatIntervalMs != 0L) hash ^= HeartbeatIntervalMs.GetHashCode();
      if (IdleTimeoutMs != 0L) hash ^= IdleTimeoutMs.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(EventId);
      }
      if (Channel.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Channel);
      }
      if (Selector.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Selector);
      }
      if (Json.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Json);
      }
      if (Op.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Op);
      }
      if (Target.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Target);
      }
      if (CssSelector.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(CssSelector);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (UserId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(UserId);
      }
      if (DisplayName.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(DisplayName);
      }
      if (ProfileUrl.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ProfileUrl);
      }
      if (IsAuthenticated != false) {
        output.WriteRawTag(104);
        output.WriteBool(IsAuthenticated);
      }
      channels_.WriteTo(output, _repeated_channels_codec);
      if (CreatedAt != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(CreatedAt);
      }
      if (Id.Length != 0) {
        output.WriteRawTag(170, 1);
        output.WriteString(Id);
      }
      if (UnRegisterUrl.Length != 0) {
        output.WriteRawTag(178, 1);
        output.WriteString(UnRegisterUrl);
      }
      if (UpdateSubscriberUrl.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteString(UpdateSubscriberUrl);
      }
      if (HeartbeatUrl.Length != 0) {
        output.WriteRawTag(194, 1);
        output.WriteString(HeartbeatUrl);
      }
      if (HeartbeatIntervalMs != 0L) {
        output.WriteRawTag(200, 1);
        output.WriteInt64(HeartbeatIntervalMs);
      }
      if (IdleTimeoutMs != 0L) {
        output.WriteRawTag(208, 1);
        output.WriteInt64(IdleTimeoutMs);
      }
      if (responseStatus_ != null) {
        output.WriteRawTag(242, 1);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(EventId);
      }
      if (Channel.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Channel);
      }
      if (Selector.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Selector);
      }
      if (Json.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Json);
      }
      if (Op.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Op);
      }
      if (Target.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Target);
      }
      if (CssSelector.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CssSelector);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (UserId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserId);
      }
      if (DisplayName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DisplayName);
      }
      if (ProfileUrl.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ProfileUrl);
      }
      if (IsAuthenticated != false) {
        size += 1 + 1;
      }
      size += channels_.CalculateSize(_repeated_channels_codec);
      if (CreatedAt != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreatedAt);
      }
      if (Id.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (UnRegisterUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UnRegisterUrl);
      }
      if (UpdateSubscriberUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(UpdateSubscriberUrl);
      }
      if (HeartbeatUrl.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(HeartbeatUrl);
      }
      if (HeartbeatIntervalMs != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(HeartbeatIntervalMs);
      }
      if (IdleTimeoutMs != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(IdleTimeoutMs);
      }
      if (responseStatus_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamServerEventsResponse other) {
      if (other == null) {
        return;
      }
      if (other.EventId != 0L) {
        EventId = other.EventId;
      }
      if (other.Channel.Length != 0) {
        Channel = other.Channel;
      }
      if (other.Selector.Length != 0) {
        Selector = other.Selector;
      }
      if (other.Json.Length != 0) {
        Json = other.Json;
      }
      if (other.Op.Length != 0) {
        Op = other.Op;
      }
      if (other.Target.Length != 0) {
        Target = other.Target;
      }
      if (other.CssSelector.Length != 0) {
        CssSelector = other.CssSelector;
      }
      meta_.Add(other.meta_);
      if (other.UserId.Length != 0) {
        UserId = other.UserId;
      }
      if (other.DisplayName.Length != 0) {
        DisplayName = other.DisplayName;
      }
      if (other.ProfileUrl.Length != 0) {
        ProfileUrl = other.ProfileUrl;
      }
      if (other.IsAuthenticated != false) {
        IsAuthenticated = other.IsAuthenticated;
      }
      channels_.Add(other.channels_);
      if (other.CreatedAt != 0L) {
        CreatedAt = other.CreatedAt;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.UnRegisterUrl.Length != 0) {
        UnRegisterUrl = other.UnRegisterUrl;
      }
      if (other.UpdateSubscriberUrl.Length != 0) {
        UpdateSubscriberUrl = other.UpdateSubscriberUrl;
      }
      if (other.HeartbeatUrl.Length != 0) {
        HeartbeatUrl = other.HeartbeatUrl;
      }
      if (other.HeartbeatIntervalMs != 0L) {
        HeartbeatIntervalMs = other.HeartbeatIntervalMs;
      }
      if (other.IdleTimeoutMs != 0L) {
        IdleTimeoutMs = other.IdleTimeoutMs;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventId = input.ReadInt64();
            break;
          }
          case 18: {
            Channel = input.ReadString();
            break;
          }
          case 34: {
            Selector = input.ReadString();
            break;
          }
          case 42: {
            Json = input.ReadString();
            break;
          }
          case 50: {
            Op = input.ReadString();
            break;
          }
          case 58: {
            Target = input.ReadString();
            break;
          }
          case 66: {
            CssSelector = input.ReadString();
            break;
          }
          case 74: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 82: {
            UserId = input.ReadString();
            break;
          }
          case 90: {
            DisplayName = input.ReadString();
            break;
          }
          case 98: {
            ProfileUrl = input.ReadString();
            break;
          }
          case 104: {
            IsAuthenticated = input.ReadBool();
            break;
          }
          case 114: {
            channels_.AddEntriesFrom(input, _repeated_channels_codec);
            break;
          }
          case 120: {
            CreatedAt = input.ReadInt64();
            break;
          }
          case 170: {
            Id = input.ReadString();
            break;
          }
          case 178: {
            UnRegisterUrl = input.ReadString();
            break;
          }
          case 186: {
            UpdateSubscriberUrl = input.ReadString();
            break;
          }
          case 194: {
            HeartbeatUrl = input.ReadString();
            break;
          }
          case 200: {
            HeartbeatIntervalMs = input.ReadInt64();
            break;
          }
          case 208: {
            IdleTimeoutMs = input.ReadInt64();
            break;
          }
          case 242: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Throw : pb::IMessage<Throw> {
    private static readonly pb::MessageParser<Throw> _parser = new pb::MessageParser<Throw>(() => new Throw());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Throw> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[133]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Throw() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Throw(Throw other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Throw Clone() {
      return new Throw(this);
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Throw);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Throw other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Throw other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ThrowCustom : pb::IMessage<ThrowCustom> {
    private static readonly pb::MessageParser<ThrowCustom> _parser = new pb::MessageParser<ThrowCustom>(() => new ThrowCustom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThrowCustom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[134]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustom(ThrowCustom other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustom Clone() {
      return new ThrowCustom(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThrowCustom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThrowCustom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThrowCustom other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  public sealed partial class ThrowCustomResponse : pb::IMessage<ThrowCustomResponse> {
    private static readonly pb::MessageParser<ThrowCustomResponse> _parser = new pb::MessageParser<ThrowCustomResponse>(() => new ThrowCustomResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThrowCustomResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[135]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustomResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustomResponse(ThrowCustomResponse other) : this() {
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowCustomResponse Clone() {
      return new ThrowCustomResponse(this);
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 1;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThrowCustomResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThrowCustomResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (responseStatus_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThrowCustomResponse other) {
      if (other == null) {
        return;
      }
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ThrowVoid : pb::IMessage<ThrowVoid> {
    private static readonly pb::MessageParser<ThrowVoid> _parser = new pb::MessageParser<ThrowVoid>(() => new ThrowVoid());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ThrowVoid> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[136]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowVoid() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowVoid(ThrowVoid other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ThrowVoid Clone() {
      return new ThrowVoid(this);
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ThrowVoid);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ThrowVoid other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ThrowVoid other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class Todo : pb::IMessage<Todo> {
    private static readonly pb::MessageParser<Todo> _parser = new pb::MessageParser<Todo>(() => new Todo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Todo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[137]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo(Todo other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      order_ = other.order_;
      completed_ = other.completed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Todo Clone() {
      return new Todo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 3;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "Completed" field.</summary>
    public const int CompletedFieldNumber = 4;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Todo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Todo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (Order != other.Order) return false;
      if (Completed != other.Completed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Order != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Order);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Todo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            Order = input.ReadInt32();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TriggerValidators : pb::IMessage<TriggerValidators> {
    private static readonly pb::MessageParser<TriggerValidators> _parser = new pb::MessageParser<TriggerValidators>(() => new TriggerValidators());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TriggerValidators> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[138]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerValidators() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerValidators(TriggerValidators other) : this() {
      creditCard_ = other.creditCard_;
      email_ = other.email_;
      empty_ = other.empty_;
      equal_ = other.equal_;
      exclusiveBetween_ = other.exclusiveBetween_;
      greaterThanOrEqual_ = other.greaterThanOrEqual_;
      greaterThan_ = other.greaterThan_;
      inclusiveBetween_ = other.inclusiveBetween_;
      length_ = other.length_;
      lessThanOrEqual_ = other.lessThanOrEqual_;
      lessThan_ = other.lessThan_;
      notEmpty_ = other.notEmpty_;
      notEqual_ = other.notEqual_;
      null_ = other.null_;
      regularExpression_ = other.regularExpression_;
      scalePrecision_ = other.scalePrecision_ != null ? other.scalePrecision_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TriggerValidators Clone() {
      return new TriggerValidators(this);
    }

    /// <summary>Field number for the "CreditCard" field.</summary>
    public const int CreditCardFieldNumber = 1;
    private string creditCard_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string CreditCard {
      get { return creditCard_; }
      set {
        creditCard_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Email" field.</summary>
    public const int EmailFieldNumber = 2;
    private string email_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Email {
      get { return email_; }
      set {
        email_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Empty" field.</summary>
    public const int EmptyFieldNumber = 3;
    private string empty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Empty {
      get { return empty_; }
      set {
        empty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Equal" field.</summary>
    public const int EqualFieldNumber = 4;
    private string equal_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Equal {
      get { return equal_; }
      set {
        equal_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExclusiveBetween" field.</summary>
    public const int ExclusiveBetweenFieldNumber = 5;
    private int exclusiveBetween_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ExclusiveBetween {
      get { return exclusiveBetween_; }
      set {
        exclusiveBetween_ = value;
      }
    }

    /// <summary>Field number for the "GreaterThanOrEqual" field.</summary>
    public const int GreaterThanOrEqualFieldNumber = 6;
    private int greaterThanOrEqual_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GreaterThanOrEqual {
      get { return greaterThanOrEqual_; }
      set {
        greaterThanOrEqual_ = value;
      }
    }

    /// <summary>Field number for the "GreaterThan" field.</summary>
    public const int GreaterThanFieldNumber = 7;
    private int greaterThan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int GreaterThan {
      get { return greaterThan_; }
      set {
        greaterThan_ = value;
      }
    }

    /// <summary>Field number for the "InclusiveBetween" field.</summary>
    public const int InclusiveBetweenFieldNumber = 8;
    private int inclusiveBetween_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int InclusiveBetween {
      get { return inclusiveBetween_; }
      set {
        inclusiveBetween_ = value;
      }
    }

    /// <summary>Field number for the "Length" field.</summary>
    public const int LengthFieldNumber = 9;
    private string length_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Length {
      get { return length_; }
      set {
        length_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "LessThanOrEqual" field.</summary>
    public const int LessThanOrEqualFieldNumber = 10;
    private int lessThanOrEqual_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LessThanOrEqual {
      get { return lessThanOrEqual_; }
      set {
        lessThanOrEqual_ = value;
      }
    }

    /// <summary>Field number for the "LessThan" field.</summary>
    public const int LessThanFieldNumber = 11;
    private int lessThan_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int LessThan {
      get { return lessThan_; }
      set {
        lessThan_ = value;
      }
    }

    /// <summary>Field number for the "NotEmpty" field.</summary>
    public const int NotEmptyFieldNumber = 12;
    private string notEmpty_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotEmpty {
      get { return notEmpty_; }
      set {
        notEmpty_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "NotEqual" field.</summary>
    public const int NotEqualFieldNumber = 13;
    private string notEqual_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NotEqual {
      get { return notEqual_; }
      set {
        notEqual_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Null" field.</summary>
    public const int NullFieldNumber = 14;
    private string null_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Null {
      get { return null_; }
      set {
        null_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "RegularExpression" field.</summary>
    public const int RegularExpressionFieldNumber = 15;
    private string regularExpression_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegularExpression {
      get { return regularExpression_; }
      set {
        regularExpression_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ScalePrecision" field.</summary>
    public const int ScalePrecisionFieldNumber = 16;
    private global::ProtoBuf.Bcl.Decimal scalePrecision_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.Decimal ScalePrecision {
      get { return scalePrecision_; }
      set {
        scalePrecision_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TriggerValidators);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TriggerValidators other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CreditCard != other.CreditCard) return false;
      if (Email != other.Email) return false;
      if (Empty != other.Empty) return false;
      if (Equal != other.Equal) return false;
      if (ExclusiveBetween != other.ExclusiveBetween) return false;
      if (GreaterThanOrEqual != other.GreaterThanOrEqual) return false;
      if (GreaterThan != other.GreaterThan) return false;
      if (InclusiveBetween != other.InclusiveBetween) return false;
      if (Length != other.Length) return false;
      if (LessThanOrEqual != other.LessThanOrEqual) return false;
      if (LessThan != other.LessThan) return false;
      if (NotEmpty != other.NotEmpty) return false;
      if (NotEqual != other.NotEqual) return false;
      if (Null != other.Null) return false;
      if (RegularExpression != other.RegularExpression) return false;
      if (!object.Equals(ScalePrecision, other.ScalePrecision)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CreditCard.Length != 0) hash ^= CreditCard.GetHashCode();
      if (Email.Length != 0) hash ^= Email.GetHashCode();
      if (Empty.Length != 0) hash ^= Empty.GetHashCode();
      if (Equal.Length != 0) hash ^= Equal.GetHashCode();
      if (ExclusiveBetween != 0) hash ^= ExclusiveBetween.GetHashCode();
      if (GreaterThanOrEqual != 0) hash ^= GreaterThanOrEqual.GetHashCode();
      if (GreaterThan != 0) hash ^= GreaterThan.GetHashCode();
      if (InclusiveBetween != 0) hash ^= InclusiveBetween.GetHashCode();
      if (Length.Length != 0) hash ^= Length.GetHashCode();
      if (LessThanOrEqual != 0) hash ^= LessThanOrEqual.GetHashCode();
      if (LessThan != 0) hash ^= LessThan.GetHashCode();
      if (NotEmpty.Length != 0) hash ^= NotEmpty.GetHashCode();
      if (NotEqual.Length != 0) hash ^= NotEqual.GetHashCode();
      if (Null.Length != 0) hash ^= Null.GetHashCode();
      if (RegularExpression.Length != 0) hash ^= RegularExpression.GetHashCode();
      if (scalePrecision_ != null) hash ^= ScalePrecision.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CreditCard.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(CreditCard);
      }
      if (Email.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Email);
      }
      if (Empty.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Empty);
      }
      if (Equal.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Equal);
      }
      if (ExclusiveBetween != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(ExclusiveBetween);
      }
      if (GreaterThanOrEqual != 0) {
        output.WriteRawTag(48);
        output.WriteInt32(GreaterThanOrEqual);
      }
      if (GreaterThan != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(GreaterThan);
      }
      if (InclusiveBetween != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(InclusiveBetween);
      }
      if (Length.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(Length);
      }
      if (LessThanOrEqual != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(LessThanOrEqual);
      }
      if (LessThan != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(LessThan);
      }
      if (NotEmpty.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(NotEmpty);
      }
      if (NotEqual.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(NotEqual);
      }
      if (Null.Length != 0) {
        output.WriteRawTag(114);
        output.WriteString(Null);
      }
      if (RegularExpression.Length != 0) {
        output.WriteRawTag(122);
        output.WriteString(RegularExpression);
      }
      if (scalePrecision_ != null) {
        output.WriteRawTag(130, 1);
        output.WriteMessage(ScalePrecision);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CreditCard.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(CreditCard);
      }
      if (Email.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Email);
      }
      if (Empty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Empty);
      }
      if (Equal.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Equal);
      }
      if (ExclusiveBetween != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ExclusiveBetween);
      }
      if (GreaterThanOrEqual != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GreaterThanOrEqual);
      }
      if (GreaterThan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GreaterThan);
      }
      if (InclusiveBetween != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(InclusiveBetween);
      }
      if (Length.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Length);
      }
      if (LessThanOrEqual != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LessThanOrEqual);
      }
      if (LessThan != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LessThan);
      }
      if (NotEmpty.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotEmpty);
      }
      if (NotEqual.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NotEqual);
      }
      if (Null.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Null);
      }
      if (RegularExpression.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegularExpression);
      }
      if (scalePrecision_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(ScalePrecision);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TriggerValidators other) {
      if (other == null) {
        return;
      }
      if (other.CreditCard.Length != 0) {
        CreditCard = other.CreditCard;
      }
      if (other.Email.Length != 0) {
        Email = other.Email;
      }
      if (other.Empty.Length != 0) {
        Empty = other.Empty;
      }
      if (other.Equal.Length != 0) {
        Equal = other.Equal;
      }
      if (other.ExclusiveBetween != 0) {
        ExclusiveBetween = other.ExclusiveBetween;
      }
      if (other.GreaterThanOrEqual != 0) {
        GreaterThanOrEqual = other.GreaterThanOrEqual;
      }
      if (other.GreaterThan != 0) {
        GreaterThan = other.GreaterThan;
      }
      if (other.InclusiveBetween != 0) {
        InclusiveBetween = other.InclusiveBetween;
      }
      if (other.Length.Length != 0) {
        Length = other.Length;
      }
      if (other.LessThanOrEqual != 0) {
        LessThanOrEqual = other.LessThanOrEqual;
      }
      if (other.LessThan != 0) {
        LessThan = other.LessThan;
      }
      if (other.NotEmpty.Length != 0) {
        NotEmpty = other.NotEmpty;
      }
      if (other.NotEqual.Length != 0) {
        NotEqual = other.NotEqual;
      }
      if (other.Null.Length != 0) {
        Null = other.Null;
      }
      if (other.RegularExpression.Length != 0) {
        RegularExpression = other.RegularExpression;
      }
      if (other.scalePrecision_ != null) {
        if (scalePrecision_ == null) {
          ScalePrecision = new global::ProtoBuf.Bcl.Decimal();
        }
        ScalePrecision.MergeFrom(other.ScalePrecision);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            CreditCard = input.ReadString();
            break;
          }
          case 18: {
            Email = input.ReadString();
            break;
          }
          case 26: {
            Empty = input.ReadString();
            break;
          }
          case 34: {
            Equal = input.ReadString();
            break;
          }
          case 40: {
            ExclusiveBetween = input.ReadInt32();
            break;
          }
          case 48: {
            GreaterThanOrEqual = input.ReadInt32();
            break;
          }
          case 56: {
            GreaterThan = input.ReadInt32();
            break;
          }
          case 64: {
            InclusiveBetween = input.ReadInt32();
            break;
          }
          case 74: {
            Length = input.ReadString();
            break;
          }
          case 80: {
            LessThanOrEqual = input.ReadInt32();
            break;
          }
          case 88: {
            LessThan = input.ReadInt32();
            break;
          }
          case 98: {
            NotEmpty = input.ReadString();
            break;
          }
          case 106: {
            NotEqual = input.ReadString();
            break;
          }
          case 114: {
            Null = input.ReadString();
            break;
          }
          case 122: {
            RegularExpression = input.ReadString();
            break;
          }
          case 130: {
            if (scalePrecision_ == null) {
              ScalePrecision = new global::ProtoBuf.Bcl.Decimal();
            }
            input.ReadMessage(ScalePrecision);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TypeWithEnum : pb::IMessage<TypeWithEnum> {
    private static readonly pb::MessageParser<TypeWithEnum> _parser = new pb::MessageParser<TypeWithEnum>(() => new TypeWithEnum());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TypeWithEnum> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[139]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeWithEnum() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeWithEnum(TypeWithEnum other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      someEnum_ = other.someEnum_;
      someEnumAsInt_ = other.someEnumAsInt_;
      nSomeEnum_ = other.nSomeEnum_;
      nSomeEnumAsInt_ = other.nSomeEnumAsInt_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TypeWithEnum Clone() {
      return new TypeWithEnum(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "SomeEnum" field.</summary>
    public const int SomeEnumFieldNumber = 3;
    private global::ServiceStack.Extensions.Tests.Protoc.SomeEnum someEnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.SomeEnum SomeEnum {
      get { return someEnum_; }
      set {
        someEnum_ = value;
      }
    }

    /// <summary>Field number for the "SomeEnumAsInt" field.</summary>
    public const int SomeEnumAsIntFieldNumber = 4;
    private global::ServiceStack.Extensions.Tests.Protoc.SomeEnumAsInt someEnumAsInt_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.SomeEnumAsInt SomeEnumAsInt {
      get { return someEnumAsInt_; }
      set {
        someEnumAsInt_ = value;
      }
    }

    /// <summary>Field number for the "NSomeEnum" field.</summary>
    public const int NSomeEnumFieldNumber = 5;
    private global::ServiceStack.Extensions.Tests.Protoc.SomeEnum nSomeEnum_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.SomeEnum NSomeEnum {
      get { return nSomeEnum_; }
      set {
        nSomeEnum_ = value;
      }
    }

    /// <summary>Field number for the "NSomeEnumAsInt" field.</summary>
    public const int NSomeEnumAsIntFieldNumber = 6;
    private global::ServiceStack.Extensions.Tests.Protoc.SomeEnumAsInt nSomeEnumAsInt_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.SomeEnumAsInt NSomeEnumAsInt {
      get { return nSomeEnumAsInt_; }
      set {
        nSomeEnumAsInt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TypeWithEnum);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TypeWithEnum other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if (SomeEnum != other.SomeEnum) return false;
      if (SomeEnumAsInt != other.SomeEnumAsInt) return false;
      if (NSomeEnum != other.NSomeEnum) return false;
      if (NSomeEnumAsInt != other.NSomeEnumAsInt) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SomeEnum != 0) hash ^= SomeEnum.GetHashCode();
      if (SomeEnumAsInt != 0) hash ^= SomeEnumAsInt.GetHashCode();
      if (NSomeEnum != 0) hash ^= NSomeEnum.GetHashCode();
      if (NSomeEnumAsInt != 0) hash ^= NSomeEnumAsInt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (SomeEnum != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) SomeEnum);
      }
      if (SomeEnumAsInt != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SomeEnumAsInt);
      }
      if (NSomeEnum != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) NSomeEnum);
      }
      if (NSomeEnumAsInt != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) NSomeEnumAsInt);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SomeEnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SomeEnum);
      }
      if (SomeEnumAsInt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SomeEnumAsInt);
      }
      if (NSomeEnum != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NSomeEnum);
      }
      if (NSomeEnumAsInt != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) NSomeEnumAsInt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TypeWithEnum other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SomeEnum != 0) {
        SomeEnum = other.SomeEnum;
      }
      if (other.SomeEnumAsInt != 0) {
        SomeEnumAsInt = other.SomeEnumAsInt;
      }
      if (other.NSomeEnum != 0) {
        NSomeEnum = other.NSomeEnum;
      }
      if (other.NSomeEnumAsInt != 0) {
        NSomeEnumAsInt = other.NSomeEnumAsInt;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            SomeEnum = (global::ServiceStack.Extensions.Tests.Protoc.SomeEnum) input.ReadEnum();
            break;
          }
          case 32: {
            SomeEnumAsInt = (global::ServiceStack.Extensions.Tests.Protoc.SomeEnumAsInt) input.ReadEnum();
            break;
          }
          case 40: {
            NSomeEnum = (global::ServiceStack.Extensions.Tests.Protoc.SomeEnum) input.ReadEnum();
            break;
          }
          case 48: {
            NSomeEnumAsInt = (global::ServiceStack.Extensions.Tests.Protoc.SomeEnumAsInt) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnAssignRoles : pb::IMessage<UnAssignRoles> {
    private static readonly pb::MessageParser<UnAssignRoles> _parser = new pb::MessageParser<UnAssignRoles>(() => new UnAssignRoles());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnAssignRoles> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[140]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRoles() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRoles(UnAssignRoles other) : this() {
      userName_ = other.userName_;
      permissions_ = other.permissions_.Clone();
      roles_ = other.roles_.Clone();
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRoles Clone() {
      return new UnAssignRoles(this);
    }

    /// <summary>Field number for the "UserName" field.</summary>
    public const int UserNameFieldNumber = 1;
    private string userName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UserName {
      get { return userName_; }
      set {
        userName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Permissions" field.</summary>
    public const int PermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_permissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> permissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "Roles" field.</summary>
    public const int RolesFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_roles_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> roles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Roles {
      get { return roles_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnAssignRoles);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnAssignRoles other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (UserName != other.UserName) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if(!roles_.Equals(other.roles_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (UserName.Length != 0) hash ^= UserName.GetHashCode();
      hash ^= permissions_.GetHashCode();
      hash ^= roles_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (UserName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(UserName);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      roles_.WriteTo(output, _repeated_roles_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (UserName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UserName);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      size += roles_.CalculateSize(_repeated_roles_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnAssignRoles other) {
      if (other == null) {
        return;
      }
      if (other.UserName.Length != 0) {
        UserName = other.UserName;
      }
      permissions_.Add(other.permissions_);
      roles_.Add(other.roles_);
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            UserName = input.ReadString();
            break;
          }
          case 18: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 26: {
            roles_.AddEntriesFrom(input, _repeated_roles_codec);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UnAssignRolesResponse : pb::IMessage<UnAssignRolesResponse> {
    private static readonly pb::MessageParser<UnAssignRolesResponse> _parser = new pb::MessageParser<UnAssignRolesResponse>(() => new UnAssignRolesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UnAssignRolesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[141]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRolesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRolesResponse(UnAssignRolesResponse other) : this() {
      allRoles_ = other.allRoles_.Clone();
      allPermissions_ = other.allPermissions_.Clone();
      meta_ = other.meta_.Clone();
      responseStatus_ = other.responseStatus_ != null ? other.responseStatus_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UnAssignRolesResponse Clone() {
      return new UnAssignRolesResponse(this);
    }

    /// <summary>Field number for the "AllRoles" field.</summary>
    public const int AllRolesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_allRoles_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> allRoles_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllRoles {
      get { return allRoles_; }
    }

    /// <summary>Field number for the "AllPermissions" field.</summary>
    public const int AllPermissionsFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_allPermissions_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> allPermissions_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> AllPermissions {
      get { return allPermissions_; }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 3;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 26);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    /// <summary>Field number for the "ResponseStatus" field.</summary>
    public const int ResponseStatusFieldNumber = 4;
    private global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus responseStatus_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus ResponseStatus {
      get { return responseStatus_; }
      set {
        responseStatus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UnAssignRolesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UnAssignRolesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!allRoles_.Equals(other.allRoles_)) return false;
      if(!allPermissions_.Equals(other.allPermissions_)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      if (!object.Equals(ResponseStatus, other.ResponseStatus)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= allRoles_.GetHashCode();
      hash ^= allPermissions_.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (responseStatus_ != null) hash ^= ResponseStatus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      allRoles_.WriteTo(output, _repeated_allRoles_codec);
      allPermissions_.WriteTo(output, _repeated_allPermissions_codec);
      meta_.WriteTo(output, _map_meta_codec);
      if (responseStatus_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ResponseStatus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += allRoles_.CalculateSize(_repeated_allRoles_codec);
      size += allPermissions_.CalculateSize(_repeated_allPermissions_codec);
      size += meta_.CalculateSize(_map_meta_codec);
      if (responseStatus_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ResponseStatus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UnAssignRolesResponse other) {
      if (other == null) {
        return;
      }
      allRoles_.Add(other.allRoles_);
      allPermissions_.Add(other.allPermissions_);
      meta_.Add(other.meta_);
      if (other.responseStatus_ != null) {
        if (responseStatus_ == null) {
          ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
        }
        ResponseStatus.MergeFrom(other.ResponseStatus);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            allRoles_.AddEntriesFrom(input, _repeated_allRoles_codec);
            break;
          }
          case 18: {
            allPermissions_.AddEntriesFrom(input, _repeated_allPermissions_codec);
            break;
          }
          case 26: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
          case 34: {
            if (responseStatus_ == null) {
              ResponseStatus = new global::ServiceStack.Extensions.Tests.Protoc.ResponseStatus();
            }
            input.ReadMessage(ResponseStatus);
            break;
          }
        }
      }
    }

  }

  public sealed partial class UpdateTodo : pb::IMessage<UpdateTodo> {
    private static readonly pb::MessageParser<UpdateTodo> _parser = new pb::MessageParser<UpdateTodo>(() => new UpdateTodo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateTodo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[142]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodo(UpdateTodo other) : this() {
      id_ = other.id_;
      title_ = other.title_;
      order_ = other.order_;
      completed_ = other.completed_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateTodo Clone() {
      return new UpdateTodo(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private long id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Title" field.</summary>
    public const int TitleFieldNumber = 2;
    private string title_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Title {
      get { return title_; }
      set {
        title_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Order" field.</summary>
    public const int OrderFieldNumber = 3;
    private int order_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Order {
      get { return order_; }
      set {
        order_ = value;
      }
    }

    /// <summary>Field number for the "Completed" field.</summary>
    public const int CompletedFieldNumber = 4;
    private bool completed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Completed {
      get { return completed_; }
      set {
        completed_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateTodo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateTodo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Title != other.Title) return false;
      if (Order != other.Order) return false;
      if (Completed != other.Completed) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0L) hash ^= Id.GetHashCode();
      if (Title.Length != 0) hash ^= Title.GetHashCode();
      if (Order != 0) hash ^= Order.GetHashCode();
      if (Completed != false) hash ^= Completed.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Id);
      }
      if (Title.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Title);
      }
      if (Order != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Order);
      }
      if (Completed != false) {
        output.WriteRawTag(32);
        output.WriteBool(Completed);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Id);
      }
      if (Title.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Title);
      }
      if (Order != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Order);
      }
      if (Completed != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateTodo other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0L) {
        Id = other.Id;
      }
      if (other.Title.Length != 0) {
        Title = other.Title;
      }
      if (other.Order != 0) {
        Order = other.Order;
      }
      if (other.Completed != false) {
        Completed = other.Completed;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt64();
            break;
          }
          case 18: {
            Title = input.ReadString();
            break;
          }
          case 24: {
            Order = input.ReadInt32();
            break;
          }
          case 32: {
            Completed = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserApiKey : pb::IMessage<UserApiKey> {
    private static readonly pb::MessageParser<UserApiKey> _parser = new pb::MessageParser<UserApiKey>(() => new UserApiKey());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserApiKey> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ServiceStack.Extensions.Tests.Protoc.ServicesReflection.Descriptor.MessageTypes[143]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserApiKey() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserApiKey(UserApiKey other) : this() {
      key_ = other.key_;
      keyType_ = other.keyType_;
      expiryDate_ = other.expiryDate_ != null ? other.expiryDate_.Clone() : null;
      meta_ = other.meta_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserApiKey Clone() {
      return new UserApiKey(this);
    }

    /// <summary>Field number for the "Key" field.</summary>
    public const int KeyFieldNumber = 1;
    private string key_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Key {
      get { return key_; }
      set {
        key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "KeyType" field.</summary>
    public const int KeyTypeFieldNumber = 2;
    private string keyType_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string KeyType {
      get { return keyType_; }
      set {
        keyType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ExpiryDate" field.</summary>
    public const int ExpiryDateFieldNumber = 3;
    private global::ProtoBuf.Bcl.DateTime expiryDate_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ProtoBuf.Bcl.DateTime ExpiryDate {
      get { return expiryDate_; }
      set {
        expiryDate_ = value;
      }
    }

    /// <summary>Field number for the "Meta" field.</summary>
    public const int MetaFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_meta_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> meta_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Meta {
      get { return meta_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserApiKey);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserApiKey other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Key != other.Key) return false;
      if (KeyType != other.KeyType) return false;
      if (!object.Equals(ExpiryDate, other.ExpiryDate)) return false;
      if (!Meta.Equals(other.Meta)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Key.Length != 0) hash ^= Key.GetHashCode();
      if (KeyType.Length != 0) hash ^= KeyType.GetHashCode();
      if (expiryDate_ != null) hash ^= ExpiryDate.GetHashCode();
      hash ^= Meta.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Key.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Key);
      }
      if (KeyType.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(KeyType);
      }
      if (expiryDate_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(ExpiryDate);
      }
      meta_.WriteTo(output, _map_meta_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Key.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
      }
      if (KeyType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(KeyType);
      }
      if (expiryDate_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExpiryDate);
      }
      size += meta_.CalculateSize(_map_meta_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserApiKey other) {
      if (other == null) {
        return;
      }
      if (other.Key.Length != 0) {
        Key = other.Key;
      }
      if (other.KeyType.Length != 0) {
        KeyType = other.KeyType;
      }
      if (other.expiryDate_ != null) {
        if (expiryDate_ == null) {
          ExpiryDate = new global::ProtoBuf.Bcl.DateTime();
        }
        ExpiryDate.MergeFrom(other.ExpiryDate);
      }
      meta_.Add(other.meta_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Key = input.ReadString();
            break;
          }
          case 18: {
            KeyType = input.ReadString();
            break;
          }
          case 26: {
            if (expiryDate_ == null) {
              ExpiryDate = new global::ProtoBuf.Bcl.DateTime();
            }
            input.ReadMessage(ExpiryDate);
            break;
          }
          case 34: {
            meta_.AddEntriesFrom(input, _map_meta_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
